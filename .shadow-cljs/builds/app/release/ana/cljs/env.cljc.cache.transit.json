["^ ","~:output",["^ ","~:js","goog.provide('cljs.env');\ncljs.env._STAR_compiler_STAR_ = null;\ncljs.env.default_compiler_env = (function cljs$env$default_compiler_env(var_args){\nvar G__27344 = arguments.length;\nswitch (G__27344) {\ncase 0:\nreturn cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n});\n\ncljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1 = (function (options){\nreturn cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null)], null)], null),new cljs.core.Keyword(\"cljs.analyzer\",\"constant-table\",\"cljs.analyzer/constant-table\",-114131889),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"cljs.analyzer\",\"data-readers\",\"cljs.analyzer/data-readers\",1778544933),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"cljs.analyzer\",\"externs\",\"cljs.analyzer/externs\",893359239),null,new cljs.core.Keyword(null,\"options\",\"options\",99638489),options], null)], 0)));\n});\n\ncljs.env.default_compiler_env.cljs$lang$maxFixedArity = 1;\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/env.cljc","~:line",11,"~:column",3,"~:end-line",11,"~:end-column",11,"~:doc","A namespace that exists solely to provide a place for \"compiler\"\nstate that is accessed/maintained by many different components."],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",["~$ensure"]],"~:name","~$cljs.env","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^S","~$goog","^T"],"~:seen",["^K",[]],"~:uses",null,"~:require-macros",["^ ","^S","^S"],"~:form",["~#list",["~$ns","^N",["^Y",["~:refer-clojure","~:exclude",["^L"]]]]],"~:js-deps",["^ "],"~:deps",["^T","^S"]],"^P","^N","~:resource-id",["~:shadow.build.classpath/resource","cljs/env.cljc"],"~:compiled-at",1535913523450,"~:resource-name","cljs/env.cljc","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns ^{:doc \"A namespace that exists solely to provide a place for \\\"compiler\\\"\nstate that is accessed/maintained by many different components.\"}\n  cljs.env\n  #?(:clj (:require [cljs.js-deps :as deps]\n                    [cljs.externs :as externs]))\n  (:refer-clojure :exclude [ensure]))\n\n;; bit of a misnomer, but: an atom containing a map that serves as the bag of\n;; state for the compiler, writ large (including analyzer, emitter, and\n;; optimization stages). Each namespace has its own local var, to accommodate\n;; multiple (lower-level) entry points.  Any state needed by the compiler across\n;; multiple applications should be put into this map/atom.  Aside from\n;; unfortunate current implementation details (e.g. depending on filesystem\n;; state for certain things), the compiler should be idempotent with regard to\n;; the environment passed to any entry point.\n;;\n;; Known slots in the compiler-env map:\n;;\n;; * :options - the [options] map argument, provided to this fn (defaults to {})\n;; * :js-dependency-index - result from calling cljs.js-deps/js-dependency-index\n;;   with [options]\n;; * :cljs.analyzer/constant-table - map of (currently only keyword) constant\n;;   values to fixed ids\n;; * :cljs.analyzer/namespaces - map of symbols to \"namespace\" maps\n;; * :cljs.analyzer/data-readers - literal map of symbols, where the first\n;;   symbol in each pair is a tag that will be recognized by the reader. The\n;;   second symbol in the pair is the fully-qualified name of a Var which will\n;;   be invoked by the reader to parse the form following the tag.\n;; * :cljs.compiler/compiled-cljs - cache of intermediate compilation results\n;;   that speeds incremental builds in conjunction with source map generation\n;; * :cljs.closure/compiled-cljs - cache from js file path to map of\n;;   {:file .. :provides .. :requires ..}\n;;\n;; Note that this var is functionally private to the compiler, and contains\n;; implementation-dependent data.\n(def ^:dynamic *compiler* nil)\n\n(defn default-compiler-env\n  ([] (default-compiler-env {}))\n  ([options]\n   (atom\n     (merge\n       {:cljs.analyzer/namespaces {'cljs.user {:name 'cljs.user}}\n        :cljs.analyzer/constant-table {}\n        :cljs.analyzer/data-readers {}\n        :cljs.analyzer/externs #?(:clj  (when (:infer-externs options)\n                                          (externs/externs-map (:externs-sources options)))\n                                  :cljs nil)\n        :options options}\n       #?@(:clj [(when (= (:target options) :nodejs)\n                   {:node-module-index deps/native-node-modules})\n                 {:js-dependency-index (deps/js-dependency-index options)}])))))\n\n#?(:clj\n   (defmacro with-compiler-env\n     \"Evaluates [body] with [env] bound as the value of the `*compiler*` var in\n   this namespace.\"\n     [env & body]\n     `(let [env# ~env\n            env# (cond\n                   (map? env#) (atom env#)\n                   (and (instance? clojure.lang.Atom env#)\n                        (map? @env#)) env#\n                   :default (throw (IllegalArgumentException.\n                                     (str \"Compiler environment must be a map or atom containing a map, not \"\n                                       (class env#)))))]\n        (binding [*compiler* env#] ~@body))))\n\n#?(:clj\n   (defmacro ensure\n     [& body]\n     `(let [val# *compiler*]\n        (if (nil? val#)\n          (push-thread-bindings\n            (hash-map (var *compiler*) (default-compiler-env))))\n        (try\n          ~@body\n          (finally\n            (if (nil? val#)\n              (pop-thread-bindings)))))))\n","~:reader-features",["^K",["~:cljs"]],"~:source-map",["^ ","~i43",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",1],["^ ","^1=",32,"^1>",1]],"~i15",[["^ ","^1=",0,"^1>",1,"^M","cljs.env/*compiler*"]]],"~i45",["^ ","~i0",[["^ ","^1=",0,"^1>",2],["^ ","^1=",0,"^1>",2],["^ ","^1=",32,"^1>",2],["^ ","^1=",72,"^1>",2,"^M","var_args"],["^ ","^1=",0,"^1>",3],["^ ","^1=",0,"^1>",3],["^ ","^1=",4,"^1>",3,"^M","G__27344"],["^ ","^1=",15,"^1>",3],["^ ","^1=",15,"^1>",3],["^ ","^1=",0,"^1>",4],["^ ","^1=",0,"^1>",4],["^ ","^1=",8,"^1>",4,"^M","G__27344"],["^ ","^1=",5,"^1>",5],["^ ","^1=",0,"^1>",6],["^ ","^1=",7,"^1>",6,"^M","cljs.env/default-compiler-env"],["^ ","^1=",5,"^1>",9],["^ ","^1=",0,"^1>",10],["^ ","^1=",7,"^1>",10,"^M","cljs.env/default-compiler-env"],["^ ","^1=",67,"^1>",10],["^ ","^1=",68,"^1>",10],["^ ","^1=",78,"^1>",10],["^ ","^1=",0,"^1>",14],["^ ","^1=",6,"^1>",14],["^ ","^1=",11,"^1>",14,"^M","js/Error"],["^ ","^1=",17,"^1>",14],["^ ","^1=",18,"^1>",14],["^ ","^1=",80,"^1>",14],["^ ","^1=",80,"^1>",14],["^ ","^1=",0,"^1>",19],["^ ","^1=",0,"^1>",19],["^ ","^1=",62,"^1>",19],["^ ","^1=",0,"^1>",20],["^ ","^1=",0,"^1>",23],["^ ","^1=",0,"^1>",23],["^ ","^1=",62,"^1>",23],["^ ","^1=",0,"^1>",24],["^ ","^1=",0,"^1>",27],["^ ","^1=",0,"^1>",27],["^ ","^1=",56,"^1>",27],["^ ","^1=",0,"^1>",29]],"~i6",[["^ ","^1=",0,"^1>",2,"^M","cljs.env/default-compiler-env"],["^ ","^1=",0,"^1>",19,"^M","cljs.env/default-compiler-env"],["^ ","^1=",0,"^1>",23,"^M","cljs.env/default-compiler-env"],["^ ","^1=",0,"^1>",27,"^M","cljs.env/default-compiler-env"]]],"~i46",["^ ","~i6",[["^ ","^1=",0,"^1>",20],["^ ","^1=",67,"^1>",20]],"~i7",[["^ ","^1=",7,"^1>",20,"^M","cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1"]]],"~i47",["^ ","~i4",[["^ ","^1=",73,"^1>",23,"^M","options"]]],"~i48",["^ ","~i3",[["^ ","^1=",0,"^1>",24]],"~i4",[["^ ","^1=",7,"^1>",24,"^M","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i49",["^ ","~i5",[["^ ","^1=",52,"^1>",24],["^ ","^1=",155,"^1>",24],["^ ","^1=",198,"^1>",24],["^ ","^1=",288,"^1>",24],["^ ","^1=",331,"^1>",24],["^ ","^1=",397,"^1>",24],["^ ","^1=",440,"^1>",24],["^ ","^1=",493,"^1>",24],["^ ","^1=",575,"^1>",24],["^ ","^1=",673,"^1>",24],["^ ","^1=",708,"^1>",24],["^ ","^1=",802,"^1>",24],["^ ","^1=",837,"^1>",24],["^ ","^1=",920,"^1>",24],["^ ","^1=",925,"^1>",24]],"~i6",[["^ ","^1=",52,"^1>",24,"^M","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]]],"~i56",["^ ","~i17",[["^ ","^1=",982,"^1>",24,"^M","options"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^S"],[1535834828000],["^14","goog/math/math.js"],[1505449243000,"^T","~$goog.array","~$goog.asserts"],["^14","cljs/env.cljc"],[1535834828000,"^T","^S"],["^14","goog/array/array.js"],[1505449243000,"^T","^1L"],["^14","goog/debug/error.js"],[1505449243000,"^T"],["^14","goog/dom/nodetype.js"],[1505449243000,"^T"],["^14","goog/object/object.js"],[1505449243000,"^T"],"~:SHADOW-TIMESTAMP",[1535834828000,1535834828000],["^14","goog/math/long.js"],[1505449243000,"^T","^1L","~$goog.reflect"],["^14","goog/functions/functions.js"],[1505449243000,"^T"],["^14","goog/structs/map.js"],[1505449243000,"^T","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^14","goog/asserts/asserts.js"],[1505449243000,"^T","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^14","goog/uri/uri.js"],[1505449243000,"^T","^1K","^1L","^1T","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^14","goog/base.js"],[1505449243000],["^14","goog/structs/structs.js"],[1505449243000,"^T","^1K","^1Q"],["^14","goog/string/string.js"],[1505449243000,"^T"],["^14","goog/reflect/reflect.js"],[1505449243000,"^T"],["^14","goog/string/stringbuffer.js"],[1505449243000,"^T"],["^14","goog/iter/iter.js"],[1505449243000,"^T","^1K","^1L","~$goog.functions","~$goog.math"],["^14","cljs/core.cljs"],[1535834828000,"~$goog.math.Long","~$goog.math.Integer","^1T","^1Q","^1K","~$goog.Uri","~$goog.string.StringBuffer"],["^14","goog/math/integer.js"],[1505449243000,"^T"],["^14","goog/uri/utils.js"],[1505449243000,"^T","^1K","^1L","^1T"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","cljs/env.cljc","^7",11,"^8",3,"^9",11,"^:",11,"^;","A namespace that exists solely to provide a place for \"compiler\"\nstate that is accessed/maintained by many different components."],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H"],"^I",null,"^J",["^K",["^L"]],"^M","^N","^Q",null,"^R",["^ ","^S","^S","^T","^T"],"^U",["^K",[]],"~:shadow/js-access-global",["^K",["Error"]],"^V",null,"~:defs",["^ ","~$*compiler*",["^ ","^M","~$cljs.env/*compiler*","^6","cljs/env.cljc","^7",44,"^8",1,"^9",44,"^:",26,"~:dynamic",true,"^5",["^ ","^6","cljs/env.cljc","^7",44,"^8",16,"^9",44,"^:",26,"^29",true],"~:tag","~$clj-nil"],"~$default-compiler-env",["^ ","~:protocol-inline",null,"^5",["^ ","^6","cljs/env.cljc","^7",46,"^8",7,"^9",46,"^:",27,"~:arglists",["^Y",["~$quote",["^Y",[[],["~$options"]]]]],"~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",1,"~:method-params",["^Y",[[],["^2@"]]],"^2>",["^Y",[[],["^2@"]]],"~:arglists-meta",["^Y",[null,null]]]],"^M","~$cljs.env/default-compiler-env","^2B",false,"^6","cljs/env.cljc","^:",27,"^2A",["^ ","^2B",false,"^2C",1,"^2D",["^Y",[[],["^2@"]]],"^2>",["^Y",[[],["^2@"]]],"^2E",["^Y",[null,null]]],"^2D",["^Y",[[],["^2@"]]],"~:protocol-impl",null,"^2E",["^Y",[null,null]],"^8",1,"^7",46,"^9",46,"^2C",1,"~:fn-var",true,"^2>",["^Y",[[],["^2@"]]]]],"^W",["^ ","^S","^S"],"~:cljs.analyzer/constants",["^ ","^U",["^K",["~:cljs.analyzer/namespaces","~:cljs.analyzer/data-readers","~:cljs.analyzer/externs","^M","~:cljs.analyzer/constant-table","~:options","~$cljs.user"]],"~:order",["^2J","^2M","^2K","^2L","^2N","^2O","^M"]],"^11",["^ "],"^12",["^T","^S"]],"^P","^N","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1I",[["^2S","~:static-fns"],true,["^2S","~:elide-asserts"],true,["^2S","~:optimize-constants"],null,["^2S","~:external-config"],null,["^2S","~:tooling-config"],null,["^2S","~:emit-constants"],null,["^2S","~:infer-externs"],true,["^2S","^19"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^2S","~:fn-invoke-direct"],null,["^2S","^1;"],null]]]