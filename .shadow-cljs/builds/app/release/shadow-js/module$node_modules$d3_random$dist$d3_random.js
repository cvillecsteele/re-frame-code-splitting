["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/d3-random/dist/d3-random.js"],"~:js","shadow$provide.module$node_modules$d3_random$dist$d3_random=function(P,T,z,J,w){(function(a,c){\"object\"===typeof w&&\"undefined\"!==typeof J?c(w):\"function\"===typeof define&&define.amd?define([\"exports\"],c):c(a.d3=a.d3||{})})(this,function(a){function c(){return Math.random()}var p=function k(a){function c(c,h){c=null==c?0:+c;h=null==h?1:+h;1===arguments.length?(h=c,c=0):h-=c;return function(){return a()*h+c}}c.source=k;return c}(c),w=function E(a){function c(c,k){var p,q;c=null==c?0:+c;k=null==k?1:\n+k;return function(){if(null!=p){var u=p;p=null}else{do p=2*a()-1,u=2*a()-1,q=p*p+u*u;while(!q||1<q)}return c+k*u*Math.sqrt(-2*Math.log(q)/q)}}c.source=E;return c}(c),z=function Z(a){function c(){var c=w.source(a).apply(this,arguments);return function(){return Math.exp(c())}}c.source=Z;return c}(c),x=function R(a){function c(c){return function(){for(var p=0,q=0;q<c;++q)p+=a();return p}}c.source=R;return c}(c),q=function y(a){function c(c){var p=x.source(a)(c);return function(){return p()/c}}c.source=\ny;return c}(c),H=function S(a){function c(c){return function(){return-Math.log(1-a())/c}}c.source=S;return c}(c);a.randomUniform=p;a.randomNormal=w;a.randomLogNormal=z;a.randomBates=q;a.randomIrwinHall=x;a.randomExponential=H;Object.defineProperty(a,\"__esModule\",{value:!0})})}","~:source","shadow$provide[\"module$node_modules$d3_random$dist$d3_random\"] = function(global,process,require,module,exports) {\n// https://d3js.org/d3-random/ v1.1.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction defaultSource() {\n  return Math.random();\n}\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n\nvar exponential = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["randomNormal","randomBates","__esModule","d3","value","randomIrwinHall","source","randomUniform","randomExponential","randomLogNormal"]],"~:compiled-at",1535913515851,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$d3_random$dist$d3_random.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/d3-random/dist/d3-random.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$d3_random$dist$d3_random\\\"] = function(global,process,require,module,exports) {\\n// https://d3js.org/d3-random/ v1.1.2 Copyright 2018 Mike Bostock\\n(function (global, factory) {\\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\\n(factory((global.d3 = global.d3 || {})));\\n}(this, (function (exports) { 'use strict';\\n\\nfunction defaultSource() {\\n  return Math.random();\\n}\\n\\nvar uniform = (function sourceRandomUniform(source) {\\n  function randomUniform(min, max) {\\n    min = min == null ? 0 : +min;\\n    max = max == null ? 1 : +max;\\n    if (arguments.length === 1) max = min, min = 0;\\n    else max -= min;\\n    return function() {\\n      return source() * max + min;\\n    };\\n  }\\n\\n  randomUniform.source = sourceRandomUniform;\\n\\n  return randomUniform;\\n})(defaultSource);\\n\\nvar normal = (function sourceRandomNormal(source) {\\n  function randomNormal(mu, sigma) {\\n    var x, r;\\n    mu = mu == null ? 0 : +mu;\\n    sigma = sigma == null ? 1 : +sigma;\\n    return function() {\\n      var y;\\n\\n      // If available, use the second previously-generated uniform random.\\n      if (x != null) y = x, x = null;\\n\\n      // Otherwise, generate a new x and y.\\n      else do {\\n        x = source() * 2 - 1;\\n        y = source() * 2 - 1;\\n        r = x * x + y * y;\\n      } while (!r || r > 1);\\n\\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\\n    };\\n  }\\n\\n  randomNormal.source = sourceRandomNormal;\\n\\n  return randomNormal;\\n})(defaultSource);\\n\\nvar logNormal = (function sourceRandomLogNormal(source) {\\n  function randomLogNormal() {\\n    var randomNormal = normal.source(source).apply(this, arguments);\\n    return function() {\\n      return Math.exp(randomNormal());\\n    };\\n  }\\n\\n  randomLogNormal.source = sourceRandomLogNormal;\\n\\n  return randomLogNormal;\\n})(defaultSource);\\n\\nvar irwinHall = (function sourceRandomIrwinHall(source) {\\n  function randomIrwinHall(n) {\\n    return function() {\\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\\n      return sum;\\n    };\\n  }\\n\\n  randomIrwinHall.source = sourceRandomIrwinHall;\\n\\n  return randomIrwinHall;\\n})(defaultSource);\\n\\nvar bates = (function sourceRandomBates(source) {\\n  function randomBates(n) {\\n    var randomIrwinHall = irwinHall.source(source)(n);\\n    return function() {\\n      return randomIrwinHall() / n;\\n    };\\n  }\\n\\n  randomBates.source = sourceRandomBates;\\n\\n  return randomBates;\\n})(defaultSource);\\n\\nvar exponential = (function sourceRandomExponential(source) {\\n  function randomExponential(lambda) {\\n    return function() {\\n      return -Math.log(1 - source()) / lambda;\\n    };\\n  }\\n\\n  randomExponential.source = sourceRandomExponential;\\n\\n  return randomExponential;\\n})(defaultSource);\\n\\nexports.randomUniform = uniform;\\nexports.randomNormal = normal;\\nexports.randomLogNormal = logNormal;\\nexports.randomBates = bates;\\nexports.randomIrwinHall = irwinHall;\\nexports.randomExponential = exponential;\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\n})));\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"factory\",\"define\",\"amd\",\"d3\",\"defaultSource\",\"Math\",\"random\",\"uniform\",\"sourceRandomUniform\",\"source\",\"randomUniform\",\"min\",\"max\",\"arguments\",\"length\",\"normal\",\"sourceRandomNormal\",\"randomNormal\",\"mu\",\"sigma\",\"x\",\"r\",\"y\",\"sqrt\",\"log\",\"logNormal\",\"sourceRandomLogNormal\",\"randomLogNormal\",\"apply\",\"exp\",\"irwinHall\",\"sourceRandomIrwinHall\",\"randomIrwinHall\",\"n\",\"sum\",\"i\",\"bates\",\"sourceRandomBates\",\"randomBates\",\"exponential\",\"sourceRandomExponential\",\"randomExponential\",\"lambda\",\"Object\",\"defineProperty\",\"value\"]\n}\n"]