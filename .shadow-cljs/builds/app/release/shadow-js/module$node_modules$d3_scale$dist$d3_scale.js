["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/d3-scale/dist/d3-scale.js"],"~:js","shadow$provide.module$node_modules$d3_scale$dist$d3_scale=function(P,T,z,J,w){(function(a,c){\"object\"===typeof w&&\"undefined\"!==typeof J?c(w,z(\"module$node_modules$d3_collection$dist$d3_collection\"),z(\"module$node_modules$d3_array$dist$d3_array\"),z(\"module$node_modules$d3_interpolate$dist$d3_interpolate\"),z(\"module$node_modules$d3_format$dist$d3_format\"),z(\"module$node_modules$d3_time$dist$d3_time\"),z(\"module$node_modules$d3_time_format$dist$d3_time_format\")):\"function\"===typeof define&&define.amd?\ndefine(\"exports d3-collection d3-array d3-interpolate d3-format d3-time d3-time-format\".split(\" \"),c):c(a.d3=a.d3||{},a.d3,a.d3,a.d3,a.d3,a.d3,a.d3)})(this,function(a,c,p,w,z,x,q){function C(a){function b(b){var c=b+\"\",e=f.get(c);if(!e){if(h!==wa)return h;f.set(c,e=g.push(b))}return a[(e-1)%a.length]}var f=c.map(),g=[],h=wa;a=null==a?[]:qa.call(a);b.domain=function(a){if(!arguments.length)return g.slice();g=[];f=c.map();for(var e=-1,h=a.length,l,k;++e<h;)f.has(k=(l=a[e])+\"\")||f.set(k,g.push(l));return b};\nb.range=function(c){return arguments.length?(a=qa.call(c),b):a.slice()};b.unknown=function(a){return arguments.length?(h=a,b):h};b.copy=function(){return C().domain(g).range(a).unknown(h)};return b}function O(){function a(){var a=f().length,b=h[1]<h[0],c=h[b-0],e=h[1-b];l=(e-c)/Math.max(1,a-t+2*q);n&&(l=Math.floor(l));c+=(e-c-l*(a-t))*r;k=l*(1-t);n&&(c=Math.round(c),k=Math.round(k));a=p.range(a).map(function(a){return c+l*a});return g(b?a.reverse():a)}var c=C().unknown(void 0),f=c.domain,g=c.range,\nh=[0,1],l,k,n=!1,t=0,q=0,r=.5;delete c.unknown;c.domain=function(b){return arguments.length?(f(b),a()):f()};c.range=function(b){return arguments.length?(h=[+b[0],+b[1]],a()):h.slice()};c.rangeRound=function(b){return h=[+b[0],+b[1]],n=!0,a()};c.bandwidth=function(){return k};c.step=function(){return l};c.round=function(b){return arguments.length?(n=!!b,a()):n};c.padding=function(b){return arguments.length?(t=q=Math.max(0,Math.min(1,b)),a()):t};c.paddingInner=function(b){return arguments.length?(t=\nMath.max(0,Math.min(1,b)),a()):t};c.paddingOuter=function(b){return arguments.length?(q=Math.max(0,Math.min(1,b)),a()):q};c.align=function(b){return arguments.length?(r=Math.max(0,Math.min(1,b)),a()):r};c.copy=function(){return O().domain(f()).range(h).round(n).paddingInner(t).paddingOuter(q).align(r)};return a()}function h(a){var b=a.copy;a.padding=a.paddingOuter;delete a.paddingInner;delete a.paddingOuter;a.copy=function(){return h(b())};return a}function k(a){return function(){return a}}function E(a){return+a}\nfunction J(a,c){return(c-=a=+a)?function(b){return(b-a)/c}:k(c)}function R(a){return function(b,c){var e=a(b=+b,c=+c);return function(a){return a<=b?0:a>=c?1:e(a)}}}function y(a){return function(b,c){var e=a(b=+b,c=+c);return function(a){return 0>=a?b:1<=a?c:e(a)}}}function S(a,c,f,g){var b=a[0];a=a[1];var e=c[0];c=c[1];a<b?(b=f(a,b),e=g(c,e)):(b=f(b,a),e=g(e,c));return function(a){return e(b(a))}}function D(a,c,f,g){var b=Math.min(a.length,c.length)-1,e=Array(b),h=Array(b),l=-1;a[b]<a[0]&&(a=a.slice().reverse(),\nc=c.slice().reverse());for(;++l<b;)e[l]=f(a[l],a[l+1]),h[l]=g(c[l],c[l+1]);return function(c){var f=p.bisect(a,c,1,b)-1;return h[f](e[f](c))}}function u(a,c){return c.domain(a.domain()).range(a.range()).interpolate(a.interpolate()).clamp(a.clamp())}function f(a,c){function b(){k=2<Math.min(f.length,g.length)?D:S;n=t=null;return e}function e(b){return(n||(n=k(f,g,l?R(a):a,h)))(+b)}var f=xa,g=xa,h=w.interpolate,l=!1,k,n,t;e.invert=function(a){return(t||(t=k(g,f,J,l?y(c):c)))(+a)};e.domain=function(a){return arguments.length?\n(f=ta.call(a,E),b()):f.slice()};e.range=function(a){return arguments.length?(g=qa.call(a),b()):g.slice()};e.rangeRound=function(a){return g=qa.call(a),h=w.interpolateRound,b()};e.clamp=function(a){return arguments.length?(l=!!a,b()):l};e.interpolate=function(a){return arguments.length?(h=a,b()):h};return b()}function I(a){var b=a.domain;a.ticks=function(a){var c=b();return p.ticks(c[0],c[c.length-1],null==a?10:a)};a.tickFormat=function(a,c){var e;a:{var f=b(),g=f[0];f=f[f.length-1];a=p.tickStep(g,\nf,null==a?10:a);c=z.formatSpecifier(null==c?\",f\":c);switch(c.type){case \"s\":g=Math.max(Math.abs(g),Math.abs(f));null!=c.precision||isNaN(e=z.precisionPrefix(a,g))||(c.precision=e);e=z.formatPrefix(c,g);break a;case \"\":case \"e\":case \"g\":case \"p\":case \"r\":null!=c.precision||isNaN(e=z.precisionRound(a,Math.max(Math.abs(g),Math.abs(f))))||(c.precision=e-(\"e\"===c.type));break;case \"f\":case \"%\":null!=c.precision||isNaN(e=z.precisionFixed(a))||(c.precision=e-2*(\"%\"===c.type))}e=z.format(c)}return e};a.nice=\nfunction(c){null==c&&(c=10);var e=b(),f=0,g=e.length-1,h=e[f],l=e[g];if(l<h){var k=h;h=l;l=k;k=f;f=g;g=k}k=p.tickIncrement(h,l,c);0<k?(h=Math.floor(h/k)*k,l=Math.ceil(l/k)*k,k=p.tickIncrement(h,l,c)):0>k&&(h=Math.ceil(h*k)/k,l=Math.floor(l*k)/k,k=p.tickIncrement(h,l,c));0<k?(e[f]=Math.floor(h/k)*k,e[g]=Math.ceil(l/k)*k,b(e)):0>k&&(e[f]=Math.ceil(h*k)/k,e[g]=Math.floor(l*k)/k,b(e));return a};return a}function P(){var a=f(J,w.interpolateNumber);a.copy=function(){return u(a,P())};return I(a)}function F(){function a(a){return+a}\nvar c=[0,1];a.invert=a;a.domain=a.range=function(b){return arguments.length?(c=ta.call(b,E),a):c.slice()};a.copy=function(){return F().domain(c)};return I(a)}function V(a,c){a=a.slice();var b=0,e=a.length-1,f=a[b],g=a[e];if(g<f){var h=b;b=e;e=h;h=f;f=g;g=h}a[b]=c.floor(f);a[e]=c.ceil(g);return a}function T(a,c){return(c=Math.log(c/a))?function(b){return Math.log(b/a)/c}:k(c)}function ma(a,c){return 0>a?function(b){return-Math.pow(-c,b)*Math.pow(-a,1-b)}:function(b){return Math.pow(c,b)*Math.pow(a,\n1-b)}}function ca(a){return isFinite(a)?+(\"1e\"+a):0>a?0:a}function aa(a){return 10===a?ca:a===Math.E?Math.exp:function(b){return Math.pow(a,b)}}function K(a){return a===Math.E?Math.log:10===a&&Math.log10||2===a&&Math.log2||(a=Math.log(a),function(b){return Math.log(b)/a})}function G(a){return function(b){return-a(-b)}}function Y(){function a(){l=K(h);k=aa(h);0>g()[0]&&(l=G(l),k=G(k));return c}var c=f(T,ma).domain([1,10]),g=c.domain,h=10,l=K(10),k=aa(10);c.base=function(b){return arguments.length?\n(h=+b,a()):h};c.domain=function(b){return arguments.length?(g(b),a()):g()};c.ticks=function(a){var b=g(),c=b[0];b=b[b.length-1];var e;if(e=b<c)f=c,c=b,b=f;var f=l(c),n=l(b);var t=null==a?10:+a;a=[];if(!(h%1)&&n-f<t)if(f=Math.round(f)-1,n=Math.round(n)+1,0<c)for(;f<n;++f){var v=1;for(t=k(f);v<h;++v){var q=t*v;if(!(q<c)){if(q>b)break;a.push(q)}}}else for(;f<n;++f)for(v=h-1,t=k(f);1<=v;--v){if(q=t*v,!(q<c)){if(q>b)break;a.push(q)}}else a=p.ticks(f,n,Math.min(n-f,t)).map(k);return e?a.reverse():a};c.tickFormat=\nfunction(a,b){null==b&&(b=10===h?\".0e\":\",\");\"function\"!==typeof b&&(b=z.format(b));if(Infinity===a)return b;null==a&&(a=10);var e=Math.max(1,h*a/c.ticks().length);return function(a){var c=a/k(Math.round(l(a)));c*h<h-.5&&(c*=h);return c<=e?b(a):\"\"}};c.nice=function(){return g(V(g(),{floor:function(a){return k(Math.floor(l(a)))},ceil:function(a){return k(Math.ceil(l(a)))}}))};c.copy=function(){return u(c,Y().base(h))};return c}function r(a,c){return 0>a?-Math.pow(-a,c):Math.pow(a,c)}function n(){var a=\n1,c=f(function(b,c){return(c=r(c,a)-(b=r(b,a)))?function(e){return(r(e,a)-b)/c}:k(c)},function(b,c){c=r(c,a)-(b=r(b,a));return function(e){return r(b+c*e,1/a)}}),g=c.domain;c.exponent=function(b){return arguments.length?(a=+b,g(g())):a};c.copy=function(){return u(c,n().exponent(a))};return I(c)}function ha(){function a(){var a=0,b=Math.max(1,g.length);for(h=Array(b-1);++a<b;)h[a-1]=p.quantile(f,a/b);return c}function c(a){if(!isNaN(a=+a))return g[p.bisect(h,a)]}var f=[],g=[],h=[];c.invertExtent=function(a){a=\ng.indexOf(a);return 0>a?[NaN,NaN]:[0<a?h[a-1]:f[0],a<h.length?h[a]:f[f.length-1]]};c.domain=function(b){if(!arguments.length)return f.slice();f=[];for(var c=0,e=b.length,g;c<e;++c)(g=b[c],null==g||isNaN(g=+g))||f.push(g);f.sort(p.ascending);return a()};c.range=function(b){return arguments.length?(g=qa.call(b),a()):g.slice()};c.quantiles=function(){return h.slice()};c.copy=function(){return ha().domain(f).range(g)};return c}function la(){function a(a){if(a<=a)return k[p.bisect(l,a,0,h)]}function c(){var b=\n-1;for(l=Array(h);++b<h;)l[b]=((b+1)*g-(b-h)*f)/(h+1);return a}var f=0,g=1,h=1,l=[.5],k=[0,1];a.domain=function(a){return arguments.length?(f=+a[0],g=+a[1],c()):[f,g]};a.range=function(a){return arguments.length?(h=(k=qa.call(a)).length-1,c()):k.slice()};a.invertExtent=function(a){a=k.indexOf(a);return 0>a?[NaN,NaN]:1>a?[f,l[0]]:a>=h?[l[h-1],g]:[l[a-1],l[a]]};a.copy=function(){return la().domain([f,g]).range(k)};return I(a)}function ia(){function a(a){if(a<=a)return f[p.bisect(c,a,0,g)]}var c=[.5],\nf=[0,1],g=1;a.domain=function(b){return arguments.length?(c=qa.call(b),g=Math.min(c.length,f.length-1),a):c.slice()};a.range=function(b){return arguments.length?(f=qa.call(b),g=Math.min(c.length,f.length-1),a):f.slice()};a.invertExtent=function(a){a=f.indexOf(a);return[c[a-1],c[a]]};a.copy=function(){return ia().domain(c).range(f)};return a}function A(a){return new Date(a)}function N(a){return a instanceof Date?+a:+new Date(+a)}function X(a,c,h,k,n,q,r,x,y){function b(b){return(r(b)<b?C:q(b)<b?F:\nn(b)<b?da:k(b)<b?E:c(b)<b?h(b)<b?D:G:a(b)<b?O:pa)(b)}function e(b,c,e,f){null==b&&(b=10);if(\"number\"===typeof b){f=Math.abs(e-c)/b;var h=p.bisector(function(a){return a[2]}).right(I,f);h===I.length?(f=p.tickStep(c/g,e/g,b),b=a):h?(h=I[f/I[h-1][2]<I[h][2]/f?h-1:h],f=h[1],b=h[0]):(f=Math.max(p.tickStep(c,e,b),1),b=x)}return null==f?b:b.every(f)}var v=f(J,w.interpolateNumber),B=v.invert,z=v.domain,C=y(\".%L\"),F=y(\":%S\"),da=y(\"%I:%M\"),E=y(\"%I %p\"),D=y(\"%a %d\"),G=y(\"%b %d\"),O=y(\"%B\"),pa=y(\"%Y\"),I=[[r,1,\n1E3],[r,5,5E3],[r,15,15E3],[r,30,3E4],[q,1,6E4],[q,5,3E5],[q,15,9E5],[q,30,18E5],[n,1,36E5],[n,3,108E5],[n,6,216E5],[n,12,432E5],[k,1,864E5],[k,2,1728E5],[h,1,t],[c,1,l],[c,3,3*l],[a,1,g]];v.invert=function(a){return new Date(B(a))};v.domain=function(a){return arguments.length?z(ta.call(a,N)):z().map(A)};v.ticks=function(a,b){var c=z(),f=c[0];c=c[c.length-1];var g=c<f;if(g){var h=f;f=c;c=h}h=(h=e(a,f,c,b))?h.range(f,c+1):[];return g?h.reverse():h};v.tickFormat=function(a,c){return null==c?b:y(c)};\nv.nice=function(a,b){var c=z();return(a=e(a,c[0],c[c.length-1],b))?z(V(c,a)):v};v.copy=function(){return u(v,X(a,c,h,k,n,q,r,x,y))};return v}function da(a){function b(b){b=(b-c)*g;return a(h?Math.max(0,Math.min(1,b)):b)}var c=0,f=1,g=1,h=!1;b.domain=function(a){return arguments.length?(c=+a[0],f=+a[1],g=c===f?0:1/(f-c),b):[c,f]};b.clamp=function(a){return arguments.length?(h=!!a,b):h};b.interpolator=function(c){return arguments.length?(a=c,b):a};b.copy=function(){return da(a).domain([c,f]).clamp(h)};\nreturn I(b)}function pa(a){function b(b){var c=.5+((b=+b)-f)*(b<f?h:l);return a(k?Math.max(0,Math.min(1,c)):c)}var c=0,f=.5,g=1,h=1,l=1,k=!1;b.domain=function(a){return arguments.length?(c=+a[0],f=+a[1],g=+a[2],h=c===f?0:.5/(f-c),l=f===g?0:.5/(g-f),b):[c,f,g]};b.clamp=function(a){return arguments.length?(k=!!a,b):k};b.interpolator=function(c){return arguments.length?(a=c,b):a};b.copy=function(){return pa(a).domain([c,f,g]).clamp(k)};return I(b)}var ka=Array.prototype,ta=ka.map,qa=ka.slice,wa={name:\"implicit\"},\nxa=[0,1],t=6048E5,l=2592E6,g=31536E6;a.scaleBand=O;a.scalePoint=function(){return h(O().paddingInner(1))};a.scaleIdentity=F;a.scaleLinear=P;a.scaleLog=Y;a.scaleOrdinal=C;a.scaleImplicit=wa;a.scalePow=n;a.scaleSqrt=function(){return n().exponent(.5)};a.scaleQuantile=ha;a.scaleQuantize=la;a.scaleThreshold=ia;a.scaleTime=function(){return X(x.timeYear,x.timeMonth,x.timeWeek,x.timeDay,x.timeHour,x.timeMinute,x.timeSecond,x.timeMillisecond,q.timeFormat).domain([new Date(2E3,0,1),new Date(2E3,0,2)])};a.scaleUtc=\nfunction(){return X(x.utcYear,x.utcMonth,x.utcWeek,x.utcDay,x.utcHour,x.utcMinute,x.utcSecond,x.utcMillisecond,q.utcFormat).domain([Date.UTC(2E3,0,1),Date.UTC(2E3,0,2)])};a.scaleSequential=da;a.scaleDiverging=pa;Object.defineProperty(a,\"__esModule\",{value:!0})})}","~:source","shadow$provide[\"module$node_modules$d3_scale$dist$d3_scale\"] = function(global,process,require,module,exports) {\n// https://d3js.org/d3-scale/ v2.1.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-collection'), require('d3-array'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-collection', 'd3-array', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Collection,d3Array,d3Interpolate,d3Format,d3Time,d3TimeFormat) { 'use strict';\n\nvar array = Array.prototype;\n\nvar map = array.map;\nvar slice = array.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = d3Collection.map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = d3Collection.map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction number(x) {\n  return +x;\n}\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = d3Interpolate.interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n\nfunction tickFormat(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n      return d3Format.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return d3Format.format(specifier);\n}\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = d3Array.tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = d3Array.tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = d3Array.tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear() {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nfunction nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[d3Array.bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nfunction quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number$1(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(d3Array.tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number$1)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nfunction time() {\n  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n\nfunction utcTime() {\n  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      k10 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) * k10;\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], k10 = x0 === x1 ? 0 : 1 / (x1 - x0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nfunction diverging(interpolator) {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      k10 = 1,\n      k21 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = 0.5 + ((x = +x) - x1) * (x < x1 ? k10 : k21);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], x2 = +_[2], k10 = x0 === x1 ? 0 : 0.5 / (x1 - x0), k21 = x1 === x2 ? 0 : 0.5 / (x2 - x1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return diverging(interpolator).domain([x0, x1, x2]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nexports.scaleBand = band;\nexports.scalePoint = point;\nexports.scaleIdentity = identity;\nexports.scaleLinear = linear;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile;\nexports.scaleQuantize = quantize;\nexports.scaleThreshold = threshold;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.scaleSequential = sequential;\nexports.scaleDiverging = diverging;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$d3_time$dist$d3_time","~$module$node_modules$d3_collection$dist$d3_collection","~$shadow.js","~$module$node_modules$d3_format$dist$d3_format","~$module$node_modules$d3_array$dist$d3_array","~$module$node_modules$d3_time_format$dist$d3_time_format","~$module$node_modules$d3_interpolate$dist$d3_interpolate"]],"~:properties",["^5",["scaleIdentity","floor","ceil","range","invert","align","precision","interpolate","copy","rangeRound","bandwidth","interpolator","__esModule","padding","scaleImplicit","base","d3","scaleBand","paddingOuter","scaleLog","name","scaleSequential","scaleTime","scaleQuantile","value","paddingInner","scaleLinear","clamp","domain","invertExtent","scalePoint","ticks","unknown","tickFormat","quantiles","scaleOrdinal","scaleDiverging","scalePow","round","scaleQuantize","exponent","scaleThreshold","scaleSqrt","scaleUtc","nice","step"]],"~:compiled-at",1535913515863,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$d3_scale$dist$d3_scale.js\",\n\"lineCount\":24,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/d3-scale/dist/d3-scale.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$d3_scale$dist$d3_scale\\\"] = function(global,process,require,module,exports) {\\n// https://d3js.org/d3-scale/ v2.1.2 Copyright 2018 Mike Bostock\\n(function (global, factory) {\\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-collection'), require('d3-array'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format')) :\\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-collection', 'd3-array', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format'], factory) :\\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\\n}(this, (function (exports,d3Collection,d3Array,d3Interpolate,d3Format,d3Time,d3TimeFormat) { 'use strict';\\n\\nvar array = Array.prototype;\\n\\nvar map = array.map;\\nvar slice = array.slice;\\n\\nvar implicit = {name: \\\"implicit\\\"};\\n\\nfunction ordinal(range) {\\n  var index = d3Collection.map(),\\n      domain = [],\\n      unknown = implicit;\\n\\n  range = range == null ? [] : slice.call(range);\\n\\n  function scale(d) {\\n    var key = d + \\\"\\\", i = index.get(key);\\n    if (!i) {\\n      if (unknown !== implicit) return unknown;\\n      index.set(key, i = domain.push(d));\\n    }\\n    return range[(i - 1) % range.length];\\n  }\\n\\n  scale.domain = function(_) {\\n    if (!arguments.length) return domain.slice();\\n    domain = [], index = d3Collection.map();\\n    var i = -1, n = _.length, d, key;\\n    while (++i < n) if (!index.has(key = (d = _[i]) + \\\"\\\")) index.set(key, domain.push(d));\\n    return scale;\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\\n  };\\n\\n  scale.unknown = function(_) {\\n    return arguments.length ? (unknown = _, scale) : unknown;\\n  };\\n\\n  scale.copy = function() {\\n    return ordinal()\\n        .domain(domain)\\n        .range(range)\\n        .unknown(unknown);\\n  };\\n\\n  return scale;\\n}\\n\\nfunction band() {\\n  var scale = ordinal().unknown(undefined),\\n      domain = scale.domain,\\n      ordinalRange = scale.range,\\n      range = [0, 1],\\n      step,\\n      bandwidth,\\n      round = false,\\n      paddingInner = 0,\\n      paddingOuter = 0,\\n      align = 0.5;\\n\\n  delete scale.unknown;\\n\\n  function rescale() {\\n    var n = domain().length,\\n        reverse = range[1] < range[0],\\n        start = range[reverse - 0],\\n        stop = range[1 - reverse];\\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\\n    if (round) step = Math.floor(step);\\n    start += (stop - start - step * (n - paddingInner)) * align;\\n    bandwidth = step * (1 - paddingInner);\\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\\n    return ordinalRange(reverse ? values.reverse() : values);\\n  }\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (domain(_), rescale()) : domain();\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\\n  };\\n\\n  scale.rangeRound = function(_) {\\n    return range = [+_[0], +_[1]], round = true, rescale();\\n  };\\n\\n  scale.bandwidth = function() {\\n    return bandwidth;\\n  };\\n\\n  scale.step = function() {\\n    return step;\\n  };\\n\\n  scale.round = function(_) {\\n    return arguments.length ? (round = !!_, rescale()) : round;\\n  };\\n\\n  scale.padding = function(_) {\\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\\n  };\\n\\n  scale.paddingInner = function(_) {\\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\\n  };\\n\\n  scale.paddingOuter = function(_) {\\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\\n  };\\n\\n  scale.align = function(_) {\\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\\n  };\\n\\n  scale.copy = function() {\\n    return band()\\n        .domain(domain())\\n        .range(range)\\n        .round(round)\\n        .paddingInner(paddingInner)\\n        .paddingOuter(paddingOuter)\\n        .align(align);\\n  };\\n\\n  return rescale();\\n}\\n\\nfunction pointish(scale) {\\n  var copy = scale.copy;\\n\\n  scale.padding = scale.paddingOuter;\\n  delete scale.paddingInner;\\n  delete scale.paddingOuter;\\n\\n  scale.copy = function() {\\n    return pointish(copy());\\n  };\\n\\n  return scale;\\n}\\n\\nfunction point() {\\n  return pointish(band().paddingInner(1));\\n}\\n\\nfunction constant(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\\nfunction number(x) {\\n  return +x;\\n}\\n\\nvar unit = [0, 1];\\n\\nfunction deinterpolateLinear(a, b) {\\n  return (b -= (a = +a))\\n      ? function(x) { return (x - a) / b; }\\n      : constant(b);\\n}\\n\\nfunction deinterpolateClamp(deinterpolate) {\\n  return function(a, b) {\\n    var d = deinterpolate(a = +a, b = +b);\\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\\n  };\\n}\\n\\nfunction reinterpolateClamp(reinterpolate) {\\n  return function(a, b) {\\n    var r = reinterpolate(a = +a, b = +b);\\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\\n  };\\n}\\n\\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\\n  return function(x) { return r0(d0(x)); };\\n}\\n\\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\\n  var j = Math.min(domain.length, range.length) - 1,\\n      d = new Array(j),\\n      r = new Array(j),\\n      i = -1;\\n\\n  // Reverse descending domains.\\n  if (domain[j] < domain[0]) {\\n    domain = domain.slice().reverse();\\n    range = range.slice().reverse();\\n  }\\n\\n  while (++i < j) {\\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\\n    r[i] = reinterpolate(range[i], range[i + 1]);\\n  }\\n\\n  return function(x) {\\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\\n    return r[i](d[i](x));\\n  };\\n}\\n\\nfunction copy(source, target) {\\n  return target\\n      .domain(source.domain())\\n      .range(source.range())\\n      .interpolate(source.interpolate())\\n      .clamp(source.clamp());\\n}\\n\\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\\nfunction continuous(deinterpolate, reinterpolate) {\\n  var domain = unit,\\n      range = unit,\\n      interpolate = d3Interpolate.interpolate,\\n      clamp = false,\\n      piecewise,\\n      output,\\n      input;\\n\\n  function rescale() {\\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\\n    output = input = null;\\n    return scale;\\n  }\\n\\n  function scale(x) {\\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\\n  }\\n\\n  scale.invert = function(y) {\\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\\n  };\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\\n  };\\n\\n  scale.rangeRound = function(_) {\\n    return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();\\n  };\\n\\n  scale.clamp = function(_) {\\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\\n  };\\n\\n  scale.interpolate = function(_) {\\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\\n  };\\n\\n  return rescale();\\n}\\n\\nfunction tickFormat(domain, count, specifier) {\\n  var start = domain[0],\\n      stop = domain[domain.length - 1],\\n      step = d3Array.tickStep(start, stop, count == null ? 10 : count),\\n      precision;\\n  specifier = d3Format.formatSpecifier(specifier == null ? \\\",f\\\" : specifier);\\n  switch (specifier.type) {\\n    case \\\"s\\\": {\\n      var value = Math.max(Math.abs(start), Math.abs(stop));\\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\\n      return d3Format.formatPrefix(specifier, value);\\n    }\\n    case \\\"\\\":\\n    case \\\"e\\\":\\n    case \\\"g\\\":\\n    case \\\"p\\\":\\n    case \\\"r\\\": {\\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \\\"e\\\");\\n      break;\\n    }\\n    case \\\"f\\\":\\n    case \\\"%\\\": {\\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \\\"%\\\") * 2;\\n      break;\\n    }\\n  }\\n  return d3Format.format(specifier);\\n}\\n\\nfunction linearish(scale) {\\n  var domain = scale.domain;\\n\\n  scale.ticks = function(count) {\\n    var d = domain();\\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\\n  };\\n\\n  scale.tickFormat = function(count, specifier) {\\n    return tickFormat(domain(), count, specifier);\\n  };\\n\\n  scale.nice = function(count) {\\n    if (count == null) count = 10;\\n\\n    var d = domain(),\\n        i0 = 0,\\n        i1 = d.length - 1,\\n        start = d[i0],\\n        stop = d[i1],\\n        step;\\n\\n    if (stop < start) {\\n      step = start, start = stop, stop = step;\\n      step = i0, i0 = i1, i1 = step;\\n    }\\n\\n    step = d3Array.tickIncrement(start, stop, count);\\n\\n    if (step > 0) {\\n      start = Math.floor(start / step) * step;\\n      stop = Math.ceil(stop / step) * step;\\n      step = d3Array.tickIncrement(start, stop, count);\\n    } else if (step < 0) {\\n      start = Math.ceil(start * step) / step;\\n      stop = Math.floor(stop * step) / step;\\n      step = d3Array.tickIncrement(start, stop, count);\\n    }\\n\\n    if (step > 0) {\\n      d[i0] = Math.floor(start / step) * step;\\n      d[i1] = Math.ceil(stop / step) * step;\\n      domain(d);\\n    } else if (step < 0) {\\n      d[i0] = Math.ceil(start * step) / step;\\n      d[i1] = Math.floor(stop * step) / step;\\n      domain(d);\\n    }\\n\\n    return scale;\\n  };\\n\\n  return scale;\\n}\\n\\nfunction linear() {\\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);\\n\\n  scale.copy = function() {\\n    return copy(scale, linear());\\n  };\\n\\n  return linearish(scale);\\n}\\n\\nfunction identity() {\\n  var domain = [0, 1];\\n\\n  function scale(x) {\\n    return +x;\\n  }\\n\\n  scale.invert = scale;\\n\\n  scale.domain = scale.range = function(_) {\\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\\n  };\\n\\n  scale.copy = function() {\\n    return identity().domain(domain);\\n  };\\n\\n  return linearish(scale);\\n}\\n\\nfunction nice(domain, interval) {\\n  domain = domain.slice();\\n\\n  var i0 = 0,\\n      i1 = domain.length - 1,\\n      x0 = domain[i0],\\n      x1 = domain[i1],\\n      t;\\n\\n  if (x1 < x0) {\\n    t = i0, i0 = i1, i1 = t;\\n    t = x0, x0 = x1, x1 = t;\\n  }\\n\\n  domain[i0] = interval.floor(x0);\\n  domain[i1] = interval.ceil(x1);\\n  return domain;\\n}\\n\\nfunction deinterpolate(a, b) {\\n  return (b = Math.log(b / a))\\n      ? function(x) { return Math.log(x / a) / b; }\\n      : constant(b);\\n}\\n\\nfunction reinterpolate(a, b) {\\n  return a < 0\\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\\n}\\n\\nfunction pow10(x) {\\n  return isFinite(x) ? +(\\\"1e\\\" + x) : x < 0 ? 0 : x;\\n}\\n\\nfunction powp(base) {\\n  return base === 10 ? pow10\\n      : base === Math.E ? Math.exp\\n      : function(x) { return Math.pow(base, x); };\\n}\\n\\nfunction logp(base) {\\n  return base === Math.E ? Math.log\\n      : base === 10 && Math.log10\\n      || base === 2 && Math.log2\\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\\n}\\n\\nfunction reflect(f) {\\n  return function(x) {\\n    return -f(-x);\\n  };\\n}\\n\\nfunction log() {\\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\\n      domain = scale.domain,\\n      base = 10,\\n      logs = logp(10),\\n      pows = powp(10);\\n\\n  function rescale() {\\n    logs = logp(base), pows = powp(base);\\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\\n    return scale;\\n  }\\n\\n  scale.base = function(_) {\\n    return arguments.length ? (base = +_, rescale()) : base;\\n  };\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (domain(_), rescale()) : domain();\\n  };\\n\\n  scale.ticks = function(count) {\\n    var d = domain(),\\n        u = d[0],\\n        v = d[d.length - 1],\\n        r;\\n\\n    if (r = v < u) i = u, u = v, v = i;\\n\\n    var i = logs(u),\\n        j = logs(v),\\n        p,\\n        k,\\n        t,\\n        n = count == null ? 10 : +count,\\n        z = [];\\n\\n    if (!(base % 1) && j - i < n) {\\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\\n      if (u > 0) for (; i < j; ++i) {\\n        for (k = 1, p = pows(i); k < base; ++k) {\\n          t = p * k;\\n          if (t < u) continue;\\n          if (t > v) break;\\n          z.push(t);\\n        }\\n      } else for (; i < j; ++i) {\\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\\n          t = p * k;\\n          if (t < u) continue;\\n          if (t > v) break;\\n          z.push(t);\\n        }\\n      }\\n    } else {\\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\\n    }\\n\\n    return r ? z.reverse() : z;\\n  };\\n\\n  scale.tickFormat = function(count, specifier) {\\n    if (specifier == null) specifier = base === 10 ? \\\".0e\\\" : \\\",\\\";\\n    if (typeof specifier !== \\\"function\\\") specifier = d3Format.format(specifier);\\n    if (count === Infinity) return specifier;\\n    if (count == null) count = 10;\\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\\n    return function(d) {\\n      var i = d / pows(Math.round(logs(d)));\\n      if (i * base < base - 0.5) i *= base;\\n      return i <= k ? specifier(d) : \\\"\\\";\\n    };\\n  };\\n\\n  scale.nice = function() {\\n    return domain(nice(domain(), {\\n      floor: function(x) { return pows(Math.floor(logs(x))); },\\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\\n    }));\\n  };\\n\\n  scale.copy = function() {\\n    return copy(scale, log().base(base));\\n  };\\n\\n  return scale;\\n}\\n\\nfunction raise(x, exponent) {\\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\\n}\\n\\nfunction pow() {\\n  var exponent = 1,\\n      scale = continuous(deinterpolate, reinterpolate),\\n      domain = scale.domain;\\n\\n  function deinterpolate(a, b) {\\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\\n        ? function(x) { return (raise(x, exponent) - a) / b; }\\n        : constant(b);\\n  }\\n\\n  function reinterpolate(a, b) {\\n    b = raise(b, exponent) - (a = raise(a, exponent));\\n    return function(t) { return raise(a + b * t, 1 / exponent); };\\n  }\\n\\n  scale.exponent = function(_) {\\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\\n  };\\n\\n  scale.copy = function() {\\n    return copy(scale, pow().exponent(exponent));\\n  };\\n\\n  return linearish(scale);\\n}\\n\\nfunction sqrt() {\\n  return pow().exponent(0.5);\\n}\\n\\nfunction quantile() {\\n  var domain = [],\\n      range = [],\\n      thresholds = [];\\n\\n  function rescale() {\\n    var i = 0, n = Math.max(1, range.length);\\n    thresholds = new Array(n - 1);\\n    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\\n    return scale;\\n  }\\n\\n  function scale(x) {\\n    if (!isNaN(x = +x)) return range[d3Array.bisect(thresholds, x)];\\n  }\\n\\n  scale.invertExtent = function(y) {\\n    var i = range.indexOf(y);\\n    return i < 0 ? [NaN, NaN] : [\\n      i > 0 ? thresholds[i - 1] : domain[0],\\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\\n    ];\\n  };\\n\\n  scale.domain = function(_) {\\n    if (!arguments.length) return domain.slice();\\n    domain = [];\\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\\n    domain.sort(d3Array.ascending);\\n    return rescale();\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\\n  };\\n\\n  scale.quantiles = function() {\\n    return thresholds.slice();\\n  };\\n\\n  scale.copy = function() {\\n    return quantile()\\n        .domain(domain)\\n        .range(range);\\n  };\\n\\n  return scale;\\n}\\n\\nfunction quantize() {\\n  var x0 = 0,\\n      x1 = 1,\\n      n = 1,\\n      domain = [0.5],\\n      range = [0, 1];\\n\\n  function scale(x) {\\n    if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\\n  }\\n\\n  function rescale() {\\n    var i = -1;\\n    domain = new Array(n);\\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\\n    return scale;\\n  }\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\\n  };\\n\\n  scale.invertExtent = function(y) {\\n    var i = range.indexOf(y);\\n    return i < 0 ? [NaN, NaN]\\n        : i < 1 ? [x0, domain[0]]\\n        : i >= n ? [domain[n - 1], x1]\\n        : [domain[i - 1], domain[i]];\\n  };\\n\\n  scale.copy = function() {\\n    return quantize()\\n        .domain([x0, x1])\\n        .range(range);\\n  };\\n\\n  return linearish(scale);\\n}\\n\\nfunction threshold() {\\n  var domain = [0.5],\\n      range = [0, 1],\\n      n = 1;\\n\\n  function scale(x) {\\n    if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\\n  }\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\\n  };\\n\\n  scale.invertExtent = function(y) {\\n    var i = range.indexOf(y);\\n    return [domain[i - 1], domain[i]];\\n  };\\n\\n  scale.copy = function() {\\n    return threshold()\\n        .domain(domain)\\n        .range(range);\\n  };\\n\\n  return scale;\\n}\\n\\nvar durationSecond = 1000,\\n    durationMinute = durationSecond * 60,\\n    durationHour = durationMinute * 60,\\n    durationDay = durationHour * 24,\\n    durationWeek = durationDay * 7,\\n    durationMonth = durationDay * 30,\\n    durationYear = durationDay * 365;\\n\\nfunction date(t) {\\n  return new Date(t);\\n}\\n\\nfunction number$1(t) {\\n  return t instanceof Date ? +t : +new Date(+t);\\n}\\n\\nfunction calendar(year, month, week, day, hour, minute, second, millisecond, format) {\\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),\\n      invert = scale.invert,\\n      domain = scale.domain;\\n\\n  var formatMillisecond = format(\\\".%L\\\"),\\n      formatSecond = format(\\\":%S\\\"),\\n      formatMinute = format(\\\"%I:%M\\\"),\\n      formatHour = format(\\\"%I %p\\\"),\\n      formatDay = format(\\\"%a %d\\\"),\\n      formatWeek = format(\\\"%b %d\\\"),\\n      formatMonth = format(\\\"%B\\\"),\\n      formatYear = format(\\\"%Y\\\");\\n\\n  var tickIntervals = [\\n    [second,  1,      durationSecond],\\n    [second,  5,  5 * durationSecond],\\n    [second, 15, 15 * durationSecond],\\n    [second, 30, 30 * durationSecond],\\n    [minute,  1,      durationMinute],\\n    [minute,  5,  5 * durationMinute],\\n    [minute, 15, 15 * durationMinute],\\n    [minute, 30, 30 * durationMinute],\\n    [  hour,  1,      durationHour  ],\\n    [  hour,  3,  3 * durationHour  ],\\n    [  hour,  6,  6 * durationHour  ],\\n    [  hour, 12, 12 * durationHour  ],\\n    [   day,  1,      durationDay   ],\\n    [   day,  2,  2 * durationDay   ],\\n    [  week,  1,      durationWeek  ],\\n    [ month,  1,      durationMonth ],\\n    [ month,  3,  3 * durationMonth ],\\n    [  year,  1,      durationYear  ]\\n  ];\\n\\n  function tickFormat(date) {\\n    return (second(date) < date ? formatMillisecond\\n        : minute(date) < date ? formatSecond\\n        : hour(date) < date ? formatMinute\\n        : day(date) < date ? formatHour\\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\\n        : year(date) < date ? formatMonth\\n        : formatYear)(date);\\n  }\\n\\n  function tickInterval(interval, start, stop, step) {\\n    if (interval == null) interval = 10;\\n\\n    // If a desired tick count is specified, pick a reasonable tick interval\\n    // based on the extent of the domain and a rough estimate of tick size.\\n    // Otherwise, assume interval is already a time interval and use it.\\n    if (typeof interval === \\\"number\\\") {\\n      var target = Math.abs(stop - start) / interval,\\n          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\\n      if (i === tickIntervals.length) {\\n        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\\n        interval = year;\\n      } else if (i) {\\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\\n        step = i[1];\\n        interval = i[0];\\n      } else {\\n        step = Math.max(d3Array.tickStep(start, stop, interval), 1);\\n        interval = millisecond;\\n      }\\n    }\\n\\n    return step == null ? interval : interval.every(step);\\n  }\\n\\n  scale.invert = function(y) {\\n    return new Date(invert(y));\\n  };\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? domain(map.call(_, number$1)) : domain().map(date);\\n  };\\n\\n  scale.ticks = function(interval, step) {\\n    var d = domain(),\\n        t0 = d[0],\\n        t1 = d[d.length - 1],\\n        r = t1 < t0,\\n        t;\\n    if (r) t = t0, t0 = t1, t1 = t;\\n    t = tickInterval(interval, t0, t1, step);\\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\\n    return r ? t.reverse() : t;\\n  };\\n\\n  scale.tickFormat = function(count, specifier) {\\n    return specifier == null ? tickFormat : format(specifier);\\n  };\\n\\n  scale.nice = function(interval, step) {\\n    var d = domain();\\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\\n        ? domain(nice(d, interval))\\n        : scale;\\n  };\\n\\n  scale.copy = function() {\\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\\n  };\\n\\n  return scale;\\n}\\n\\nfunction time() {\\n  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\\n}\\n\\nfunction utcTime() {\\n  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\\n}\\n\\nfunction sequential(interpolator) {\\n  var x0 = 0,\\n      x1 = 1,\\n      k10 = 1,\\n      clamp = false;\\n\\n  function scale(x) {\\n    var t = (x - x0) * k10;\\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\\n  }\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], k10 = x0 === x1 ? 0 : 1 / (x1 - x0), scale) : [x0, x1];\\n  };\\n\\n  scale.clamp = function(_) {\\n    return arguments.length ? (clamp = !!_, scale) : clamp;\\n  };\\n\\n  scale.interpolator = function(_) {\\n    return arguments.length ? (interpolator = _, scale) : interpolator;\\n  };\\n\\n  scale.copy = function() {\\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\\n  };\\n\\n  return linearish(scale);\\n}\\n\\nfunction diverging(interpolator) {\\n  var x0 = 0,\\n      x1 = 0.5,\\n      x2 = 1,\\n      k10 = 1,\\n      k21 = 1,\\n      clamp = false;\\n\\n  function scale(x) {\\n    var t = 0.5 + ((x = +x) - x1) * (x < x1 ? k10 : k21);\\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\\n  }\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], x2 = +_[2], k10 = x0 === x1 ? 0 : 0.5 / (x1 - x0), k21 = x1 === x2 ? 0 : 0.5 / (x2 - x1), scale) : [x0, x1, x2];\\n  };\\n\\n  scale.clamp = function(_) {\\n    return arguments.length ? (clamp = !!_, scale) : clamp;\\n  };\\n\\n  scale.interpolator = function(_) {\\n    return arguments.length ? (interpolator = _, scale) : interpolator;\\n  };\\n\\n  scale.copy = function() {\\n    return diverging(interpolator).domain([x0, x1, x2]).clamp(clamp);\\n  };\\n\\n  return linearish(scale);\\n}\\n\\nexports.scaleBand = band;\\nexports.scalePoint = point;\\nexports.scaleIdentity = identity;\\nexports.scaleLinear = linear;\\nexports.scaleLog = log;\\nexports.scaleOrdinal = ordinal;\\nexports.scaleImplicit = implicit;\\nexports.scalePow = pow;\\nexports.scaleSqrt = sqrt;\\nexports.scaleQuantile = quantile;\\nexports.scaleQuantize = quantize;\\nexports.scaleThreshold = threshold;\\nexports.scaleTime = time;\\nexports.scaleUtc = utcTime;\\nexports.scaleSequential = sequential;\\nexports.scaleDiverging = diverging;\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\n})));\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"factory\",\"define\",\"amd\",\"d3\",\"d3Collection\",\"d3Array\",\"d3Interpolate\",\"d3Format\",\"d3Time\",\"d3TimeFormat\",\"ordinal\",\"range\",\"scale\",\"d\",\"key\",\"i\",\"index\",\"get\",\"unknown\",\"implicit\",\"set\",\"domain\",\"push\",\"length\",\"map\",\"slice\",\"call\",\"scale.domain\",\"_\",\"arguments\",\"n\",\"has\",\"scale.range\",\"scale.unknown\",\"copy\",\"scale.copy\",\"band\",\"rescale\",\"reverse\",\"start\",\"stop\",\"step\",\"Math\",\"max\",\"paddingInner\",\"paddingOuter\",\"round\",\"floor\",\"align\",\"bandwidth\",\"values\",\"ordinalRange\",\"undefined\",\"rangeRound\",\"scale.rangeRound\",\"scale.bandwidth\",\"scale.step\",\"scale.round\",\"padding\",\"scale.padding\",\"min\",\"scale.paddingInner\",\"scale.paddingOuter\",\"scale.align\",\"pointish\",\"constant\",\"x\",\"number\",\"deinterpolateLinear\",\"a\",\"b\",\"deinterpolateClamp\",\"deinterpolate\",\"reinterpolateClamp\",\"reinterpolate\",\"r\",\"t\",\"bimap\",\"d0\",\"d1\",\"r0\",\"r1\",\"polymap\",\"j\",\"Array\",\"bisect\",\"source\",\"target\",\"interpolate\",\"clamp\",\"continuous\",\"piecewise\",\"output\",\"input\",\"unit\",\"invert\",\"scale.invert\",\"y\",\"interpolateRound\",\"scale.clamp\",\"scale.interpolate\",\"linearish\",\"ticks\",\"scale.ticks\",\"count\",\"tickFormat\",\"scale.tickFormat\",\"specifier\",\"tickStep\",\"formatSpecifier\",\"type\",\"value\",\"abs\",\"precision\",\"isNaN\",\"precisionPrefix\",\"formatPrefix\",\"precisionRound\",\"precisionFixed\",\"format\",\"nice\",\"scale.nice\",\"i0\",\"i1\",\"tickIncrement\",\"ceil\",\"linear\",\"interpolateNumber\",\"identity\",\"interval\",\"x0\",\"x1\",\"log\",\"pow\",\"pow10\",\"isFinite\",\"powp\",\"base\",\"E\",\"exp\",\"logp\",\"log10\",\"log2\",\"reflect\",\"f\",\"logs\",\"pows\",\"scale.base\",\"u\",\"v\",\"z\",\"k\",\"p\",\"Infinity\",\"raise\",\"exponent\",\"scale.exponent\",\"quantile\",\"thresholds\",\"invertExtent\",\"scale.invertExtent\",\"indexOf\",\"NaN\",\"sort\",\"ascending\",\"quantiles\",\"scale.quantiles\",\"quantize\",\"threshold\",\"date\",\"Date\",\"number$1\",\"calendar\",\"year\",\"month\",\"week\",\"day\",\"hour\",\"minute\",\"second\",\"millisecond\",\"formatMillisecond\",\"formatSecond\",\"formatMinute\",\"formatHour\",\"formatDay\",\"formatWeek\",\"formatMonth\",\"formatYear\",\"tickInterval\",\"bisector\",\"right\",\"tickIntervals\",\"durationYear\",\"every\",\"durationSecond\",\"durationMinute\",\"durationHour\",\"durationDay\",\"durationWeek\",\"durationMonth\",\"t0\",\"t1\",\"sequential\",\"interpolator\",\"k10\",\"scale.interpolator\",\"diverging\",\"k21\",\"x2\",\"array\",\"prototype\",\"name\",\"scaleBand\",\"scalePoint\",\"point\",\"scaleIdentity\",\"scaleLinear\",\"scaleLog\",\"scaleOrdinal\",\"scaleImplicit\",\"scalePow\",\"scaleSqrt\",\"sqrt\",\"scaleQuantile\",\"scaleQuantize\",\"scaleThreshold\",\"scaleTime\",\"time\",\"timeYear\",\"timeMonth\",\"timeWeek\",\"timeDay\",\"timeHour\",\"timeMinute\",\"timeSecond\",\"timeMillisecond\",\"timeFormat\",\"scaleUtc\",\"utcTime\",\"utcYear\",\"utcMonth\",\"utcWeek\",\"utcDay\",\"utcHour\",\"utcMinute\",\"utcSecond\",\"utcMillisecond\",\"utcFormat\",\"UTC\",\"scaleSequential\",\"scaleDiverging\",\"Object\",\"defineProperty\"]\n}\n"]