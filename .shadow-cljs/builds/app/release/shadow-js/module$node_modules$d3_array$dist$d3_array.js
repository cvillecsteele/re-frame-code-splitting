["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/d3-array/dist/d3-array.js"],"~:js","shadow$provide.module$node_modules$d3_array$dist$d3_array=function(P,T,z,J,w){(function(a,c){\"object\"===typeof w&&\"undefined\"!==typeof J?c(w):\"function\"===typeof define&&define.amd?define([\"exports\"],c):c(a.d3=a.d3||{})})(this,function(a){function c(a,c){return a<c?-1:a>c?1:a>=c?0:NaN}function p(a){1===a.length&&(a=O(a));return{left:function(c,f,r,n){null==r&&(r=0);null==n&&(n=c.length);for(;r<n;){var G=r+n>>>1;0>a(c[G],f)?r=G+1:n=G}return r},right:function(c,f,r,n){null==r&&(r=0);null==n&&(n=c.length);\nfor(;r<n;){var G=r+n>>>1;0<a(c[G],f)?n=G:r=G+1}return r}}}function O(a){return function(f,K){return c(a(f),K)}}function C(a,c){return[a,c]}function x(a){return null===a?NaN:+a}function q(a,c){var f=a.length,r=0,n=-1,G=0,k,K=0;if(null==c)for(;++n<f;){if(!isNaN(k=x(a[n]))){var A=k-G;G+=A/++r;K+=A*(k-G)}}else for(;++n<f;)isNaN(k=x(c(a[n],n,a)))||(A=k-G,G+=A/++r,K+=A*(k-G));if(1<r)return K/(r-1)}function H(a,c){return(a=q(a,c))?Math.sqrt(a):a}function W(a,c){var f=a.length,r=-1,n,G,k;if(null==c)for(;++r<\nf;){if(null!=(n=a[r])&&n>=n)for(G=k=n;++r<f;)null!=(n=a[r])&&(G>n&&(G=n),k<n&&(k=n))}else for(;++r<f;)if(null!=(n=c(a[r],r,a))&&n>=n)for(G=k=n;++r<f;)null!=(n=c(a[r],r,a))&&(G>n&&(G=n),k<n&&(k=n));return[G,k]}function h(a){return function(){return a}}function k(a){return a}function E(a,c,f){a=+a;c=+c;f=2>(n=arguments.length)?(c=a,a=0,1):3>n?1:+f;for(var r=-1,n=Math.max(0,Math.ceil((c-a)/f))|0,G=Array(n);++r<n;)G[r]=a+r*f;return G}function Z(a,c,f){c=(c-a)/Math.max(0,f);a=Math.floor(Math.log(c)/Math.LN10);\nc/=Math.pow(10,a);return 0<=a?(c>=ma?10:c>=ca?5:c>=aa?2:1)*Math.pow(10,a):-Math.pow(10,-a)/(c>=ma?10:c>=ca?5:c>=aa?2:1)}function R(a,c,f){var r=Math.abs(c-a)/Math.max(0,f);f=Math.pow(10,Math.floor(Math.log(r)/Math.LN10));r/=f;r>=ma?f*=10:r>=ca?f*=5:r>=aa&&(f*=2);return c<a?-f:f}function y(a){return Math.ceil(Math.log(a.length)/Math.LN2)+1}function S(a,c,f){null==f&&(f=x);if(r=a.length){if(0>=(c=+c)||2>r)return+f(a[0],0,a);if(1<=c)return+f(a[r-1],r-1,a);var r;c*=r-1;r=Math.floor(c);var n=+f(a[r],r,\na);a=+f(a[r+1],r+1,a);return n+(a-n)*(c-r)}}function D(a,c){var f=a.length,r=-1,n,k;if(null==c)for(;++r<f;){if(null!=(n=a[r])&&n>=n)for(k=n;++r<f;)null!=(n=a[r])&&k>n&&(k=n)}else for(;++r<f;)if(null!=(n=c(a[r],r,a))&&n>=n)for(k=n;++r<f;)null!=(n=c(a[r],r,a))&&k>n&&(k=n);return k}function u(a){if(!(u=a.length))return[];for(var c=-1,k=D(a,f),r=Array(k);++c<k;)for(var n=-1,u,h=r[c]=Array(u);++n<u;)h[n]=a[n][c];return r}function f(a){return a.length}var I=p(c),na=I.right;I=I.left;var F=Array.prototype,\nV=F.slice,ba=F.map,ma=Math.sqrt(50),ca=Math.sqrt(10),aa=Math.sqrt(2);a.bisect=na;a.bisectRight=na;a.bisectLeft=I;a.ascending=c;a.bisector=p;a.cross=function(a,c,f){var r=a.length,n=c.length,k=Array(r*n),u,G,A;null==f&&(f=C);for(u=A=0;u<r;++u){var h=a[u];for(G=0;G<n;++G,++A)k[A]=f(h,c[G])}return k};a.descending=function(a,c){return c<a?-1:c>a?1:c>=a?0:NaN};a.deviation=H;a.extent=W;a.histogram=function(){function a(a){var n,k=a.length,u=Array(k);for(n=0;n<k;++n)u[n]=c(a[n],n,a);n=f(u);var A=n[0],G=\nn[1],h=r(u,A,G);Array.isArray(h)||(h=R(A,G,h),h=E(Math.ceil(A/h)*h,G,h));for(var y=h.length;h[0]<=A;)h.shift(),--y;for(;h[y-1]>G;)h.pop(),--y;var F=Array(y+1);for(n=0;n<=y;++n){var K=F[n]=[];K.x0=0<n?h[n-1]:A;K.x1=n<y?h[n]:G}for(n=0;n<k;++n)K=u[n],A<=K&&K<=G&&F[na(h,K,0,y)].push(a[n]);return F}var c=k,f=W,r=y;a.value=function(f){return arguments.length?(c=\"function\"===typeof f?f:h(f),a):c};a.domain=function(c){return arguments.length?(f=\"function\"===typeof c?c:h([c[0],c[1]]),a):f};a.thresholds=function(c){return arguments.length?\n(r=\"function\"===typeof c?c:Array.isArray(c)?h(V.call(c)):h(c),a):r};return a};a.thresholdFreedmanDiaconis=function(a,f,k){a=ba.call(a,x).sort(c);return Math.ceil((k-f)/(2*(S(a,.75)-S(a,.25))*Math.pow(a.length,-1/3)))};a.thresholdScott=function(a,c,f){return Math.ceil((f-c)/(3.5*H(a)*Math.pow(a.length,-1/3)))};a.thresholdSturges=y;a.max=function(a,c){var f=a.length,r=-1,n,k;if(null==c)for(;++r<f;){if(null!=(n=a[r])&&n>=n)for(k=n;++r<f;)null!=(n=a[r])&&n>k&&(k=n)}else for(;++r<f;)if(null!=(n=c(a[r],\nr,a))&&n>=n)for(k=n;++r<f;)null!=(n=c(a[r],r,a))&&n>k&&(k=n);return k};a.mean=function(a,c){var f=a.length,r=f,n=-1,k,u=0;if(null==c)for(;++n<f;)isNaN(k=x(a[n]))?--r:u+=k;else for(;++n<f;)isNaN(k=x(c(a[n],n,a)))?--r:u+=k;if(r)return u/r};a.median=function(a,f){var k=a.length,r=-1,n,u=[];if(null==f)for(;++r<k;)isNaN(n=x(a[r]))||u.push(n);else for(;++r<k;)isNaN(n=x(f(a[r],r,a)))||u.push(n);return S(u.sort(c),.5)};a.merge=function(a){var c=a.length;var f=-1;for(var r=0,n,k;++f<c;)r+=a[f].length;for(n=\nArray(r);0<=--c;)for(k=a[c],f=k.length;0<=--f;)n[--r]=k[f];return n};a.min=D;a.pairs=function(a,c){null==c&&(c=C);for(var f=0,r=a.length-1,n=a[0],k=Array(0>r?0:r);f<r;)k[f]=c(n,n=a[++f]);return k};a.permute=function(a,c){for(var f=c.length,r=Array(f);f--;)r[f]=a[c[f]];return r};a.quantile=S;a.range=E;a.scan=function(a,f){if(k=a.length){var k,r=0,n=0,u,h=a[n];for(null==f&&(f=c);++r<k;)if(0>f(u=a[r],h)||0!==f(h,h))h=u,n=r;if(0===f(h,h))return n}};a.shuffle=function(a,c,f){f=(null==f?a.length:f)-(c=\nnull==c?0:+c);for(var r,n;f;)n=Math.random()*f--|0,r=a[f+c],a[f+c]=a[n+c],a[n+c]=r;return a};a.sum=function(a,c){var f=a.length,r=-1,n,k=0;if(null==c)for(;++r<f;){if(n=+a[r])k+=n}else for(;++r<f;)if(n=+c(a[r],r,a))k+=n;return k};a.ticks=function(a,c,f){var r,n=-1,k;c=+c;a=+a;f=+f;if(a===c&&0<f)return[a];if(r=c<a){var u=a;a=c;c=u}if(0===(k=Z(a,c,f))||!isFinite(k))return[];if(0<k)for(a=Math.ceil(a/k),c=Math.floor(c/k),c=Array(u=Math.ceil(c-a+1));++n<u;)c[n]=(a+n)*k;else for(a=Math.floor(a*k),c=Math.ceil(c*\nk),c=Array(u=Math.ceil(a-c+1));++n<u;)c[n]=(a-n)/k;r&&c.reverse();return c};a.tickIncrement=Z;a.tickStep=R;a.transpose=u;a.variance=q;a.zip=function(){return u(arguments)};Object.defineProperty(a,\"__esModule\",{value:!0})})}","~:source","shadow$provide[\"module$node_modules$d3_array$dist$d3_array\"] = function(global,process,require,module,exports) {\n// https://d3js.org/d3-array/ v1.2.4 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nfunction pairs(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nfunction cross(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\n\nfunction variance(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n\nfunction deviation(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n\nfunction extent(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction identity(x) {\n  return x;\n}\n\nfunction range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nfunction sturges(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n\nfunction histogram() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nfunction quantile(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction freedmanDiaconis(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction scott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction max(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n\nfunction mean(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n\nfunction median(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n\nfunction merge(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n\nfunction min(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n\nfunction permute(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n\nfunction scan(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n\nfunction shuffle(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n\nfunction sum(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nfunction zip() {\n  return transpose(arguments);\n}\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["thresholds","bisect","range","min","right","x1","bisector","thresholdSturges","mean","sum","cross","bisectLeft","bisectRight","__esModule","max","x0","tickIncrement","permute","shuffle","d3","quantile","scan","descending","value","histogram","ascending","domain","thresholdFreedmanDiaconis","ticks","pairs","variance","deviation","tickStep","thresholdScott","merge","extent","transpose","zip","left","median"]],"~:compiled-at",1535913515776,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$d3_array$dist$d3_array.js\",\n\"lineCount\":12,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/d3-array/dist/d3-array.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$d3_array$dist$d3_array\\\"] = function(global,process,require,module,exports) {\\n// https://d3js.org/d3-array/ v1.2.4 Copyright 2018 Mike Bostock\\n(function (global, factory) {\\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\\n(factory((global.d3 = global.d3 || {})));\\n}(this, (function (exports) { 'use strict';\\n\\nfunction ascending(a, b) {\\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\\n}\\n\\nfunction bisector(compare) {\\n  if (compare.length === 1) compare = ascendingComparator(compare);\\n  return {\\n    left: function(a, x, lo, hi) {\\n      if (lo == null) lo = 0;\\n      if (hi == null) hi = a.length;\\n      while (lo < hi) {\\n        var mid = lo + hi >>> 1;\\n        if (compare(a[mid], x) < 0) lo = mid + 1;\\n        else hi = mid;\\n      }\\n      return lo;\\n    },\\n    right: function(a, x, lo, hi) {\\n      if (lo == null) lo = 0;\\n      if (hi == null) hi = a.length;\\n      while (lo < hi) {\\n        var mid = lo + hi >>> 1;\\n        if (compare(a[mid], x) > 0) hi = mid;\\n        else lo = mid + 1;\\n      }\\n      return lo;\\n    }\\n  };\\n}\\n\\nfunction ascendingComparator(f) {\\n  return function(d, x) {\\n    return ascending(f(d), x);\\n  };\\n}\\n\\nvar ascendingBisect = bisector(ascending);\\nvar bisectRight = ascendingBisect.right;\\nvar bisectLeft = ascendingBisect.left;\\n\\nfunction pairs(array, f) {\\n  if (f == null) f = pair;\\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\\n  while (i < n) pairs[i] = f(p, p = array[++i]);\\n  return pairs;\\n}\\n\\nfunction pair(a, b) {\\n  return [a, b];\\n}\\n\\nfunction cross(values0, values1, reduce) {\\n  var n0 = values0.length,\\n      n1 = values1.length,\\n      values = new Array(n0 * n1),\\n      i0,\\n      i1,\\n      i,\\n      value0;\\n\\n  if (reduce == null) reduce = pair;\\n\\n  for (i0 = i = 0; i0 < n0; ++i0) {\\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\\n      values[i] = reduce(value0, values1[i1]);\\n    }\\n  }\\n\\n  return values;\\n}\\n\\nfunction descending(a, b) {\\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\\n}\\n\\nfunction number(x) {\\n  return x === null ? NaN : +x;\\n}\\n\\nfunction variance(values, valueof) {\\n  var n = values.length,\\n      m = 0,\\n      i = -1,\\n      mean = 0,\\n      value,\\n      delta,\\n      sum = 0;\\n\\n  if (valueof == null) {\\n    while (++i < n) {\\n      if (!isNaN(value = number(values[i]))) {\\n        delta = value - mean;\\n        mean += delta / ++m;\\n        sum += delta * (value - mean);\\n      }\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) {\\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\\n        delta = value - mean;\\n        mean += delta / ++m;\\n        sum += delta * (value - mean);\\n      }\\n    }\\n  }\\n\\n  if (m > 1) return sum / (m - 1);\\n}\\n\\nfunction deviation(array, f) {\\n  var v = variance(array, f);\\n  return v ? Math.sqrt(v) : v;\\n}\\n\\nfunction extent(values, valueof) {\\n  var n = values.length,\\n      i = -1,\\n      value,\\n      min,\\n      max;\\n\\n  if (valueof == null) {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = values[i]) != null && value >= value) {\\n        min = max = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = values[i]) != null) {\\n            if (min > value) min = value;\\n            if (max < value) max = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\\n        min = max = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = valueof(values[i], i, values)) != null) {\\n            if (min > value) min = value;\\n            if (max < value) max = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  return [min, max];\\n}\\n\\nvar array = Array.prototype;\\n\\nvar slice = array.slice;\\nvar map = array.map;\\n\\nfunction constant(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\\nfunction identity(x) {\\n  return x;\\n}\\n\\nfunction range(start, stop, step) {\\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\\n\\n  var i = -1,\\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\\n      range = new Array(n);\\n\\n  while (++i < n) {\\n    range[i] = start + i * step;\\n  }\\n\\n  return range;\\n}\\n\\nvar e10 = Math.sqrt(50),\\n    e5 = Math.sqrt(10),\\n    e2 = Math.sqrt(2);\\n\\nfunction ticks(start, stop, count) {\\n  var reverse,\\n      i = -1,\\n      n,\\n      ticks,\\n      step;\\n\\n  stop = +stop, start = +start, count = +count;\\n  if (start === stop && count > 0) return [start];\\n  if (reverse = stop < start) n = start, start = stop, stop = n;\\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\\n\\n  if (step > 0) {\\n    start = Math.ceil(start / step);\\n    stop = Math.floor(stop / step);\\n    ticks = new Array(n = Math.ceil(stop - start + 1));\\n    while (++i < n) ticks[i] = (start + i) * step;\\n  } else {\\n    start = Math.floor(start * step);\\n    stop = Math.ceil(stop * step);\\n    ticks = new Array(n = Math.ceil(start - stop + 1));\\n    while (++i < n) ticks[i] = (start - i) / step;\\n  }\\n\\n  if (reverse) ticks.reverse();\\n\\n  return ticks;\\n}\\n\\nfunction tickIncrement(start, stop, count) {\\n  var step = (stop - start) / Math.max(0, count),\\n      power = Math.floor(Math.log(step) / Math.LN10),\\n      error = step / Math.pow(10, power);\\n  return power >= 0\\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\\n}\\n\\nfunction tickStep(start, stop, count) {\\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\\n      error = step0 / step1;\\n  if (error >= e10) step1 *= 10;\\n  else if (error >= e5) step1 *= 5;\\n  else if (error >= e2) step1 *= 2;\\n  return stop < start ? -step1 : step1;\\n}\\n\\nfunction sturges(values) {\\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\\n}\\n\\nfunction histogram() {\\n  var value = identity,\\n      domain = extent,\\n      threshold = sturges;\\n\\n  function histogram(data) {\\n    var i,\\n        n = data.length,\\n        x,\\n        values = new Array(n);\\n\\n    for (i = 0; i < n; ++i) {\\n      values[i] = value(data[i], i, data);\\n    }\\n\\n    var xz = domain(values),\\n        x0 = xz[0],\\n        x1 = xz[1],\\n        tz = threshold(values, x0, x1);\\n\\n    // Convert number of thresholds into uniform thresholds.\\n    if (!Array.isArray(tz)) {\\n      tz = tickStep(x0, x1, tz);\\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\\n    }\\n\\n    // Remove any thresholds outside the domain.\\n    var m = tz.length;\\n    while (tz[0] <= x0) tz.shift(), --m;\\n    while (tz[m - 1] > x1) tz.pop(), --m;\\n\\n    var bins = new Array(m + 1),\\n        bin;\\n\\n    // Initialize bins.\\n    for (i = 0; i <= m; ++i) {\\n      bin = bins[i] = [];\\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\\n      bin.x1 = i < m ? tz[i] : x1;\\n    }\\n\\n    // Assign data to bins by value, ignoring any outside the domain.\\n    for (i = 0; i < n; ++i) {\\n      x = values[i];\\n      if (x0 <= x && x <= x1) {\\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\\n      }\\n    }\\n\\n    return bins;\\n  }\\n\\n  histogram.value = function(_) {\\n    return arguments.length ? (value = typeof _ === \\\"function\\\" ? _ : constant(_), histogram) : value;\\n  };\\n\\n  histogram.domain = function(_) {\\n    return arguments.length ? (domain = typeof _ === \\\"function\\\" ? _ : constant([_[0], _[1]]), histogram) : domain;\\n  };\\n\\n  histogram.thresholds = function(_) {\\n    return arguments.length ? (threshold = typeof _ === \\\"function\\\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\\n  };\\n\\n  return histogram;\\n}\\n\\nfunction quantile(values, p, valueof) {\\n  if (valueof == null) valueof = number;\\n  if (!(n = values.length)) return;\\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\\n  var n,\\n      i = (n - 1) * p,\\n      i0 = Math.floor(i),\\n      value0 = +valueof(values[i0], i0, values),\\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\\n  return value0 + (value1 - value0) * (i - i0);\\n}\\n\\nfunction freedmanDiaconis(values, min, max) {\\n  values = map.call(values, number).sort(ascending);\\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\\n}\\n\\nfunction scott(values, min, max) {\\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\\n}\\n\\nfunction max(values, valueof) {\\n  var n = values.length,\\n      i = -1,\\n      value,\\n      max;\\n\\n  if (valueof == null) {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = values[i]) != null && value >= value) {\\n        max = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = values[i]) != null && value > max) {\\n            max = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\\n        max = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\\n            max = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  return max;\\n}\\n\\nfunction mean(values, valueof) {\\n  var n = values.length,\\n      m = n,\\n      i = -1,\\n      value,\\n      sum = 0;\\n\\n  if (valueof == null) {\\n    while (++i < n) {\\n      if (!isNaN(value = number(values[i]))) sum += value;\\n      else --m;\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) {\\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\\n      else --m;\\n    }\\n  }\\n\\n  if (m) return sum / m;\\n}\\n\\nfunction median(values, valueof) {\\n  var n = values.length,\\n      i = -1,\\n      value,\\n      numbers = [];\\n\\n  if (valueof == null) {\\n    while (++i < n) {\\n      if (!isNaN(value = number(values[i]))) {\\n        numbers.push(value);\\n      }\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) {\\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\\n        numbers.push(value);\\n      }\\n    }\\n  }\\n\\n  return quantile(numbers.sort(ascending), 0.5);\\n}\\n\\nfunction merge(arrays) {\\n  var n = arrays.length,\\n      m,\\n      i = -1,\\n      j = 0,\\n      merged,\\n      array;\\n\\n  while (++i < n) j += arrays[i].length;\\n  merged = new Array(j);\\n\\n  while (--n >= 0) {\\n    array = arrays[n];\\n    m = array.length;\\n    while (--m >= 0) {\\n      merged[--j] = array[m];\\n    }\\n  }\\n\\n  return merged;\\n}\\n\\nfunction min(values, valueof) {\\n  var n = values.length,\\n      i = -1,\\n      value,\\n      min;\\n\\n  if (valueof == null) {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = values[i]) != null && value >= value) {\\n        min = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = values[i]) != null && min > value) {\\n            min = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\\n        min = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\\n            min = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  return min;\\n}\\n\\nfunction permute(array, indexes) {\\n  var i = indexes.length, permutes = new Array(i);\\n  while (i--) permutes[i] = array[indexes[i]];\\n  return permutes;\\n}\\n\\nfunction scan(values, compare) {\\n  if (!(n = values.length)) return;\\n  var n,\\n      i = 0,\\n      j = 0,\\n      xi,\\n      xj = values[j];\\n\\n  if (compare == null) compare = ascending;\\n\\n  while (++i < n) {\\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\\n      xj = xi, j = i;\\n    }\\n  }\\n\\n  if (compare(xj, xj) === 0) return j;\\n}\\n\\nfunction shuffle(array, i0, i1) {\\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\\n      t,\\n      i;\\n\\n  while (m) {\\n    i = Math.random() * m-- | 0;\\n    t = array[m + i0];\\n    array[m + i0] = array[i + i0];\\n    array[i + i0] = t;\\n  }\\n\\n  return array;\\n}\\n\\nfunction sum(values, valueof) {\\n  var n = values.length,\\n      i = -1,\\n      value,\\n      sum = 0;\\n\\n  if (valueof == null) {\\n    while (++i < n) {\\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) {\\n      if (value = +valueof(values[i], i, values)) sum += value;\\n    }\\n  }\\n\\n  return sum;\\n}\\n\\nfunction transpose(matrix) {\\n  if (!(n = matrix.length)) return [];\\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\\n      row[j] = matrix[j][i];\\n    }\\n  }\\n  return transpose;\\n}\\n\\nfunction length(d) {\\n  return d.length;\\n}\\n\\nfunction zip() {\\n  return transpose(arguments);\\n}\\n\\nexports.bisect = bisectRight;\\nexports.bisectRight = bisectRight;\\nexports.bisectLeft = bisectLeft;\\nexports.ascending = ascending;\\nexports.bisector = bisector;\\nexports.cross = cross;\\nexports.descending = descending;\\nexports.deviation = deviation;\\nexports.extent = extent;\\nexports.histogram = histogram;\\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\\nexports.thresholdScott = scott;\\nexports.thresholdSturges = sturges;\\nexports.max = max;\\nexports.mean = mean;\\nexports.median = median;\\nexports.merge = merge;\\nexports.min = min;\\nexports.pairs = pairs;\\nexports.permute = permute;\\nexports.quantile = quantile;\\nexports.range = range;\\nexports.scan = scan;\\nexports.shuffle = shuffle;\\nexports.sum = sum;\\nexports.ticks = ticks;\\nexports.tickIncrement = tickIncrement;\\nexports.tickStep = tickStep;\\nexports.transpose = transpose;\\nexports.variance = variance;\\nexports.zip = zip;\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\n})));\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"factory\",\"define\",\"amd\",\"d3\",\"ascending\",\"a\",\"b\",\"NaN\",\"bisector\",\"compare\",\"length\",\"ascendingComparator\",\"left\",\"x\",\"lo\",\"hi\",\"mid\",\"right\",\"f\",\"d\",\"pair\",\"number\",\"variance\",\"values\",\"valueof\",\"n\",\"m\",\"i\",\"mean\",\"value\",\"sum\",\"isNaN\",\"delta\",\"deviation\",\"array\",\"v\",\"Math\",\"sqrt\",\"extent\",\"min\",\"max\",\"constant\",\"identity\",\"range\",\"start\",\"stop\",\"step\",\"arguments\",\"ceil\",\"Array\",\"tickIncrement\",\"count\",\"power\",\"floor\",\"log\",\"LN10\",\"error\",\"pow\",\"e10\",\"e5\",\"e2\",\"tickStep\",\"step0\",\"abs\",\"step1\",\"sturges\",\"LN2\",\"quantile\",\"p\",\"i0\",\"value0\",\"value1\",\"transpose\",\"matrix\",\"j\",\"row\",\"ascendingBisect\",\"bisectRight\",\"bisectLeft\",\"prototype\",\"slice\",\"map\",\"bisect\",\"cross\",\"values0\",\"values1\",\"reduce\",\"n0\",\"n1\",\"i1\",\"descending\",\"histogram\",\"data\",\"xz\",\"domain\",\"x0\",\"x1\",\"tz\",\"threshold\",\"isArray\",\"shift\",\"pop\",\"bins\",\"bin\",\"push\",\"histogram.value\",\"_\",\"histogram.domain\",\"thresholds\",\"histogram.thresholds\",\"call\",\"thresholdFreedmanDiaconis\",\"freedmanDiaconis\",\"sort\",\"thresholdScott\",\"scott\",\"thresholdSturges\",\"median\",\"numbers\",\"merge\",\"arrays\",\"merged\",\"pairs\",\"permute\",\"indexes\",\"permutes\",\"scan\",\"xi\",\"xj\",\"shuffle\",\"t\",\"random\",\"ticks\",\"reverse\",\"isFinite\",\"zip\",\"Object\",\"defineProperty\"]\n}\n"]