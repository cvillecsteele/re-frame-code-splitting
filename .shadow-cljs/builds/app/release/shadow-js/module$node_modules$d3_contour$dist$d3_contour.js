["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/d3-contour/dist/d3-contour.js"],"~:js","shadow$provide.module$node_modules$d3_contour$dist$d3_contour=function(P,T,z,J,w){(function(a,c){\"object\"===typeof w&&\"undefined\"!==typeof J?c(w,z(\"module$node_modules$d3_array$dist$d3_array\")):\"function\"===typeof define&&define.amd?define([\"exports\",\"d3-array\"],c):c(a.d3=a.d3||{},a.d3)})(this,function(a,c){function p(a,c){return a-c}function O(a){return function(){return a}}function C(){}function x(){function a(a){var f=q(a);if(Array.isArray(f))f=f.slice().sort(p);else{var h=c.extent(a),u=h[0];h=\nh[1];f=c.tickStep(u,h,f);f=c.range(Math.floor(u/f)*f,Math.floor(h/f)*f,f)}return f.map(function(c){return k(a,c)})}function k(a,c){var f=[],k=[];h(a,c,function(h){x(h,a,c);for(var u=0,y=h.length,G=h[y-1][1]*h[0][0]-h[y-1][0]*h[0][1];++u<y;)G+=h[u-1][1]*h[u][0]-h[u-1][0]*h[u][1];0<G?f.push([h]):k.push(h)});k.forEach(function(a){for(var c=0,k=f.length,h;c<k;++c){a:{var u=(h=f[c])[0];for(var r=a,n=-1,y=r.length;++n<y;){b:{var D=u;for(var F=r[n],A=F[0],N=F[1],p=-1,q=0,E=D.length,I=E-1;q<E;I=q++){var S=\nD[q],x=S[0],R=S[1],V=D[I];I=V[0];var t=V[1],l,g=S;S=V;V=F;if(l=(S[0]-g[0])*(V[1]-g[1])===(V[0]-g[0])*(S[1]-g[1]))g=g[l=+(g[0]===S[0])],V=V[l],S=S[l],l=g<=V&&V<=S||S<=V&&V<=g;if(l){D=0;break b}R>N!==t>N&&A<(I-x)*(N-R)/(t-R)+x&&(p=-p)}D=p}if(D){u=D;break a}}u=0}if(-1!==u){h.push(a);break}}});return{type:\"MultiPolygon\",value:c,coordinates:f}}function h(a,c,k){function h(a){var c=[a[0][0]+G,a[0][1]+F];a=[a[1][0]+G,a[1][1]+F];var f=2*c[0]+c[1]*(u+1)*4,n=2*a[0]+a[1]*(u+1)*4,h,r;(h=D[f])?(r=y[n])?(delete D[h.end],\ndelete y[r.start],h===r?(h.ring.push(a),k(h.ring)):y[h.start]=D[r.end]={start:h.start,end:r.end,ring:h.ring.concat(r.ring)}):(delete D[h.end],h.ring.push(a),D[h.end=n]=h):(h=y[n])?(r=D[f])?(delete y[h.start],delete D[r.end],h===r?(h.ring.push(a),k(h.ring)):y[r.start]=D[h.end]={start:r.start,end:h.end,ring:r.ring.concat(h.ring)}):(delete y[h.start],h.ring.unshift(c),y[h.start=f]=h):y[f]=D[n]={start:f,end:n,ring:[c,a]}}var y=[],D=[],F;var G=F=-1;var p=a[0]>=c;for(Z[p<<1].forEach(h);++G<u-1;){var r=\np;p=a[G+1]>=c;Z[r|p<<1].forEach(h)}for(Z[p<<0].forEach(h);++F<f-1;){G=-1;p=a[F*u+u]>=c;var n=a[F*u]>=c;for(Z[p<<1|n<<2].forEach(h);++G<u-1;){r=p;p=a[F*u+u+G+1]>=c;var q=n;n=a[F*u+G+1]>=c;Z[r|p<<1|n<<2|q<<3].forEach(h)}Z[p|n<<3].forEach(h)}G=-1;n=a[F*u]>=c;for(Z[n<<2].forEach(h);++G<u-1;)q=n,n=a[F*u+G+1]>=c,Z[n<<2|q<<3].forEach(h);Z[n<<3].forEach(h)}function D(a,c,k){a.forEach(function(a){var h=a[0],y=a[1],D=h|0,G=y|0,F=c[G*u+D];if(0<h&&h<u&&D===h){var r=c[G*u+D-1];a[0]=h+(k-r)/(F-r)-.5}0<y&&y<f&&\nG===y&&(r=c[(G-1)*u+D],a[1]=y+(k-r)/(F-r)-.5)})}var u=1,f=1,q=c.thresholdSturges,x=D;a.contour=k;a.size=function(c){if(!arguments.length)return[u,f];var k=Math.ceil(c[0]),h=Math.ceil(c[1]);if(!(0<k&&0<h))throw Error(\"invalid size\");return u=k,f=h,a};a.thresholds=function(c){return arguments.length?(q=\"function\"===typeof c?c:Array.isArray(c)?O(E.call(c)):O(c),a):q};a.smooth=function(c){return arguments.length?(x=c?D:C,a):x===D};return a}function q(a,c,k){for(var h=a.width,u=a.height,f=(k<<1)+1,y=0;y<\nu;++y)for(var p=0,F=0;p<h+k;++p)p<h&&(F+=a.data[p+y*h]),p>=k&&(p>=f&&(F-=a.data[p-f+y*h]),c.data[p-k+y*h]=F/Math.min(p+1,h-1+f-p,f))}function H(a,c,k){for(var h=a.width,u=a.height,f=(k<<1)+1,y=0;y<h;++y)for(var p=0,F=0;p<u+k;++p)p<u&&(F+=a.data[y+p*h]),p>=k&&(p>=f&&(F-=a.data[y+(p-f)*h]),c.data[y+(p-k)*h]=F/Math.min(p+1,u-1+f-p,f))}function w(a){return a[0]}function h(a){return a[1]}function k(){return 1}var E=Array.prototype.slice,Z=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,\n.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]];a.contours=x;a.contourDensity=function(){function a(a){var f=new Float32Array(K*G),k=new Float32Array(K*G);a.forEach(function(a,c,n){var k=+I(a,c,n)+aa>>z,h=+Z(a,c,n)+aa>>z;a=+F(a,c,n);0<=k&&k<K&&0<=h&&h<G&&(f[k+h*K]+=a)});q({width:K,height:G,data:f},{width:K,\nheight:G,data:k},C>>z);H({width:K,height:G,data:k},{width:K,height:G,data:f},C>>z);q({width:K,height:G,data:f},{width:K,height:G,data:k},C>>z);H({width:K,height:G,data:k},{width:K,height:G,data:f},C>>z);q({width:K,height:G,data:f},{width:K,height:G,data:k},C>>z);H({width:K,height:G,data:k},{width:K,height:G,data:f},C>>z);a=W(f);Array.isArray(a)||(k=c.max(f),a=c.tickStep(0,k,a),a=c.range(0,Math.floor(k/a)*a,a),a.shift());return x().thresholds(a).size([K,G])(f).map(y)}function y(a){a.value*=Math.pow(2,\n-2*z);a.coordinates.forEach(p);return a}function p(a){a.forEach(D)}function D(a){a.forEach(u)}function u(a){a[0]=a[0]*Math.pow(2,z)-aa;a[1]=a[1]*Math.pow(2,z)-aa}function f(){aa=3*C;K=V+2*aa>>z;G=ba+2*aa>>z;return a}var I=w,Z=h,F=k,V=960,ba=500,C=20,z=2,aa=3*C,K=V+2*aa>>z,G=ba+2*aa>>z,W=O(20);a.x=function(c){return arguments.length?(I=\"function\"===typeof c?c:O(+c),a):I};a.y=function(c){return arguments.length?(Z=\"function\"===typeof c?c:O(+c),a):Z};a.weight=function(c){return arguments.length?(F=\"function\"===\ntypeof c?c:O(+c),a):F};a.size=function(a){if(!arguments.length)return[V,ba];var c=Math.ceil(a[0]),k=Math.ceil(a[1]);if(!(0<=c||0<=c))throw Error(\"invalid size\");return V=c,ba=k,f()};a.cellSize=function(a){if(!arguments.length)return 1<<z;if(!(1<=(a=+a)))throw Error(\"invalid cell size\");return z=Math.floor(Math.log(a)/Math.LN2),f()};a.thresholds=function(c){return arguments.length?(W=\"function\"===typeof c?c:Array.isArray(c)?O(E.call(c)):O(c),a):W};a.bandwidth=function(a){if(!arguments.length)return Math.sqrt(C*\n(C+1));if(!(0<=(a=+a)))throw Error(\"invalid bandwidth\");return C=Math.round((Math.sqrt(4*a*a+1)-1)/2),f()};return a};Object.defineProperty(a,\"__esModule\",{value:!0})})}","~:source","shadow$provide[\"module$node_modules$d3_contour$dist$d3_contour\"] = function(global,process,require,module,exports) {\n// https://d3js.org/d3-contour/ v1.3.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Array) { 'use strict';\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction area(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction contains(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n\nfunction noop() {}\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nfunction contours() {\n  var dx = 1,\n      dy = 1,\n      threshold = d3Array.thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = d3Array.extent(values), start = domain[0], stop = domain[1];\n      tz = d3Array.tickStep(start, stop, tz);\n      tz = d3Array.range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nfunction density() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = d3Array.max(values0);\n      tz = d3Array.tickStep(0, stop, tz);\n      tz = d3Array.range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n\nexports.contours = contours;\nexports.contourDensity = density;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$d3_array$dist$d3_array"]],"~:properties",["^5",["thresholds","ring","width","height","smooth","bandwidth","x","__esModule","d3","coordinates","value","start","cellSize","contour","type","y","size","data","contourDensity","end","weight","contours"]],"~:compiled-at",1535913515814,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$d3_contour$dist$d3_contour.js\",\n\"lineCount\":12,\n\"mappings\":\"AAAAA,cAAA,+CAAA,CAAmE,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAwC,CAElH,SAAS,CAACJ,CAAD,CAASK,CAAT,CAAkB,CACT,QAAnB,GAAA,MAAOD,EAAP,EAAiD,WAAjD,GAA+B,MAAOD,EAAtC,CAA+DE,CAAA,CAAQD,CAAR,CAAiBF,CAAA,CAAQ,4CAAR,CAAjB,CAA/D,CACkB,UAAlB,GAAA,MAAOI,OAAP,EAAgCA,MAAAC,IAAhC,CAA6CD,MAAA,CAAO,CAAC,SAAD,CAAY,UAAZ,CAAP,CAAgCD,CAAhC,CAA7C,CACCA,CAAA,CAASL,CAAAQ,GAAT,CAAqBR,CAAAQ,GAArB,EAAkC,EAAlC,CAAsCR,CAAAQ,GAAtC,CAH2B,CAA3B,CAAA,CAIC,IAJD,CAIQ,QAAS,CAACJ,CAAD,CAASK,CAAT,CAAkB,CAMpCC,QAASA,EAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CACvB,MAAOD,EAAP,CAAWC,CADY,CAUzBC,QAASA,EAAQ,CAACC,CAAD,CAAI,CACnB,MAAO,SAAQ,EAAG,CAChB,MAAOA,EADS,CADC,CAkCrBC,QAASA,EAAI,EAAG,EAqBhBC,QAASA,EAAQ,EAAG,CAMlBA,QAASA,EAAQ,CAACC,CAAD,CAAS,CACxB,IAAIC,EAAKC,CAAA,CAAUF,CAAV,CAGT,IAAKG,KAAAC,QAAA,CAAcH,CAAd,CAAL,CAKEA,CAAA,CAAKA,CAAAI,MAAA,EAAAC,KAAA,CAAgBb,CAAhB,CALP,KAAwB,CAAA,IAClBc,EAASf,CAAAgB,OAAA,CAAeR,CAAf,CADS,CACeS,EAAQF,CAAA,CAAO,CAAP,CAAWG,EAAAA;AAAOH,CAAA,CAAO,CAAP,CAC/DN,EAAA,CAAKT,CAAAmB,SAAA,CAAiBF,CAAjB,CAAwBC,CAAxB,CAA8BT,CAA9B,CACLA,EAAA,CAAKT,CAAAoB,MAAA,CAAcC,IAAAC,MAAA,CAAWL,CAAX,CAAmBR,CAAnB,CAAd,CAAuCA,CAAvC,CAA2CY,IAAAC,MAAA,CAAWJ,CAAX,CAAkBT,CAAlB,CAA3C,CAAmEA,CAAnE,CAAuEA,CAAvE,CAHiB,CAQxB,MAAOA,EAAAc,IAAA,CAAO,QAAQ,CAACC,CAAD,CAAQ,CAC5B,MAAOC,EAAA,CAAQjB,CAAR,CAAgBgB,CAAhB,CADqB,CAAvB,CAZiB,CAmB1BC,QAASA,EAAO,CAACjB,CAAD,CAASgB,CAAT,CAAgB,CAAA,IAC1BE,EAAW,EADe,CAE1BC,EAAQ,EAEZC,EAAA,CAASpB,CAAT,CAAiBgB,CAAjB,CAAwB,QAAQ,CAACK,CAAD,CAAO,CACrCC,CAAA,CAAOD,CAAP,CAAarB,CAAb,CAAqBgB,CAArB,CAzFJ,KAFkB,IACdO,EAAI,CADU,CACPC,EA2FEH,CA3FEI,OADG,CACUC,EA2FfL,CA3FsB,CAAKG,CAAL,CAAS,CAAT,CAAA,CAAY,CAAZ,CAAPE,CA2FfL,CA3FuC,CAAK,CAAL,CAAA,CAAQ,CAAR,CAAxBK,CA2FfL,CA3FoD,CAAKG,CAAL,CAAS,CAAT,CAAA,CAAY,CAAZ,CAArCE,CA2FfL,CA3FqE,CAAK,CAAL,CAAA,CAAQ,CAAR,CAClF,CAAO,EAAEE,CAAT,CAAaC,CAAb,CAAA,CAAgBE,CAAA,EA0FHL,CA1FW,CAAKE,CAAL,CAAS,CAAT,CAAA,CAAY,CAAZ,CAAR,CA0FHF,CA1F4B,CAAKE,CAAL,CAAA,CAAQ,CAAR,CAAzB,CA0FHF,CA1FyC,CAAKE,CAAL,CAAS,CAAT,CAAA,CAAY,CAAZ,CAAtC,CA0FHF,CA1F0D,CAAKE,CAAL,CAAA,CAAQ,CAAR,CA0FlD,EAAjB,CAzFGG,CAyFH,CAAoBR,CAAAS,KAAA,CAAc,CAACN,CAAD,CAAd,CAApB,CACKF,CAAAQ,KAAA,CAAWN,CAAX,CAHgC,CAAvC,CAMAF,EAAAS,QAAA,CAAc,QAAQ,CAACC,CAAD,CAAO,CAC3B,IAD2B,IAClBN,EAAI,CADc,CACXC,EAAIN,CAAAO,OADO,CACUK,CAArC,CAA8CP,CAA9C,CAAkDC,CAAlD,CAAqD,EAAED,CAAvD,CAA0D,CArFlC,CAAA,CAAA,CAsFT,IAAA,EAAA,CAACO,CAAD,CAAWZ,CAAA,CAASK,CAAT,CAAX,EAAwB,CAAxB,CApFnB,KAoF+CM,IAAAA,EAAAA,CAAAA,CArF3CN,EAAK,EAqFsCM,CArFnCL,EAAIK,CAAAJ,OAChB,CAAO,EAAEF,CAAT,CAAaC,CAAb,CAAA,CAAgB,CAIiB,CAAA,CAAA,CAJIH,IAAAA,EAAAA,CAMrC,KAN2C,IAAA,EAAAQ,CAAA,CAAKN,CAAL,CAAA,CAKvC1B,EAAIkC,CAAA,CAAM,CAAN,CALmC,CAKzBC,EAAID,CAAA,CAAM,CAAN,CALqB,CAKXE,EAAY,EALD,CAMlCV,EAAI,CAN8B,CAM3BC,EAAIH,CAAAI,OANuB,CAMVS,EAAIV,CAAJU,CAAQ,CAAzC,CAA4CX,CAA5C,CAAgDC,CAAhD,CAAmDU,CAAnD,CAAuDX,CAAA,EAAvD,CAA4D,CAAA,IACtDY;AAAKd,CAAA,CAAKE,CAAL,CADiD,CACxCa,EAAKD,CAAA,CAAG,CAAH,CADmC,CAC5BE,EAAKF,CAAA,CAAG,CAAH,CADuB,CAChBG,EAAKjB,CAAA,CAAKa,CAAL,CAASK,EAAAA,CAAKD,CAAA,CAAG,CAAH,CAA7D,KAAoEE,EAAKF,CAAA,CAAG,CAAH,CAAzE,CAQEf,CARF,CACoBY,EAAAA,CAAIG,EAAAA,CAAAA,CAAIP,EAAAA,CAAAA,CAOhB,IAAA,CAAA,EAAApC,CAIN,CAAE,CAAF,CAJM,CAAAD,CAIC,CAAE,CAAF,CAJD,GAAA+C,CAIU,CAAE,CAAF,CAJV,CAAA/C,CAIiB,CAAE,CAAF,CAJjB,KAAA+C,CAI4B,CAAE,CAAF,CAJ5B,CAAA/C,CAImC,CAAE,CAAF,CAJnC,GAAAC,CAI4C,CAAE,CAAF,CAJ5C,CAAAD,CAImD,CAAE,CAAF,CAJnD,EAAsB,CAQpC,CARoC,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAQpC,CARoC,CAQpC,CARoC,CAAA,CAAA,CAAA,CAQpC,CARoC,CAQpC,CARoC,CAAA,CAAA,CAAA,CAQpC,CAAA,CAAA,CAAOgD,CAAP,EAAYC,CAAZ,EAAiBA,CAAjB,EAAsBC,CAAtB,EAA2BA,CAA3B,EAAgCD,CAAhC,EAAqCA,CAArC,EAA0CD,CAfxC,IAOY,CAPZ,CAAoC,CAAA,CAAA,CAAO,CAAP,OAAA,CAAA,CAC9BL,CAAN,CAAWL,CAAX,GAAmBQ,CAAnB,CAAwBR,CAAxB,EAAiCnC,CAAjC,EAAsC0C,CAAtC,CAA2CH,CAA3C,GAAkDJ,CAAlD,CAAsDK,CAAtD,GAA6DG,CAA7D,CAAkEH,CAAlE,EAAwED,CAAxE,GAA8EH,CAA9E,CAAyF,CAACA,CAA1F,CAH0D,CAK5D,CAAA,CAAOA,CAP0B,CAJjB,GAAQ,CAAR,CAAqC,CAAA,CAAA,CAAOQ,CAAP,OAAA,CAAA,CAArC,CAChB,CAAA,CAAO,CAHqB,CAsFtB,GAAoD,EAApD,GAAI,CAAJ,CAAuD,CACrDX,CAAAH,KAAA,CAAaE,CAAb,CACA,MAFqD,CADC,CAD/B,CAA7B,CASA,OAAO,CACLgB,KAAM,cADD,CAEL7B,MAAOA,CAFF,CAGL8B,YAAa5B,CAHR,CAnBuB,CA4BhCE,QAASA,EAAQ,CAACpB,CAAD,CAASgB,CAAT,CAAgB+B,CAAhB,CAA0B,CAuCzCC,QAASA,EAAM,CAACC,CAAD,CAAO,CAAA,IAChBxC,EAAQ,CAACwC,CAAA,CAAK,CAAL,CAAA,CAAQ,CAAR,CAAD,CAAcpD,CAAd,CAAiBoD,CAAA,CAAK,CAAL,CAAA,CAAQ,CAAR,CAAjB,CAA8BjB,CAA9B,CACRkB,EAAAA,CAAM,CAACD,CAAA,CAAK,CAAL,CAAA,CAAQ,CAAR,CAAD,CAAcpD,CAAd,CAAiBoD,CAAA,CAAK,CAAL,CAAA,CAAQ,CAAR,CAAjB,CAA8BjB,CAA9B,CAFU,KAGhBmB,EAwCY,CAxCZA,CAAmB1C,CAwClB,CAAM,CAAN,CAxCD0C,CAAmB1C,CAwCH,CAAM,CAAN,CAxChB0C,EAwC4BC,CAxC5BD,CAwCiC,CAxCjCA,EAwCsC,CA3CtB,CAIhBE,EAuCY,CAvCZA,CAAiBH,CAuChB,CAAM,CAAN,CAvCDG,CAAiBH,CAuCD,CAAM,CAAN,CAvChBG,EAuC4BD,CAvC5BC,CAuCiC,CAvCjCA,EAuCsC,CA3CtB,CAKhBC,CALgB,CAKbC,CACP,EAAID,CAAJ,CAAQE,CAAA,CAAcL,CAAd,CAAR,EACE,CAAII,CAAJ,CAAQE,CAAA,CAAgBJ,CAAhB,CAAR,GACE,OAAOG,CAAA,CAAcF,CAAAJ,IAAd,CAEP;AADA,OAAOO,CAAA,CAAgBF,CAAA9C,MAAhB,CACP,CAAI6C,CAAJ,GAAUC,CAAV,EACED,CAAAjC,KAAAM,KAAA,CAAYuB,CAAZ,CACA,CAAAH,CAAA,CAASO,CAAAjC,KAAT,CAFF,EAIEoC,CAAA,CAAgBH,CAAA7C,MAAhB,CAJF,CAI6B+C,CAAA,CAAcD,CAAAL,IAAd,CAJ7B,CAIoD,CAACzC,MAAO6C,CAAA7C,MAAR,CAAiByC,IAAKK,CAAAL,IAAtB,CAA6B7B,KAAMiC,CAAAjC,KAAAqC,OAAA,CAAcH,CAAAlC,KAAd,CAAnC,CAPtD,GAUE,OAAOmC,CAAA,CAAcF,CAAAJ,IAAd,CAEP,CADAI,CAAAjC,KAAAM,KAAA,CAAYuB,CAAZ,CACA,CAAAM,CAAA,CAAcF,CAAAJ,IAAd,CAAsBG,CAAtB,CAAA,CAAkCC,CAZpC,CADF,CAeO,CAAIA,CAAJ,CAAQG,CAAA,CAAgBJ,CAAhB,CAAR,EACL,CAAIE,CAAJ,CAAQC,CAAA,CAAcL,CAAd,CAAR,GACE,OAAOM,CAAA,CAAgBH,CAAA7C,MAAhB,CAEP,CADA,OAAO+C,CAAA,CAAcD,CAAAL,IAAd,CACP,CAAII,CAAJ,GAAUC,CAAV,EACED,CAAAjC,KAAAM,KAAA,CAAYuB,CAAZ,CACA,CAAAH,CAAA,CAASO,CAAAjC,KAAT,CAFF,EAIEoC,CAAA,CAAgBF,CAAA9C,MAAhB,CAJF,CAI6B+C,CAAA,CAAcF,CAAAJ,IAAd,CAJ7B,CAIoD,CAACzC,MAAO8C,CAAA9C,MAAR,CAAiByC,IAAKI,CAAAJ,IAAtB,CAA6B7B,KAAMkC,CAAAlC,KAAAqC,OAAA,CAAcJ,CAAAjC,KAAd,CAAnC,CAPtD,GAUE,OAAOoC,CAAA,CAAgBH,CAAA7C,MAAhB,CAEP,CADA6C,CAAAjC,KAAAsC,QAAA,CAAelD,CAAf,CACA,CAAAgD,CAAA,CAAgBH,CAAA7C,MAAhB,CAA0B0C,CAA1B,CAAA,CAAwCG,CAZ1C,CADK,CAgBLG,CAAA,CAAgBN,CAAhB,CAhBK,CAgByBK,CAAA,CAAcH,CAAd,CAhBzB,CAgBmD,CAAC5C,MAAO0C,CAAR,CAAoBD,IAAKG,CAAzB,CAAmChC,KAAM,CAACZ,CAAD,CAAQyC,CAAR,CAAzC,CArCtC,CAvCmB,IACrCO,EAAkB,EADmB,CAErCD,EAAgB,EAFqB,CAGlCxB,CAGP,KAAAnC,EAAImC,CAAJnC,CAAS,EACT,KAAA+D,EAAK5D,CAAA,CAAO,CAAP,CAAL4D,EAAkB5C,CAElB,KADA6C,CAAA,CAAMD,CAAN,EAAY,CAAZ,CAAAhC,QAAA,CAAuBoB,CAAvB,CACA,CAAO,EAAEnD,CAAT,CAAauD,CAAb,CAAkB,CAAlB,CAAA,CAAqB,CACnB,IAAAU;AAAKF,CAAIA,EAAT,CAAc5D,CAAA,CAAOH,CAAP,CAAW,CAAX,CAAd,EAA+BmB,CAC/B6C,EAAA,CAAMC,CAAN,CAAWF,CAAX,EAAiB,CAAjB,CAAAhC,QAAA,CAA4BoB,CAA5B,CAFmB,CAOrB,IAHAa,CAAA,CAAMD,CAAN,EAAY,CAAZ,CAAAhC,QAAA,CAAuBoB,CAAvB,CAGA,CAAO,EAAEhB,CAAT,CAAa+B,CAAb,CAAkB,CAAlB,CAAA,CAAqB,CACnBlE,CAAA,CAAK,EACL+D,EAAA,CAAK5D,CAAA,CAAOgC,CAAP,CAAWoB,CAAX,CAAgBA,CAAhB,CAAL,EAA4BpC,CAC5B,KAAAgD,EAAKhE,CAAA,CAAOgC,CAAP,CAAWoB,CAAX,CAALY,EAAuBhD,CAEvB,KADA6C,CAAA,CAAMD,CAAN,EAAY,CAAZ,CAAgBI,CAAhB,EAAsB,CAAtB,CAAApC,QAAA,CAAiCoB,CAAjC,CACA,CAAO,EAAEnD,CAAT,CAAauD,CAAb,CAAkB,CAAlB,CAAA,CAAqB,CACnBU,CAAA,CAAKF,CAAIA,EAAT,CAAc5D,CAAA,CAAOgC,CAAP,CAAWoB,CAAX,CAAgBA,CAAhB,CAAqBvD,CAArB,CAAyB,CAAzB,CAAd,EAA6CmB,CAC7C,KAAAiD,EAAKD,CAAIA,EAAT,CAAchE,CAAA,CAAOgC,CAAP,CAAWoB,CAAX,CAAgBvD,CAAhB,CAAoB,CAApB,CAAd,EAAwCmB,CACxC6C,EAAA,CAAMC,CAAN,CAAWF,CAAX,EAAiB,CAAjB,CAAqBI,CAArB,EAA2B,CAA3B,CAA+BC,CAA/B,EAAqC,CAArC,CAAArC,QAAA,CAAgDoB,CAAhD,CAHmB,CAKrBa,CAAA,CAAMD,CAAN,CAAWI,CAAX,EAAiB,CAAjB,CAAApC,QAAA,CAA4BoB,CAA5B,CAVmB,CAcrBnD,CAAA,CAAK,EACLmE,EAAA,CAAKhE,CAAA,CAAOgC,CAAP,CAAWoB,CAAX,CAAL,EAAuBpC,CAEvB,KADA6C,CAAA,CAAMG,CAAN,EAAY,CAAZ,CAAApC,QAAA,CAAuBoB,CAAvB,CACA,CAAO,EAAEnD,CAAT,CAAauD,CAAb,CAAkB,CAAlB,CAAA,CACEa,CACA,CADKD,CACL,CADSA,CACT,CADchE,CAAA,CAAOgC,CAAP,CAAWoB,CAAX,CAAgBvD,CAAhB,CAAoB,CAApB,CACd,EADwCmB,CACxC,CAAA6C,CAAA,CAAMG,CAAN,EAAY,CAAZ,CAAgBC,CAAhB,EAAsB,CAAtB,CAAArC,QAAA,CAAiCoB,CAAjC,CAEFa,EAAA,CAAMG,CAAN,EAAY,CAAZ,CAAApC,QAAA,CAAuBoB,CAAvB,CArCyC,CAqF3CkB,QAASA,EAAY,CAAC7C,CAAD,CAAOrB,CAAP,CAAegB,CAAf,CAAsB,CACzCK,CAAAO,QAAA,CAAa,QAAQ,CAACG,CAAD,CAAQ,CAAA,IACvBlC,EAAIkC,CAAA,CAAM,CAAN,CADmB,CAEvBC,EAAID,CAAA,CAAM,CAAN,CAFmB,CAGvBoC,EAAKtE,CAALsE,CAAS,CAHc,CAIvBC,EAAKpC,CAALoC,CAAS,CAJc,CAMvBC,EAAKrE,CAAA,CAAOoE,CAAP,CAAYhB,CAAZ,CAAiBe,CAAjB,CACT,IAAQ,CAAR,CAAItE,CAAJ,EAAaA,CAAb,CAAiBuD,CAAjB,EAAuBe,CAAvB,GAA8BtE,CAA9B,CAAiC,CAC/B,IAAAyE,EAAKtE,CAAA,CAAOoE,CAAP,CAAYhB,CAAZ,CAAiBe,CAAjB,CAAsB,CAAtB,CACLpC,EAAA,CAAM,CAAN,CAAA,CAAWlC,CAAX,EAAgBmB,CAAhB,CAAwBsD,CAAxB,GAA+BD,CAA/B,CAAoCC,CAApC,EAA0C,EAFX,CAIzB,CAAR,CAAItC,CAAJ,EAAaA,CAAb,CAAiB+B,CAAjB;AAAuBK,CAAvB,GAA8BpC,CAA9B,GACEsC,CACA,CADKtE,CAAA,EAAQoE,CAAR,CAAa,CAAb,EAAkBhB,CAAlB,CAAuBe,CAAvB,CACL,CAAApC,CAAA,CAAM,CAAN,CAAA,CAAWC,CAAX,EAAgBhB,CAAhB,CAAwBsD,CAAxB,GAA+BD,CAA/B,CAAoCC,CAApC,EAA0C,EAF5C,CAX2B,CAA7B,CADyC,CA1IzB,IACdlB,EAAK,CADS,CAEdW,EAAK,CAFS,CAGd7D,EAAYV,CAAA+E,iBAHE,CAIdjD,EAAS4C,CAyJbnE,EAAAkB,QAAA,CAAmBA,CAEnBlB,EAAAyE,KAAA,CAAgBC,QAAQ,CAACC,CAAD,CAAI,CAC1B,GAAI,CAACC,SAAAlD,OAAL,CAAuB,MAAO,CAAC2B,CAAD,CAAKW,CAAL,CADJ,KAEtBa,EAAK/D,IAAAgE,KAAA,CAAUH,CAAA,CAAE,CAAF,CAAV,CAFiB,CAEAI,EAAKjE,IAAAgE,KAAA,CAAUH,CAAA,CAAE,CAAF,CAAV,CAC/B,IAAI,EAAO,CAAP,CAAEE,CAAF,EAAoB,CAApB,CAAeE,CAAf,CAAJ,CAA4B,KAAUC,MAAJ,CAAU,cAAV,CAAN,CAC5B,MAAO3B,EAAA,CAAKwB,CAAL,CAASb,CAAT,CAAce,CAAd,CAAkB/E,CAJC,CAO5BA,EAAAiF,WAAA,CAAsBC,QAAQ,CAACP,CAAD,CAAI,CAChC,MAAOC,UAAAlD,OAAA,EAAoBvB,CAAA,CAAyB,UAAb,GAAA,MAAOwE,EAAP,CAA0BA,CAA1B,CAA8BvE,KAAAC,QAAA,CAAcsE,CAAd,CAAA,CAAmB9E,CAAA,CAASS,CAAA6E,KAAA,CAAWR,CAAX,CAAT,CAAnB,CAA6C9E,CAAA,CAAS8E,CAAT,CAAvF,CAAoG3E,CAAxH,EAAoIG,CAD3G,CAIlCH,EAAAuB,OAAA,CAAkB6D,QAAQ,CAACT,CAAD,CAAI,CAC5B,MAAOC,UAAAlD,OAAA,EAAoBH,CAAA,CAASoD,CAAA,CAAIR,CAAJ,CAAmBpE,CAA5B,CAAkCC,CAAtD,EAAkEuB,CAAlE,GAA6E4C,CADxD,CAI9B,OAAOnE,EA9KW,CAoLpBqF,QAASA,EAAK,CAACC,CAAD,CAASC,CAAT,CAAiB1C,CAAjB,CAAoB,CAIhC,IAJgC,IAC5BpB,EAAI6D,CAAAE,MADwB,CAE5BC,EAAIH,CAAAI,OAFwB,CAG5BC,GAAK9C,CAAL8C,EAAU,CAAVA,EAAe,CAHa,CAIvBxD,EAAI,CAAb,CAAgBA,CAAhB;AAAoBsD,CAApB,CAAuB,EAAEtD,CAAzB,CACE,IAD0B,IACjBX,EAAI,CADa,CACVoE,EAAK,CAArB,CAAwBpE,CAAxB,CAA4BC,CAA5B,CAAgCoB,CAAhC,CAAmC,EAAErB,CAArC,CACMA,CAGJ,CAHQC,CAGR,GAFEmE,CAEF,EAFQN,CAAAO,KAAA,CAAYrE,CAAZ,CAAgBW,CAAhB,CAAoBV,CAApB,CAER,EAAID,CAAJ,EAASqB,CAAT,GACMrB,CAGJ,EAHSmE,CAGT,GAFEC,CAEF,EAFQN,CAAAO,KAAA,CAAYrE,CAAZ,CAAgBmE,CAAhB,CAAoBxD,CAApB,CAAwBV,CAAxB,CAER,EAAA8D,CAAAM,KAAA,CAAYrE,CAAZ,CAAgBqB,CAAhB,CAAoBV,CAApB,CAAwBV,CAAxB,CAAA,CAA6BmE,CAA7B,CAAkC9E,IAAAgF,IAAA,CAAStE,CAAT,CAAa,CAAb,CAAgBC,CAAhB,CAAoB,CAApB,CAAwBkE,CAAxB,CAA4BnE,CAA5B,CAA+BmE,CAA/B,CAJpC,CAT4B,CAsBlCI,QAASA,EAAK,CAACT,CAAD,CAASC,CAAT,CAAiB1C,CAAjB,CAAoB,CAIhC,IAJgC,IAC5BpB,EAAI6D,CAAAE,MADwB,CAE5BC,EAAIH,CAAAI,OAFwB,CAG5BC,GAAK9C,CAAL8C,EAAU,CAAVA,EAAe,CAHa,CAIvBnE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBC,CAApB,CAAuB,EAAED,CAAzB,CACE,IAD0B,IACjBW,EAAI,CADa,CACVyD,EAAK,CAArB,CAAwBzD,CAAxB,CAA4BsD,CAA5B,CAAgC5C,CAAhC,CAAmC,EAAEV,CAArC,CACMA,CAGJ,CAHQsD,CAGR,GAFEG,CAEF,EAFQN,CAAAO,KAAA,CAAYrE,CAAZ,CAAgBW,CAAhB,CAAoBV,CAApB,CAER,EAAIU,CAAJ,EAASU,CAAT,GACMV,CAGJ,EAHSwD,CAGT,GAFEC,CAEF,EAFQN,CAAAO,KAAA,CAAYrE,CAAZ,EAAiBW,CAAjB,CAAqBwD,CAArB,EAA0BlE,CAA1B,CAER,EAAA8D,CAAAM,KAAA,CAAYrE,CAAZ,EAAiBW,CAAjB,CAAqBU,CAArB,EAA0BpB,CAA1B,CAAA,CAA+BmE,CAA/B,CAAoC9E,IAAAgF,IAAA,CAAS3D,CAAT,CAAa,CAAb,CAAgBsD,CAAhB,CAAoB,CAApB,CAAwBE,CAAxB,CAA4BxD,CAA5B,CAA+BwD,CAA/B,CAJtC,CAT4B,CAmBlCK,QAASA,EAAQ,CAACC,CAAD,CAAI,CACnB,MAAOA,EAAA,CAAE,CAAF,CADY,CAIrBC,QAASA,EAAQ,CAACD,CAAD,CAAI,CACnB,MAAOA,EAAA,CAAE,CAAF,CADY,CAIrBE,QAASA,EAAa,EAAG,CACvB,MAAO,EADgB,CAxSzB,IAAI7F,EAFQF,KAAAgG,UAEA9F,MAAZ,CAgDIwD,EAAQ,CACV,EADU,CAEV,CAAC,CAAC,CAAC,CAAD,CAAM,GAAN,CAAD,CAAa,CAAC,EAAD,CAAM,CAAN,CAAb,CAAD,CAFU,CAGV,CAAC,CAAC,CAAC,GAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,GAAN,CAAb,CAAD,CAHU,CAIV,CAAC,CAAC,CAAC,GAAD,CAAM,CAAN,CAAD,CAAa,CAAC,EAAD,CAAM,CAAN,CAAb,CAAD,CAJU,CAKV,CAAC,CAAC,CAAC,CAAD;AAAM,EAAN,CAAD,CAAa,CAAC,GAAD,CAAM,CAAN,CAAb,CAAD,CALU,CAMV,CAAC,CAAC,CAAC,CAAD,CAAM,GAAN,CAAD,CAAa,CAAC,EAAD,CAAM,CAAN,CAAb,CAAD,CAA2B,CAAC,CAAC,CAAD,CAAM,EAAN,CAAD,CAAa,CAAC,GAAD,CAAM,CAAN,CAAb,CAA3B,CANU,CAOV,CAAC,CAAC,CAAC,CAAD,CAAM,EAAN,CAAD,CAAa,CAAC,CAAD,CAAM,GAAN,CAAb,CAAD,CAPU,CAQV,CAAC,CAAC,CAAC,CAAD,CAAM,EAAN,CAAD,CAAa,CAAC,EAAD,CAAM,CAAN,CAAb,CAAD,CARU,CASV,CAAC,CAAC,CAAC,EAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,EAAN,CAAb,CAAD,CATU,CAUV,CAAC,CAAC,CAAC,CAAD,CAAM,GAAN,CAAD,CAAa,CAAC,CAAD,CAAM,EAAN,CAAb,CAAD,CAVU,CAWV,CAAC,CAAC,CAAC,EAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,EAAN,CAAb,CAAD,CAA2B,CAAC,CAAC,GAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,GAAN,CAAb,CAA3B,CAXU,CAYV,CAAC,CAAC,CAAC,GAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,EAAN,CAAb,CAAD,CAZU,CAaV,CAAC,CAAC,CAAC,EAAD,CAAM,CAAN,CAAD,CAAa,CAAC,GAAD,CAAM,CAAN,CAAb,CAAD,CAbU,CAcV,CAAC,CAAC,CAAC,CAAD,CAAM,GAAN,CAAD,CAAa,CAAC,GAAD,CAAM,CAAN,CAAb,CAAD,CAdU,CAeV,CAAC,CAAC,CAAC,EAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,GAAN,CAAb,CAAD,CAfU,CAgBV,EAhBU,CAgXZ1E,EAAAY,SAAA,CAAmBA,CACnBZ,EAAAiH,eAAA,CArHAC,QAAgB,EAAG,CAajBA,QAASA,EAAO,CAACT,CAAD,CAAO,CAAA,IACjBU,EAAU,IAAIC,YAAJ,CAAiB/E,CAAjB,CAAqBgE,CAArB,CADO,CAEjBgB,EAAU,IAAID,YAAJ,CAAiB/E,CAAjB,CAAqBgE,CAArB,CAEdI,EAAAhE,QAAA,CAAa,QAAQ,CAACoE,CAAD,CAAIzE,CAAJ,CAAOqE,CAAP,CAAa,CAAA,IAC5BxD,EAAM,CAACvC,CAAA,CAAEmG,CAAF,CAAKzE,CAAL,CAAQqE,CAAR,CAAPxD,CAAuBqE,EAAvBrE,EAA6BsE,CADD,CAE5BrE,EAAM,CAACL,CAAA,CAAEgE,CAAF,CAAKzE,CAAL,CAAQqE,CAAR,CAAPvD,CAAuBoE,EAAvBpE,EAA6BqE,CAC7BC,EAAAA,CAAK,CAACC,CAAA,CAAOZ,CAAP,CAAUzE,CAAV,CAAaqE,CAAb,CACA,EAAV,EAAIxD,CAAJ,EAAeA,CAAf,CAAoBZ,CAApB,EAA+B,CAA/B,EAAyBa,CAAzB,EAAoCA,CAApC,CAAyCmD,CAAzC,GACEc,CAAA,CAAQlE,CAAR,CAAaC,CAAb,CAAkBb,CAAlB,CADF,EAC0BmF,CAD1B,CAJgC,CAAlC,CAUAvB,EAAA,CAAM,CAACG,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMU,CAA5B,CAAN,CAA4C,CAACf,MAAO/D,CAAR;AAAWiE,OAAQD,CAAnB,CAAsBI,KAAMY,CAA5B,CAA5C,CAAkF5D,CAAlF,EAAuF8D,CAAvF,CACAZ,EAAA,CAAM,CAACP,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMY,CAA5B,CAAN,CAA4C,CAACjB,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMU,CAA5B,CAA5C,CAAkF1D,CAAlF,EAAuF8D,CAAvF,CACAtB,EAAA,CAAM,CAACG,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMU,CAA5B,CAAN,CAA4C,CAACf,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMY,CAA5B,CAA5C,CAAkF5D,CAAlF,EAAuF8D,CAAvF,CACAZ,EAAA,CAAM,CAACP,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMY,CAA5B,CAAN,CAA4C,CAACjB,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMU,CAA5B,CAA5C,CAAkF1D,CAAlF,EAAuF8D,CAAvF,CACAtB,EAAA,CAAM,CAACG,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMU,CAA5B,CAAN,CAA4C,CAACf,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMY,CAA5B,CAA5C,CAAkF5D,CAAlF,EAAuF8D,CAAvF,CACAZ,EAAA,CAAM,CAACP,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMY,CAA5B,CAAN,CAA4C,CAACjB,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMU,CAA5B,CAA5C,CAAkF1D,CAAlF,EAAuF8D,CAAvF,CAEIzG,EAAAA,CAAKC,CAAA,CAAUoG,CAAV,CAGJnG,MAAAC,QAAA,CAAcH,CAAd,CAAL,GACMS,CAGJ,CAHWlB,CAAAqH,IAAA,CAAYP,CAAZ,CAGX,CAFArG,CAEA,CAFKT,CAAAmB,SAAA,CAAiB,CAAjB,CAAoBD,CAApB,CAA0BT,CAA1B,CAEL,CADAA,CACA,CADKT,CAAAoB,MAAA,CAAc,CAAd,CAAiBC,IAAAC,MAAA,CAAWJ,CAAX,CAAkBT,CAAlB,CAAjB,CAAyCA,CAAzC,CAA6CA,CAA7C,CACL,CAAAA,CAAA6G,MAAA,EAJF,CAOA,OAAO/G,EAAA,EAAAiF,WAAA,CACS/E,CADT,CAAAuE,KAAA,CAEG,CAAChD,CAAD,CAAIgE,CAAJ,CAFH,CAAA,CAGJc,CAHI,CAAAvF,IAAA,CAIEgG,CAJF,CA/Bc,CAsCvBA,QAASA,EAAS,CAACC,CAAD,CAAW,CAC3BA,CAAAhG,MAAA,EAAkBH,IAAAoG,IAAA,CAAS,CAAT;AAAa,EAAb,CAAiBP,CAAjB,CAClBM,EAAAlE,YAAAlB,QAAA,CAA6BsF,CAA7B,CACA,OAAOF,EAHoB,CAM7BE,QAASA,EAAgB,CAACpE,CAAD,CAAc,CACrCA,CAAAlB,QAAA,CAAoBuF,CAApB,CADqC,CAIvCA,QAASA,EAAa,CAACrE,CAAD,CAAc,CAClCA,CAAAlB,QAAA,CAAoBwF,CAApB,CADkC,CAKpCA,QAASA,EAAc,CAACtE,CAAD,CAAc,CACnCA,CAAA,CAAY,CAAZ,CAAA,CAAiBA,CAAA,CAAY,CAAZ,CAAjB,CAAkCjC,IAAAoG,IAAA,CAAS,CAAT,CAAYP,CAAZ,CAAlC,CAAmDD,EACnD3D,EAAA,CAAY,CAAZ,CAAA,CAAiBA,CAAA,CAAY,CAAZ,CAAjB,CAAkCjC,IAAAoG,IAAA,CAAS,CAAT,CAAYP,CAAZ,CAAlC,CAAmDD,EAFhB,CAKrCY,QAASA,EAAM,EAAG,CAChBZ,EAAA,CAAQ,CAAR,CAAI7D,CACJpB,EAAA,CAAK4B,CAAL,CAAc,CAAd,CAAUqD,EAAV,EAAoBC,CACpBlB,EAAA,CAAKzB,EAAL,CAAc,CAAd,CAAU0C,EAAV,EAAoBC,CACpB,OAAOL,EAJS,CAvED,IACbxG,EAAIkG,CADS,CAEb/D,EAAIiE,CAFS,CAGbW,EAASV,CAHI,CAIb9C,EAAK,GAJQ,CAKbW,GAAK,GALQ,CAMbnB,EAAI,EANS,CAOb8D,EAAI,CAPS,CAQbD,GAAQ,CAARA,CAAI7D,CARS,CASbpB,EAAK4B,CAAL5B,CAAc,CAAdA,CAAUiF,EAAVjF,EAAoBkF,CATP,CAUblB,EAAKzB,EAALyB,CAAc,CAAdA,CAAUiB,EAAVjB,EAAoBkB,CAVP,CAWbxG,EAAYN,CAAA,CAAS,EAAT,CAmEhByG,EAAAxG,EAAA,CAAYyH,QAAQ,CAAC5C,CAAD,CAAI,CACtB,MAAOC,UAAAlD,OAAA,EAAoB5B,CAAA,CAAiB,UAAb,GAAA,MAAO6E,EAAP,CAA0BA,CAA1B,CAA8B9E,CAAA,CAAS,CAAC8E,CAAV,CAAlC,CAAgD2B,CAApE,EAA+ExG,CADhE,CAIxBwG,EAAArE,EAAA,CAAYuF,QAAQ,CAAC7C,CAAD,CAAI,CACtB,MAAOC,UAAAlD,OAAA,EAAoBO,CAAA,CAAiB,UAAb,GAAA,MAAO0C,EAAP,CAA0BA,CAA1B,CAA8B9E,CAAA,CAAS,CAAC8E,CAAV,CAAlC,CAAgD2B,CAApE,EAA+ErE,CADhE,CAIxBqE,EAAAO,OAAA,CAAiBY,QAAQ,CAAC9C,CAAD,CAAI,CAC3B,MAAOC,UAAAlD,OAAA,EAAoBmF,CAAA,CAAsB,UAAb;AAAA,MAAOlC,EAAP,CAA0BA,CAA1B,CAA8B9E,CAAA,CAAS,CAAC8E,CAAV,CAAvC,CAAqD2B,CAAzE,EAAoFO,CADhE,CAI7BP,EAAA7B,KAAA,CAAeiD,QAAQ,CAAC/C,CAAD,CAAI,CACzB,GAAI,CAACC,SAAAlD,OAAL,CAAuB,MAAO,CAAC2B,CAAD,CAAKW,EAAL,CADL,KAErBa,EAAK/D,IAAAgE,KAAA,CAAUH,CAAA,CAAE,CAAF,CAAV,CAFgB,CAECI,EAAKjE,IAAAgE,KAAA,CAAUH,CAAA,CAAE,CAAF,CAAV,CAC/B,IAAI,EAAQ,CAAR,EAAEE,CAAF,EAAsB,CAAtB,EAAgBA,CAAhB,CAAJ,CAA8B,KAAUG,MAAJ,CAAU,cAAV,CAAN,CAC9B,MAAO3B,EAAA,CAAKwB,CAAL,CAASb,EAAT,CAAce,CAAd,CAAkBuC,CAAA,EAJA,CAO3BhB,EAAAqB,SAAA,CAAmBC,QAAQ,CAACjD,CAAD,CAAI,CAC7B,GAAI,CAACC,SAAAlD,OAAL,CAAuB,MAAO,EAAP,EAAYiF,CACnC,IAAI,EAAc,CAAd,GAAGhC,CAAH,CAAO,CAACA,CAAR,EAAJ,CAAsB,KAAUK,MAAJ,CAAU,mBAAV,CAAN,CACtB,MAAO2B,EAAA,CAAI7F,IAAAC,MAAA,CAAWD,IAAA+G,IAAA,CAASlD,CAAT,CAAX,CAAyB7D,IAAAgH,IAAzB,CAAJ,CAAwCR,CAAA,EAHlB,CAM/BhB,EAAArB,WAAA,CAAqB8C,QAAQ,CAACpD,CAAD,CAAI,CAC/B,MAAOC,UAAAlD,OAAA,EAAoBvB,CAAA,CAAyB,UAAb,GAAA,MAAOwE,EAAP,CAA0BA,CAA1B,CAA8BvE,KAAAC,QAAA,CAAcsE,CAAd,CAAA,CAAmB9E,CAAA,CAASS,CAAA6E,KAAA,CAAWR,CAAX,CAAT,CAAnB,CAA6C9E,CAAA,CAAS8E,CAAT,CAAvF,CAAoG2B,CAAxH,EAAmInG,CAD3G,CAIjCmG,EAAA0B,UAAA,CAAoBC,QAAQ,CAACtD,CAAD,CAAI,CAC9B,GAAI,CAACC,SAAAlD,OAAL,CAAuB,MAAOZ,KAAAoH,KAAA,CAAUrF,CAAV;CAAeA,CAAf,CAAmB,CAAnB,EAC9B,IAAI,EAAc,CAAd,GAAG8B,CAAH,CAAO,CAACA,CAAR,EAAJ,CAAsB,KAAUK,MAAJ,CAAU,mBAAV,CAAN,CACtB,MAAOnC,EAAA,CAAI/B,IAAAqH,MAAA,EAAYrH,IAAAoH,KAAA,CAAU,CAAV,CAAcvD,CAAd,CAAkBA,CAAlB,CAAsB,CAAtB,CAAZ,CAAuC,CAAvC,EAA4C,CAA5C,CAAJ,CAAoD2C,CAAA,EAH7B,CAMhC,OAAOhB,EAjHU,CAuHnB8B,OAAAC,eAAA,CAAsBjJ,CAAtB,CAA+B,YAA/B,CAA6C,CAAE6B,MAAO,CAAA,CAAT,CAA7C,CAvaoC,CAJnC,CAFkH;\",\n\"sources\":[\"node_modules/d3-contour/dist/d3-contour.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$d3_contour$dist$d3_contour\\\"] = function(global,process,require,module,exports) {\\n// https://d3js.org/d3-contour/ v1.3.2 Copyright 2018 Mike Bostock\\n(function (global, factory) {\\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\\n(factory((global.d3 = global.d3 || {}),global.d3));\\n}(this, (function (exports,d3Array) { 'use strict';\\n\\nvar array = Array.prototype;\\n\\nvar slice = array.slice;\\n\\nfunction ascending(a, b) {\\n  return a - b;\\n}\\n\\nfunction area(ring) {\\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\\n  return area;\\n}\\n\\nfunction constant(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\\nfunction contains(ring, hole) {\\n  var i = -1, n = hole.length, c;\\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\\n  return 0;\\n}\\n\\nfunction ringContains(ring, point) {\\n  var x = point[0], y = point[1], contains = -1;\\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\\n    if (segmentContains(pi, pj, point)) return 0;\\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\\n  }\\n  return contains;\\n}\\n\\nfunction segmentContains(a, b, c) {\\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\\n}\\n\\nfunction collinear(a, b, c) {\\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\\n}\\n\\nfunction within(p, q, r) {\\n  return p <= q && q <= r || r <= q && q <= p;\\n}\\n\\nfunction noop() {}\\n\\nvar cases = [\\n  [],\\n  [[[1.0, 1.5], [0.5, 1.0]]],\\n  [[[1.5, 1.0], [1.0, 1.5]]],\\n  [[[1.5, 1.0], [0.5, 1.0]]],\\n  [[[1.0, 0.5], [1.5, 1.0]]],\\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\\n  [[[1.0, 0.5], [1.0, 1.5]]],\\n  [[[1.0, 0.5], [0.5, 1.0]]],\\n  [[[0.5, 1.0], [1.0, 0.5]]],\\n  [[[1.0, 1.5], [1.0, 0.5]]],\\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\\n  [[[1.5, 1.0], [1.0, 0.5]]],\\n  [[[0.5, 1.0], [1.5, 1.0]]],\\n  [[[1.0, 1.5], [1.5, 1.0]]],\\n  [[[0.5, 1.0], [1.0, 1.5]]],\\n  []\\n];\\n\\nfunction contours() {\\n  var dx = 1,\\n      dy = 1,\\n      threshold = d3Array.thresholdSturges,\\n      smooth = smoothLinear;\\n\\n  function contours(values) {\\n    var tz = threshold(values);\\n\\n    // Convert number of thresholds into uniform thresholds.\\n    if (!Array.isArray(tz)) {\\n      var domain = d3Array.extent(values), start = domain[0], stop = domain[1];\\n      tz = d3Array.tickStep(start, stop, tz);\\n      tz = d3Array.range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\\n    } else {\\n      tz = tz.slice().sort(ascending);\\n    }\\n\\n    return tz.map(function(value) {\\n      return contour(values, value);\\n    });\\n  }\\n\\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\\n  function contour(values, value) {\\n    var polygons = [],\\n        holes = [];\\n\\n    isorings(values, value, function(ring) {\\n      smooth(ring, values, value);\\n      if (area(ring) > 0) polygons.push([ring]);\\n      else holes.push(ring);\\n    });\\n\\n    holes.forEach(function(hole) {\\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\\n          polygon.push(hole);\\n          return;\\n        }\\n      }\\n    });\\n\\n    return {\\n      type: \\\"MultiPolygon\\\",\\n      value: value,\\n      coordinates: polygons\\n    };\\n  }\\n\\n  // Marching squares with isolines stitched into rings.\\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\\n  function isorings(values, value, callback) {\\n    var fragmentByStart = new Array,\\n        fragmentByEnd = new Array,\\n        x, y, t0, t1, t2, t3;\\n\\n    // Special case for the first row (y = -1, t2 = t3 = 0).\\n    x = y = -1;\\n    t1 = values[0] >= value;\\n    cases[t1 << 1].forEach(stitch);\\n    while (++x < dx - 1) {\\n      t0 = t1, t1 = values[x + 1] >= value;\\n      cases[t0 | t1 << 1].forEach(stitch);\\n    }\\n    cases[t1 << 0].forEach(stitch);\\n\\n    // General case for the intermediate rows.\\n    while (++y < dy - 1) {\\n      x = -1;\\n      t1 = values[y * dx + dx] >= value;\\n      t2 = values[y * dx] >= value;\\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\\n      while (++x < dx - 1) {\\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\\n      }\\n      cases[t1 | t2 << 3].forEach(stitch);\\n    }\\n\\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\\n    x = -1;\\n    t2 = values[y * dx] >= value;\\n    cases[t2 << 2].forEach(stitch);\\n    while (++x < dx - 1) {\\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\\n    }\\n    cases[t2 << 3].forEach(stitch);\\n\\n    function stitch(line) {\\n      var start = [line[0][0] + x, line[0][1] + y],\\n          end = [line[1][0] + x, line[1][1] + y],\\n          startIndex = index(start),\\n          endIndex = index(end),\\n          f, g;\\n      if (f = fragmentByEnd[startIndex]) {\\n        if (g = fragmentByStart[endIndex]) {\\n          delete fragmentByEnd[f.end];\\n          delete fragmentByStart[g.start];\\n          if (f === g) {\\n            f.ring.push(end);\\n            callback(f.ring);\\n          } else {\\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\\n          }\\n        } else {\\n          delete fragmentByEnd[f.end];\\n          f.ring.push(end);\\n          fragmentByEnd[f.end = endIndex] = f;\\n        }\\n      } else if (f = fragmentByStart[endIndex]) {\\n        if (g = fragmentByEnd[startIndex]) {\\n          delete fragmentByStart[f.start];\\n          delete fragmentByEnd[g.end];\\n          if (f === g) {\\n            f.ring.push(end);\\n            callback(f.ring);\\n          } else {\\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\\n          }\\n        } else {\\n          delete fragmentByStart[f.start];\\n          f.ring.unshift(start);\\n          fragmentByStart[f.start = startIndex] = f;\\n        }\\n      } else {\\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\\n      }\\n    }\\n  }\\n\\n  function index(point) {\\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\\n  }\\n\\n  function smoothLinear(ring, values, value) {\\n    ring.forEach(function(point) {\\n      var x = point[0],\\n          y = point[1],\\n          xt = x | 0,\\n          yt = y | 0,\\n          v0,\\n          v1 = values[yt * dx + xt];\\n      if (x > 0 && x < dx && xt === x) {\\n        v0 = values[yt * dx + xt - 1];\\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\\n      }\\n      if (y > 0 && y < dy && yt === y) {\\n        v0 = values[(yt - 1) * dx + xt];\\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\\n      }\\n    });\\n  }\\n\\n  contours.contour = contour;\\n\\n  contours.size = function(_) {\\n    if (!arguments.length) return [dx, dy];\\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\\\"invalid size\\\");\\n    return dx = _0, dy = _1, contours;\\n  };\\n\\n  contours.thresholds = function(_) {\\n    return arguments.length ? (threshold = typeof _ === \\\"function\\\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\\n  };\\n\\n  contours.smooth = function(_) {\\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\\n  };\\n\\n  return contours;\\n}\\n\\n// TODO Optimize edge cases.\\n// TODO Optimize index calculation.\\n// TODO Optimize arguments.\\nfunction blurX(source, target, r) {\\n  var n = source.width,\\n      m = source.height,\\n      w = (r << 1) + 1;\\n  for (var j = 0; j < m; ++j) {\\n    for (var i = 0, sr = 0; i < n + r; ++i) {\\n      if (i < n) {\\n        sr += source.data[i + j * n];\\n      }\\n      if (i >= r) {\\n        if (i >= w) {\\n          sr -= source.data[i - w + j * n];\\n        }\\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\\n      }\\n    }\\n  }\\n}\\n\\n// TODO Optimize edge cases.\\n// TODO Optimize index calculation.\\n// TODO Optimize arguments.\\nfunction blurY(source, target, r) {\\n  var n = source.width,\\n      m = source.height,\\n      w = (r << 1) + 1;\\n  for (var i = 0; i < n; ++i) {\\n    for (var j = 0, sr = 0; j < m + r; ++j) {\\n      if (j < m) {\\n        sr += source.data[i + j * n];\\n      }\\n      if (j >= r) {\\n        if (j >= w) {\\n          sr -= source.data[i + (j - w) * n];\\n        }\\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\\n      }\\n    }\\n  }\\n}\\n\\nfunction defaultX(d) {\\n  return d[0];\\n}\\n\\nfunction defaultY(d) {\\n  return d[1];\\n}\\n\\nfunction defaultWeight() {\\n  return 1;\\n}\\n\\nfunction density() {\\n  var x = defaultX,\\n      y = defaultY,\\n      weight = defaultWeight,\\n      dx = 960,\\n      dy = 500,\\n      r = 20, // blur radius\\n      k = 2, // log2(grid cell size)\\n      o = r * 3, // grid offset, to pad for blur\\n      n = (dx + o * 2) >> k, // grid width\\n      m = (dy + o * 2) >> k, // grid height\\n      threshold = constant(20);\\n\\n  function density(data) {\\n    var values0 = new Float32Array(n * m),\\n        values1 = new Float32Array(n * m);\\n\\n    data.forEach(function(d, i, data) {\\n      var xi = (+x(d, i, data) + o) >> k,\\n          yi = (+y(d, i, data) + o) >> k,\\n          wi = +weight(d, i, data);\\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\\n        values0[xi + yi * n] += wi;\\n      }\\n    });\\n\\n    // TODO Optimize.\\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\\n\\n    var tz = threshold(values0);\\n\\n    // Convert number of thresholds into uniform thresholds.\\n    if (!Array.isArray(tz)) {\\n      var stop = d3Array.max(values0);\\n      tz = d3Array.tickStep(0, stop, tz);\\n      tz = d3Array.range(0, Math.floor(stop / tz) * tz, tz);\\n      tz.shift();\\n    }\\n\\n    return contours()\\n        .thresholds(tz)\\n        .size([n, m])\\n      (values0)\\n        .map(transform);\\n  }\\n\\n  function transform(geometry) {\\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\\n    geometry.coordinates.forEach(transformPolygon);\\n    return geometry;\\n  }\\n\\n  function transformPolygon(coordinates) {\\n    coordinates.forEach(transformRing);\\n  }\\n\\n  function transformRing(coordinates) {\\n    coordinates.forEach(transformPoint);\\n  }\\n\\n  // TODO Optimize.\\n  function transformPoint(coordinates) {\\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\\n  }\\n\\n  function resize() {\\n    o = r * 3;\\n    n = (dx + o * 2) >> k;\\n    m = (dy + o * 2) >> k;\\n    return density;\\n  }\\n\\n  density.x = function(_) {\\n    return arguments.length ? (x = typeof _ === \\\"function\\\" ? _ : constant(+_), density) : x;\\n  };\\n\\n  density.y = function(_) {\\n    return arguments.length ? (y = typeof _ === \\\"function\\\" ? _ : constant(+_), density) : y;\\n  };\\n\\n  density.weight = function(_) {\\n    return arguments.length ? (weight = typeof _ === \\\"function\\\" ? _ : constant(+_), density) : weight;\\n  };\\n\\n  density.size = function(_) {\\n    if (!arguments.length) return [dx, dy];\\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\\\"invalid size\\\");\\n    return dx = _0, dy = _1, resize();\\n  };\\n\\n  density.cellSize = function(_) {\\n    if (!arguments.length) return 1 << k;\\n    if (!((_ = +_) >= 1)) throw new Error(\\\"invalid cell size\\\");\\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\\n  };\\n\\n  density.thresholds = function(_) {\\n    return arguments.length ? (threshold = typeof _ === \\\"function\\\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\\n  };\\n\\n  density.bandwidth = function(_) {\\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\\n    if (!((_ = +_) >= 0)) throw new Error(\\\"invalid bandwidth\\\");\\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\\n  };\\n\\n  return density;\\n}\\n\\nexports.contours = contours;\\nexports.contourDensity = density;\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\n})));\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"factory\",\"define\",\"amd\",\"d3\",\"d3Array\",\"ascending\",\"a\",\"b\",\"constant\",\"x\",\"noop\",\"contours\",\"values\",\"tz\",\"threshold\",\"Array\",\"isArray\",\"slice\",\"sort\",\"domain\",\"extent\",\"start\",\"stop\",\"tickStep\",\"range\",\"Math\",\"floor\",\"map\",\"value\",\"contour\",\"polygons\",\"holes\",\"isorings\",\"ring\",\"smooth\",\"i\",\"n\",\"length\",\"area\",\"push\",\"forEach\",\"hole\",\"polygon\",\"point\",\"y\",\"contains\",\"j\",\"pi\",\"xi\",\"yi\",\"pj\",\"xj\",\"yj\",\"c\",\"p\",\"q\",\"r\",\"type\",\"coordinates\",\"callback\",\"stitch\",\"line\",\"end\",\"startIndex\",\"dx\",\"endIndex\",\"f\",\"g\",\"fragmentByEnd\",\"fragmentByStart\",\"concat\",\"unshift\",\"t1\",\"cases\",\"t0\",\"dy\",\"t2\",\"t3\",\"smoothLinear\",\"xt\",\"yt\",\"v1\",\"v0\",\"thresholdSturges\",\"size\",\"contours.size\",\"_\",\"arguments\",\"_0\",\"ceil\",\"_1\",\"Error\",\"thresholds\",\"contours.thresholds\",\"call\",\"contours.smooth\",\"blurX\",\"source\",\"target\",\"width\",\"m\",\"height\",\"w\",\"sr\",\"data\",\"min\",\"blurY\",\"defaultX\",\"d\",\"defaultY\",\"defaultWeight\",\"prototype\",\"contourDensity\",\"density\",\"values0\",\"Float32Array\",\"values1\",\"o\",\"k\",\"wi\",\"weight\",\"max\",\"shift\",\"transform\",\"geometry\",\"pow\",\"transformPolygon\",\"transformRing\",\"transformPoint\",\"resize\",\"density.x\",\"density.y\",\"density.weight\",\"density.size\",\"cellSize\",\"density.cellSize\",\"log\",\"LN2\",\"density.thresholds\",\"bandwidth\",\"density.bandwidth\",\"sqrt\",\"round\",\"Object\",\"defineProperty\"]\n}\n"]