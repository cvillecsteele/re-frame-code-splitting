["^ ","~:output",["^ ","~:js","goog.provide('zprint.focus');\ngoog.require('cljs.core');\ngoog.require('clojure.string');\ngoog.require('zprint.ansi');\n/**\n * What is this element in a str-style-vec?\n */\nzprint.focus.type_ssv = (function zprint$focus$type_ssv(ssv_element){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$3(ssv_element,(2),new cljs.core.Keyword(null,\"whitespace\",\"whitespace\",-1340035483));\n});\n/**\n * Skip any whitespace in this ssv starting at n. Whitespace is :whitespace\n *   and :indent\n */\nzprint.focus.skip_whitespace_ssv = (function zprint$focus$skip_whitespace_ssv(ssv,n){\nvar index = n;\nwhile(true){\nif((index >= cljs.core.count(ssv))){\nreturn (index - (1));\n} else {\nif(!(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(zprint.focus.type_ssv(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ssv,index)),new cljs.core.Keyword(null,\"whitespace\",\"whitespace\",-1340035483))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(zprint.focus.type_ssv(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ssv,index)),new cljs.core.Keyword(null,\"indent\",\"indent\",-148200125)))))){\nreturn index;\n} else {\nvar G__35067 = (index + (1));\nindex = G__35067;\ncontinue;\n}\n}\nbreak;\n}\n});\n/**\n * Given a str-style-vec, move into a collection at element n.\n */\nzprint.focus.down_ssv = (function zprint$focus$down_ssv(ssv,n){\nvar non_ws_n = zprint.focus.skip_whitespace_ssv(ssv,n);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(zprint.focus.type_ssv(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ssv,non_ws_n)),new cljs.core.Keyword(null,\"left\",\"left\",-399115937))){\nreturn (non_ws_n + (1));\n} else {\nreturn null;\n}\n});\n/**\n * Given a str-style-vec, move to the next element beyond this\n *   one.  This will skip over entire collections, if there are any.\n *   It will also ignore :whitespace elements.\n */\nzprint.focus.next_ssv = (function zprint$focus$next_ssv(ssv,n){\nvar index = n;\nvar skip_to_right_QMARK_ = null;\nvar next_nonws_QMARK_ = null;\nwhile(true){\nif((index >= cljs.core.count(ssv))){\nreturn null;\n} else {\nvar index_type = zprint.focus.type_ssv(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ssv,index));\nvar new_next_nonws_QMARK_ = ((((cljs.core.not(skip_to_right_QMARK_)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index_type,new cljs.core.Keyword(null,\"right\",\"right\",-452581833))))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(index_type,new cljs.core.Keyword(null,\"left\",\"left\",-399115937))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(index_type,new cljs.core.Keyword(null,\"whitespace\",\"whitespace\",-1340035483))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(index_type,new cljs.core.Keyword(null,\"indent\",\"indent\",-148200125))));\nif(cljs.core.truth_(next_nonws_QMARK_)){\nreturn index;\n} else {\nvar G__35082 = (cljs.core.truth_((function (){var and__3911__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index_type,new cljs.core.Keyword(null,\"left\",\"left\",-399115937));\nif(and__3911__auto__){\nreturn skip_to_right_QMARK_;\n} else {\nreturn and__3911__auto__;\n}\n})())?(zprint.focus.next_ssv.cljs$core$IFn$_invoke$arity$2 ? zprint.focus.next_ssv.cljs$core$IFn$_invoke$arity$2(ssv,index) : zprint.focus.next_ssv.call(null,ssv,index)):(index + (1)));\nvar G__35083 = (function (){var and__3911__auto__ = (function (){var or__3922__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index_type,new cljs.core.Keyword(null,\"left\",\"left\",-399115937));\nif(or__3922__auto__){\nreturn or__3922__auto__;\n} else {\nreturn skip_to_right_QMARK_;\n}\n})();\nif(cljs.core.truth_(and__3911__auto__)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(index_type,new cljs.core.Keyword(null,\"right\",\"right\",-452581833));\n} else {\nreturn and__3911__auto__;\n}\n})();\nvar G__35084 = new_next_nonws_QMARK_;\nindex = G__35082;\nskip_to_right_QMARK_ = G__35083;\nnext_nonws_QMARK_ = G__35084;\ncontinue;\n}\n}\nbreak;\n}\n});\n/**\n * Given a str-style-vec, move right nr elements.\n */\nzprint.focus.right_ssv = (function zprint$focus$right_ssv(nr,ssv,n){\nvar index = n;\nvar moves = nr;\nwhile(true){\nif(cljs.core.truth_(index)){\nif((moves === (0))){\nif(cljs.core.truth_(index)){\nreturn zprint.focus.skip_whitespace_ssv(ssv,index);\n} else {\nreturn null;\n}\n} else {\nvar G__35086 = zprint.focus.next_ssv(ssv,index);\nvar G__35087 = (moves - (1));\nindex = G__35086;\nmoves = G__35087;\ncontinue;\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});\n/**\n * Given a non-whitespace path from a zipper, find that same\n *   collection or element in a str-style-vec.\n */\nzprint.focus.path_ssv = (function zprint$focus$path_ssv(nwpath,ssv){\nvar idx = (0);\nvar nwp = nwpath;\nwhile(true){\nif(cljs.core.truth_(idx)){\nif(cljs.core.empty_QMARK_(nwp)){\nreturn idx;\n} else {\nvar G__35088 = zprint.focus.right_ssv(cljs.core.first(nwp),ssv,zprint.focus.down_ssv(ssv,idx));\nvar G__35089 = cljs.core.next(nwp);\nidx = G__35088;\nnwp = G__35089;\ncontinue;\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});\n/**\n * Use a non-whitespace path from a zipper, and find that\n *   same collection or element in a str-style-vec, and return\n *   a vector of the start and end of that collection or element.\n *   Depends on next-ssv returning one past the end of its input.\n */\nzprint.focus.range_ssv = (function zprint$focus$range_ssv(ssv,nwpath){\nvar start = zprint.focus.path_ssv(nwpath,ssv);\nvar start__$1 = zprint.focus.skip_whitespace_ssv(ssv,start);\nvar ssv_next = zprint.focus.next_ssv(ssv,start__$1);\nvar end = (cljs.core.truth_((function (){var and__3911__auto__ = ssv_next;\nif(cljs.core.truth_(and__3911__auto__)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(start__$1,(0));\n} else {\nreturn and__3911__auto__;\n}\n})())?(ssv_next - (1)):(cljs.core.count(ssv) - (1)));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [start__$1,end], null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","zprint/focus.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",17],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$zprint.focus","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.string","^Q","~$s","^Q","~$zprint.ansi","^R","~$cljs.core","^S","~$goog","^T"],"~:seen",["^J",["~:require"]],"~:uses",["^ ","~$color-str","^R"],"~:require-macros",["^ ","^S","^S"],"~:form",["~#list",["~$ns","^L",["^[",["^V",["^Q","~:as","~$s"],["^R","~:refer",["^X"]]]]]],"~:flags",["^ ","^V",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^T","^S","^Q","^R"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","zprint/focus.cljc"],"~:compiled-at",1535834868503,"~:resource-name","zprint/focus.cljc","~:warnings",[],"~:source","(ns zprint.focus\n  (:require [clojure.string :as s]\n            [zprint.ansi :refer [color-str]]))\n\n;;\n;; # Find focus in a style-vec\n;;\n\n(defn type-ssv\n  \"What is this element in a str-style-vec?\"\n  [ssv-element]\n  (nth ssv-element 2 :whitespace))\n\n(defn skip-whitespace-ssv\n  \"Skip any whitespace in this ssv starting at n. Whitespace is :whitespace\n  and :indent\"\n  [ssv n]\n  #_(println \"skip-whitespace: n:\" n)\n  (loop [index n]\n    #_(println \"skip-whitespace: loop index:\" index)\n    (if (>= index (count ssv))\n      (dec index)\n      (if (not (or (= (type-ssv (nth ssv index)) :whitespace)\n                   (= (type-ssv (nth ssv index)) :indent)))\n        index\n        (recur (inc index))))))\n\n(defn down-ssv\n  \"Given a str-style-vec, move into a collection at element n.\"\n  [ssv n]\n  (let [non-ws-n (skip-whitespace-ssv ssv n)]\n    (when (= (type-ssv (nth ssv non-ws-n)) :left) (inc non-ws-n))))\n\n(defn next-ssv\n  \"Given a str-style-vec, move to the next element beyond this\n  one.  This will skip over entire collections, if there are any.\n  It will also ignore :whitespace elements.\"\n  [ssv n]\n  #_(println \"next-ssv: n:\" n \"count ssv:\" (count ssv))\n  (loop [index n\n         skip-to-right? nil\n         next-nonws? nil]\n    #_(println \"next-ssv: loop index:\" index)\n    (if (>= index (count ssv))\n      nil\n      (let [index-type (type-ssv (nth ssv index))\n            new-next-nonws? (and (or (not skip-to-right?) (= index-type :right))\n                                 (not= index-type :left)\n                                 (not= index-type :whitespace)\n                                 (not= index-type :indent))]\n        #_(println \"next-ssv: index:\" index\n                   \"skip-to-right?\" skip-to-right?\n                   \"next-nonws?\" next-nonws?\n                   \"index-type:\" index-type\n                   \"new-next-nonws?\" new-next-nonws?)\n        (if next-nonws?\n          index\n          (recur (if (and (= index-type :left) skip-to-right?)\n                   (next-ssv ssv index)\n                   (inc index))\n                 (and (or (= index-type :left) skip-to-right?)\n                      (not= index-type :right))\n                 new-next-nonws?))))))\n\n(defn right-ssv\n  \"Given a str-style-vec, move right nr elements.\"\n  [nr ssv n]\n  #_(println \"right-ssv: nr:\" nr \"n:\" n)\n  (loop [index n\n         moves nr]\n    #_(println \"right-ssv: loop index:\" index \"moves:\" moves)\n    (when index\n      (if (zero? moves)\n        (when index (skip-whitespace-ssv ssv index))\n        (recur (next-ssv ssv index) (dec moves))))))\n\n(defn path-ssv\n  \"Given a non-whitespace path from a zipper, find that same\n  collection or element in a str-style-vec.\"\n  [nwpath ssv]\n  (loop [idx 0\n         nwp nwpath]\n    (when idx\n      (if (empty? nwp)\n        idx\n        (recur (right-ssv (first nwp) ssv (down-ssv ssv idx)) (next nwp))))))\n\n(defn range-ssv\n  \"Use a non-whitespace path from a zipper, and find that\n  same collection or element in a str-style-vec, and return\n  a vector of the start and end of that collection or element.\n  Depends on next-ssv returning one past the end of its input.\"\n  [ssv nwpath]\n  #_(def rssv ssv)\n  #_(prn \"range-ssv: nwpath:\" nwpath \"ssv:\\n\" ssv)\n  (let [start (path-ssv nwpath ssv)\n        #_(println \"range-ssv: start:\" start \"nwpath:\" nwpath)\n        start (skip-whitespace-ssv ssv start)\n        ssv-next (next-ssv ssv start)\n        end (if (and ssv-next (not= start 0)) (dec ssv-next) (dec (count ssv)))]\n    #_(println \"range-ssv:\" [start end])\n    [start end]))","~:reader-features",["^J",["~:cljs"]],"~:source-map",["^ ","~i8",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",4],["^ ","^1?",24,"^1@",7],["^ ","^1?",0,"^1@",8]],"~i6",[["^ ","^1?",0,"^1@",7,"^K","zprint.focus/type-ssv"]]],"~i10",["^ ","~i3",[["^ ","^1?",56,"^1@",7,"^K","ssv-element"]]],"~i11",["^ ","~i2",[["^ ","^1?",0,"^1@",8],["^ ","^1?",63,"^1@",8],["^ ","^1?",67,"^1@",8]],"~i3",[["^ ","^1?",7,"^1@",8,"^K","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"]],"~i7",[["^ ","^1?",51,"^1@",8,"^K","ssv-element"]]],"~i13",["^ ","~i0",[["^ ","^1?",0,"^1@",10],["^ ","^1?",35,"^1@",14],["^ ","^1?",0,"^1@",15]],"~i6",[["^ ","^1?",0,"^1@",14,"^K","zprint.focus/skip-whitespace-ssv"]]],"~i16",["^ ","~i3",[["^ ","^1?",78,"^1@",14,"^K","ssv"]],"~i7",[["^ ","^1?",82,"^1@",14,"^K","n"]]],"~i18",["^ ","~i2",[["^ ","^1?",0,"^1@",15],["^ ","^1?",0,"^1@",17]],"~i9",[["^ ","^1?",4,"^1@",15,"^K","index"]],"~i15",[["^ ","^1?",12,"^1@",15,"^K","n"]]],"~i20",["^ ","~i4",[["^ ","^1?",0,"^1@",17]],"~i8",[["^ ","^1?",3,"^1@",17]],"~i12",[["^ ","^1?",4,"^1@",17,"^K","index"]],"^1E",[["^ ","^1?",13,"^1@",17]],"~i19",[["^ ","^1?",13,"^1@",17,"^K","cljs.core/count"]],"~i25",[["^ ","^1?",29,"^1@",17,"^K","ssv"]]],"~i21",["^ ","~i6",[["^ ","^1?",0,"^1@",18],["^ ","^1?",16,"^1@",18]],"^1B",[["^ ","^1?",8,"^1@",18,"^K","index"]]],"~i22",["^ ","~i6",[["^ ","^1?",0,"^1@",20]],"^1A",[["^ ","^1?",3,"^1@",20]],"^1F",[["^ ","^1?",5,"^1@",20]],"^1I",[["^ ","^1?",7,"^1@",20],["^ ","^1?",130,"^1@",20]],"^1G",[["^ ","^1?",7,"^1@",20,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1L",[["^ ","^1?",52,"^1@",20]],"~i23",[["^ ","^1?",52,"^1@",20,"^K","zprint.focus/type-ssv"]],"~i32",[["^ ","^1?",74,"^1@",20]],"~i33",[["^ ","^1?",74,"^1@",20,"^K","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"~i37",[["^ ","^1?",118,"^1@",20,"^K","ssv"]],"~i41",[["^ ","^1?",122,"^1@",20,"^K","index"]]],"^1M",["^ ","^1I",[["^ ","^1?",202,"^1@",20],["^ ","^1?",325,"^1@",20]],"^1G",[["^ ","^1?",202,"^1@",20,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1L",[["^ ","^1?",247,"^1@",20]],"^1M",[["^ ","^1?",247,"^1@",20,"^K","zprint.focus/type-ssv"]],"^1N",[["^ ","^1?",269,"^1@",20]],"^1O",[["^ ","^1?",269,"^1@",20,"^K","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^1P",[["^ ","^1?",313,"^1@",20,"^K","ssv"]],"^1Q",[["^ ","^1?",317,"^1@",20,"^K","index"]]],"~i24",["^ ","~i8",[["^ ","^1?",0,"^1@",21,"^K","index"]]],"^1J",["^ ","~i8",[["^ ","^1?",0,"^1@",23]],"^1F",[["^ ","^1?",15,"^1@",23],["^ ","^1?",24,"^1@",23]],"^1G",[["^ ","^1?",16,"^1@",23,"^K","index"]]],"~i27",["^ ","~i0",[["^ ","^1?",0,"^1@",31],["^ ","^1?",24,"^1@",34],["^ ","^1?",0,"^1@",35]],"~i6",[["^ ","^1?",0,"^1@",34,"^K","zprint.focus/down-ssv"]]],"~i29",["^ ","~i3",[["^ ","^1?",56,"^1@",34,"^K","ssv"]],"~i7",[["^ ","^1?",60,"^1@",34,"^K","n"]]],"~i30",["^ ","~i2",[["^ ","^1?",0,"^1@",35],["^ ","^1?",0,"^1@",36]],"~i8",[["^ ","^1?",4,"^1@",35,"^K","non-ws-n"]],"~i17",[["^ ","^1?",15,"^1@",35]],"^1E",[["^ ","^1?",15,"^1@",35,"^K","zprint.focus/skip-whitespace-ssv"]],"~i38",[["^ ","^1?",48,"^1@",35,"^K","ssv"]],"~i42",[["^ ","^1?",52,"^1@",35,"^K","n"]]],"~i31",["^ ","~i4",[["^ ","^1?",0,"^1@",36],["^ ","^1?",0,"^1@",37],["^ ","^1?",0,"^1@",39]],"^1A",[["^ ","^1?",3,"^1@",36],["^ ","^1?",129,"^1@",36]],"^1B",[["^ ","^1?",3,"^1@",36,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1C",[["^ ","^1?",48,"^1@",36]],"~i14",[["^ ","^1?",48,"^1@",36,"^K","zprint.focus/type-ssv"]],"^1M",[["^ ","^1?",70,"^1@",36]],"^1R",[["^ ","^1?",70,"^1@",36,"^K","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"~i28",[["^ ","^1?",114,"^1@",36,"^K","ssv"]],"^1N",[["^ ","^1?",118,"^1@",36,"^K","non-ws-n"]],"~i50",[["^ ","^1?",0,"^1@",37],["^ ","^1?",19,"^1@",37]],"~i55",[["^ ","^1?",8,"^1@",37,"^K","non-ws-n"]]],"^1O",["^ ","~i0",[["^ ","^1?",0,"^1@",42],["^ ","^1?",24,"^1@",47],["^ ","^1?",0,"^1@",48]],"~i6",[["^ ","^1?",0,"^1@",47,"^K","zprint.focus/next-ssv"]]],"^1P",["^ ","~i3",[["^ ","^1?",56,"^1@",47,"^K","ssv"]],"~i7",[["^ ","^1?",60,"^1@",47,"^K","n"]]],"~i39",["^ ","~i2",[["^ ","^1?",0,"^1@",48],["^ ","^1?",27,"^1@",49],["^ ","^1?",24,"^1@",50],["^ ","^1?",0,"^1@",52]],"~i9",[["^ ","^1?",4,"^1@",48,"^K","index"]],"^1F",[["^ ","^1?",12,"^1@",48,"^K","n"]]],"~i40",["^ ","~i9",[["^ ","^1?",4,"^1@",49,"^K","skip-to-right?"]]],"^1Q",["^ ","~i9",[["^ ","^1?",4,"^1@",50,"^K","next-nonws?"]]],"~i43",["^ ","~i4",[["^ ","^1?",0,"^1@",52],["^ ","^1?",0,"^1@",53]],"~i8",[["^ ","^1?",3,"^1@",52]],"^1H",[["^ ","^1?",4,"^1@",52,"^K","index"]],"^1E",[["^ ","^1?",13,"^1@",52]],"^1I",[["^ ","^1?",13,"^1@",52,"^K","cljs.core/count"]],"^1J",[["^ ","^1?",29,"^1@",52,"^K","ssv"]]],"~i45",["^ ","~i6",[["^ ","^1?",0,"^1@",55],["^ ","^1?",0,"^1@",57]],"^1H",[["^ ","^1?",4,"^1@",55,"^K","index-type"]],"^1M",[["^ ","^1?",17,"^1@",55]],"^1R",[["^ ","^1?",17,"^1@",55,"^K","zprint.focus/type-ssv"]],"^1O",[["^ ","^1?",39,"^1@",55]],"~i34",[["^ ","^1?",39,"^1@",55,"^K","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^1W",[["^ ","^1?",83,"^1@",55,"^K","ssv"]],"^1X",[["^ ","^1?",87,"^1@",55,"^K","index"]]],"~i46",["^ ","^1H",[["^ ","^1?",4,"^1@",56,"^K","new-next-nonws?"]],"^1[",[["^ ","^1?",28,"^1@",56]],"^1O",[["^ ","^1?",30,"^1@",56]],"^1P",[["^ ","^1?",32,"^1@",56]],"^1W",[["^ ","^1?",32,"^1@",56,"^K","cljs.core/not"]],"^1X",[["^ ","^1?",46,"^1@",56,"^K","skip-to-right?"]],"~i58",[["^ ","^1?",73,"^1@",56],["^ ","^1?",129,"^1@",56]],"~i59",[["^ ","^1?",73,"^1@",56,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i61",[["^ ","^1?",118,"^1@",56,"^K","index-type"]]],"~i47",["^ ","^1O",[["^ ","^1?",192,"^1@",56],["^ ","^1?",251,"^1@",56]],"^26",[["^ ","^1?",192,"^1@",56,"^K","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2"]],"^22",[["^ ","^1?",240,"^1@",56,"^K","index-type"]]],"~i48",["^ ","^1O",[["^ ","^1?",310,"^1@",56],["^ ","^1?",369,"^1@",56]],"^26",[["^ ","^1?",310,"^1@",56,"^K","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2"]],"^22",[["^ ","^1?",358,"^1@",56,"^K","index-type"]]],"~i49",["^ ","^1O",[["^ ","^1?",441,"^1@",56],["^ ","^1?",500,"^1@",56]],"^26",[["^ ","^1?",441,"^1@",56,"^K","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2"]],"^22",[["^ ","^1?",489,"^1@",56,"^K","index-type"]]],"^21",["^ ","~i8",[["^ ","^1?",0,"^1@",57]],"^1H",[["^ ","^1?",20,"^1@",57,"^K","next-nonws?"]]],"~i56",["^ ","^1A",[["^ ","^1?",0,"^1@",58,"^K","index"]]],"~i57",["^ ","^1A",[["^ ","^1?",0,"^1@",60]],"^1V",[["^ ","^1?",15,"^1@",60]],"^1K",[["^ ","^1?",33,"^1@",60],["^ ","^1?",50,"^1@",60,"^K","and__3911__auto__"],["^ ","^1?",0,"^1@",61],["^ ","^1?",0,"^1@",61],["^ ","^1?",3,"^1@",61,"^K","and__3911__auto__"],["^ ","^1?",0,"^1@",64,"^K","and__3911__auto__"]],"~i26",[["^ ","^1?",70,"^1@",60],["^ ","^1?",126,"^1@",60]],"^1S",[["^ ","^1?",70,"^1@",60,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1T",[["^ ","^1?",115,"^1@",60,"^K","index-type"]],"^2;",[["^ ","^1?",0,"^1@",62,"^K","skip-to-right?"]]],"^28",["^ ","^1I",[["^ ","^1?",6,"^1@",66]],"^1G",[["^ ","^1?",7,"^1@",66,"^K","zprint.focus/next-ssv"],["^ ","^1?",61,"^1@",66,"^K","zprint.focus/next-ssv"],["^ ","^1?",126,"^1@",66,"^K","zprint.focus/next-ssv"]],"^1T",[["^ ","^1?",113,"^1@",66,"^K","ssv"],["^ ","^1?",158,"^1@",66,"^K","ssv"]],"^1O",[["^ ","^1?",117,"^1@",66,"^K","index"],["^ ","^1?",162,"^1@",66,"^K","index"]]],"^29",["^ ","^1I",[["^ ","^1?",170,"^1@",66],["^ ","^1?",179,"^1@",66]],"^1R",[["^ ","^1?",171,"^1@",66,"^K","index"]]],"~i60",["^ ","^1V",[["^ ","^1?",15,"^1@",67],["^ ","^1?",32,"^1@",67,"^K","and__3911__auto__"],["^ ","^1?",0,"^1@",74],["^ ","^1?",0,"^1@",74],["^ ","^1?",20,"^1@",74,"^K","and__3911__auto__"],["^ ","^1?",0,"^1@",77,"^K","and__3911__auto__"]],"^1L",[["^ ","^1?",52,"^1@",67],["^ ","^1?",69,"^1@",67,"^K","or__3922__auto__"],["^ ","^1?",0,"^1@",68],["^ ","^1?",0,"^1@",68],["^ ","^1?",3,"^1@",68,"^K","or__3922__auto__"],["^ ","^1?",0,"^1@",69,"^K","or__3922__auto__"]],"^2@",[["^ ","^1?",88,"^1@",67],["^ ","^1?",144,"^1@",67]],"^1S",[["^ ","^1?",88,"^1@",67,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1T",[["^ ","^1?",133,"^1@",67,"^K","index-type"]],"^2;",[["^ ","^1?",0,"^1@",71,"^K","skip-to-right?"]]],"^2:",["^ ","^1L",[["^ ","^1?",0,"^1@",75],["^ ","^1?",66,"^1@",75]],"^1M",[["^ ","^1?",7,"^1@",75,"^K","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1[",[["^ ","^1?",55,"^1@",75,"^K","index-type"]]],"~i62",["^ ","^1V",[["^ ","^1?",15,"^1@",80,"^K","new-next-nonws?"]]],"~i64",["^ ","~i0",[["^ ","^1?",0,"^1@",90],["^ ","^1?",25,"^1@",93],["^ ","^1?",0,"^1@",94]],"~i6",[["^ ","^1?",0,"^1@",93,"^K","zprint.focus/right-ssv"]]],"~i66",["^ ","~i3",[["^ ","^1?",58,"^1@",93,"^K","nr"]],"~i6",[["^ ","^1?",61,"^1@",93,"^K","ssv"]],"^1A",[["^ ","^1?",65,"^1@",93,"^K","n"]]],"~i68",["^ ","~i2",[["^ ","^1?",0,"^1@",94],["^ ","^1?",0,"^1@",97]],"~i9",[["^ ","^1?",4,"^1@",94,"^K","index"]],"^1F",[["^ ","^1?",12,"^1@",94,"^K","n"]]],"~i69",["^ ","~i9",[["^ ","^1?",4,"^1@",95,"^K","moves"]],"^1F",[["^ ","^1?",12,"^1@",95,"^K","nr"]]],"~i71",["^ ","~i4",[["^ ","^1?",0,"^1@",97],["^ ","^1?",0,"^1@",98],["^ ","^1?",0,"^1@",112]],"^1A",[["^ ","^1?",20,"^1@",97,"^K","index"]]],"~i72",["^ ","~i6",[["^ ","^1?",0,"^1@",98]],"^1A",[["^ ","^1?",3,"^1@",98],["^ ","^1?",14,"^1@",98]],"^1V",[["^ ","^1?",4,"^1@",98,"^K","moves"]]],"~i73",["^ ","~i8",[["^ ","^1?",0,"^1@",99],["^ ","^1?",0,"^1@",100],["^ ","^1?",0,"^1@",102]],"^1Z",[["^ ","^1?",20,"^1@",99,"^K","index"]],"^1G",[["^ ","^1?",0,"^1@",100]],"^1K",[["^ ","^1?",7,"^1@",100,"^K","zprint.focus/skip-whitespace-ssv"]],"^1Q",[["^ ","^1?",40,"^1@",100,"^K","ssv"]],"^25",[["^ ","^1?",44,"^1@",100,"^K","index"]]],"~i74",["^ ","~i8",[["^ ","^1?",0,"^1@",105]],"^1F",[["^ ","^1?",15,"^1@",105]],"^1D",[["^ ","^1?",15,"^1@",105,"^K","zprint.focus/next-ssv"]],"^1J",[["^ ","^1?",37,"^1@",105,"^K","ssv"]],"^1T",[["^ ","^1?",41,"^1@",105,"^K","index"]],"~i36",[["^ ","^1?",15,"^1@",106],["^ ","^1?",24,"^1@",106]],"^1Q",[["^ ","^1?",16,"^1@",106,"^K","moves"]]],"~i76",["^ ","~i0",[["^ ","^1?",0,"^1@",117],["^ ","^1?",24,"^1@",121],["^ ","^1?",0,"^1@",122]],"~i6",[["^ ","^1?",0,"^1@",121,"^K","zprint.focus/path-ssv"]]],"~i79",["^ ","~i3",[["^ ","^1?",56,"^1@",121,"^K","nwpath"]],"^1A",[["^ ","^1?",63,"^1@",121,"^K","ssv"]]],"~i80",["^ ","~i2",[["^ ","^1?",0,"^1@",122],["^ ","^1?",10,"^1@",122],["^ ","^1?",0,"^1@",125]],"~i9",[["^ ","^1?",4,"^1@",122,"^K","idx"]]],"~i81",["^ ","~i9",[["^ ","^1?",4,"^1@",123,"^K","nwp"]],"^1C",[["^ ","^1?",10,"^1@",123,"^K","nwpath"]]],"~i82",["^ ","~i4",[["^ ","^1?",0,"^1@",125],["^ ","^1?",0,"^1@",126],["^ ","^1?",0,"^1@",136]],"^1A",[["^ ","^1?",20,"^1@",125,"^K","idx"]]],"~i83",["^ ","~i6",[["^ ","^1?",0,"^1@",126]],"^1A",[["^ ","^1?",3,"^1@",126]],"^1B",[["^ ","^1?",3,"^1@",126,"^K","cljs.core/empty?"]],"^1E",[["^ ","^1?",26,"^1@",126,"^K","nwp"]]],"~i84",["^ ","~i8",[["^ ","^1?",0,"^1@",127,"^K","idx"]]],"~i85",["^ ","~i8",[["^ ","^1?",0,"^1@",129]],"^1F",[["^ ","^1?",15,"^1@",129]],"^1D",[["^ ","^1?",15,"^1@",129,"^K","zprint.focus/right-ssv"]],"^2@",[["^ ","^1?",38,"^1@",129]],"^1S",[["^ ","^1?",38,"^1@",129,"^K","cljs.core/first"]],"^1O",[["^ ","^1?",54,"^1@",129,"^K","nwp"]],"^1W",[["^ ","^1?",59,"^1@",129,"^K","ssv"]],"^1X",[["^ ","^1?",63,"^1@",129]],"^24",[["^ ","^1?",63,"^1@",129,"^K","zprint.focus/down-ssv"]],"~i52",[["^ ","^1?",85,"^1@",129,"^K","ssv"]],"^2>",[["^ ","^1?",89,"^1@",129,"^K","idx"]],"^2B",[["^ ","^1?",15,"^1@",130]],"~i63",[["^ ","^1?",15,"^1@",130,"^K","cljs.core/next"]],"^2E",[["^ ","^1?",30,"^1@",130,"^K","nwp"]]],"~i87",["^ ","~i0",[["^ ","^1?",0,"^1@",141],["^ ","^1?",25,"^1@",147],["^ ","^1?",0,"^1@",148]],"~i6",[["^ ","^1?",0,"^1@",147,"^K","zprint.focus/range-ssv"]]],"~i92",["^ ","~i3",[["^ ","^1?",58,"^1@",147,"^K","ssv"]],"~i7",[["^ ","^1?",62,"^1@",147,"^K","nwpath"]]],"~i95",["^ ","~i2",[["^ ","^1?",0,"^1@",148],["^ ","^1?",0,"^1@",158],["^ ","^1?",0,"^1@",158]],"~i8",[["^ ","^1?",4,"^1@",148,"^K","start"]],"^1Z",[["^ ","^1?",12,"^1@",148]],"^1F",[["^ ","^1?",12,"^1@",148,"^K","zprint.focus/path-ssv"]],"^1R",[["^ ","^1?",34,"^1@",148,"^K","nwpath"]],"^1Y",[["^ ","^1?",41,"^1@",148,"^K","ssv"]]],"~i97",["^ ","~i8",[["^ ","^1?",4,"^1@",149,"^K","start"]],"^1Z",[["^ ","^1?",16,"^1@",149]],"^1F",[["^ ","^1?",16,"^1@",149,"^K","zprint.focus/skip-whitespace-ssv"]],"~i35",[["^ ","^1?",49,"^1@",149,"^K","ssv"]],"^22",[["^ ","^1?",53,"^1@",149,"^K","start"]]],"~i98",["^ ","~i8",[["^ ","^1?",4,"^1@",150,"^K","ssv-next"]],"^1V",[["^ ","^1?",15,"^1@",150]],"^1E",[["^ ","^1?",15,"^1@",150,"^K","zprint.focus/next-ssv"]],"^1S",[["^ ","^1?",37,"^1@",150,"^K","ssv"]],"^1Y",[["^ ","^1?",41,"^1@",150,"^K","start"]]],"~i99",["^ ","~i8",[["^ ","^1?",4,"^1@",151,"^K","end"]],"^1H",[["^ ","^1?",10,"^1@",151]],"^1D",[["^ ","^1?",28,"^1@",151],["^ ","^1?",45,"^1@",151,"^K","and__3911__auto__"],["^ ","^1?",0,"^1@",152],["^ ","^1?",0,"^1@",152],["^ ","^1?",20,"^1@",152,"^K","and__3911__auto__"],["^ ","^1?",0,"^1@",155,"^K","and__3911__auto__"]],"^1K",[["^ ","^1?",65,"^1@",151,"^K","ssv-next"]],"^1U",[["^ ","^1?",0,"^1@",153],["^ ","^1?",65,"^1@",153]],"^1Y",[["^ ","^1?",7,"^1@",153,"^K","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2K",[["^ ","^1?",55,"^1@",153,"^K","start"]],"^27",[["^ ","^1?",6,"^1@",157],["^ ","^1?",18,"^1@",157]],"~i51",[["^ ","^1?",7,"^1@",157,"^K","ssv-next"]],"^2:",[["^ ","^1?",23,"^1@",157],["^ ","^1?",47,"^1@",157]],"^2D",[["^ ","^1?",24,"^1@",157]],"~i67",[["^ ","^1?",24,"^1@",157,"^K","cljs.core/count"]],"^2I",[["^ ","^1?",40,"^1@",157,"^K","ssv"]]],"~i101",["^ ","~i5",[["^ ","^1?",90,"^1@",158,"^K","start"]],"^1B",[["^ ","^1?",100,"^1@",158,"^K","end"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^S"],[1535834828000],["^17","goog/math/math.js"],[1505449243000,"^T","~$goog.array","~$goog.asserts"],["^17","goog/array/array.js"],[1505449243000,"^T","^39"],["^17","goog/debug/error.js"],[1505449243000,"^T"],["^17","goog/dom/nodetype.js"],[1505449243000,"^T"],["^17","goog/object/object.js"],[1505449243000,"^T"],"~:SHADOW-TIMESTAMP",[1535834828000,1535834828000],["^17","goog/math/long.js"],[1505449243000,"^T","^39","~$goog.reflect"],["^17","goog/functions/functions.js"],[1505449243000,"^T"],["^17","goog/structs/map.js"],[1505449243000,"^T","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^17","goog/asserts/asserts.js"],[1505449243000,"^T","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^17","goog/uri/uri.js"],[1505449243000,"^T","^38","^39","^3A","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^17","zprint/focus.cljc"],[1535834828000,"^T","^S","^Q","^R"],["^17","goog/base.js"],[1505449243000],["^17","goog/structs/structs.js"],[1505449243000,"^T","^38","^3>"],["^17","clojure/string.cljs"],[1535834828000,"^T","^S","^3A","~$goog.string.StringBuffer"],["^17","goog/string/string.js"],[1505449243000,"^T"],["^17","goog/reflect/reflect.js"],[1505449243000,"^T"],["^17","goog/string/stringbuffer.js"],[1505449243000,"^T"],["^17","goog/iter/iter.js"],[1505449243000,"^T","^38","^39","~$goog.functions","~$goog.math"],["^17","cljs/core.cljs"],[1535834828000,"~$goog.math.Long","~$goog.math.Integer","^3A","^3>","^38","~$goog.Uri","^3G"],["^17","goog/math/integer.js"],[1505449243000,"^T"],["^17","goog/uri/utils.js"],[1505449243000,"^T","^38","^39","^3A"],["^17","zprint/ansi.cljc"],[1535834828000,"^T","^S","^Q"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","zprint/focus.cljc","^7",1,"^8",5,"^9",1,"^:",17],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","~$s","^Q","^R","^R","^S","^S","^T","^T"],"^U",["^J",["^V"]],"^W",["^ ","^X","^R"],"~:defs",["^ ","~$type-ssv",["^ ","~:protocol-inline",null,"^5",["^ ","^6","zprint/focus.cljc","^7",9,"^8",7,"^9",9,"^:",15,"~:arglists",["^[",["~$quote",["^[",[["~$ssv-element"]]]]],"~:doc","What is this element in a str-style-vec?"],"^K","~$zprint.focus/type-ssv","~:variadic",false,"^6","zprint/focus.cljc","^:",15,"~:method-params",["^[",[["^3S"]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^8",1,"^7",9,"^9",9,"~:max-fixed-arity",1,"~:fn-var",true,"^3Q",["^[",["^3R",["^[",[["^3S"]]]]],"^3T","What is this element in a str-style-vec?"],"~$skip-whitespace-ssv",["^ ","^3P",null,"^5",["^ ","^6","zprint/focus.cljc","^7",14,"^8",7,"^9",14,"^:",26,"^3Q",["^[",["^3R",["^[",[["~$ssv","~$n"]]]]],"^3T","Skip any whitespace in this ssv starting at n. Whitespace is :whitespace\n  and :indent"],"^K","~$zprint.focus/skip-whitespace-ssv","^3V",false,"^6","zprint/focus.cljc","^:",26,"^3W",["^[",[["^41","~$n"]]],"^3X",null,"^3Y",["^[",[null,null]],"^8",1,"^7",14,"^9",14,"^3Z",2,"^3[",true,"^3Q",["^[",["^3R",["^[",[["^41","~$n"]]]]],"^3T","Skip any whitespace in this ssv starting at n. Whitespace is :whitespace\n  and :indent"],"~$down-ssv",["^ ","^3P",null,"^5",["^ ","^6","zprint/focus.cljc","^7",28,"^8",7,"^9",28,"^:",15,"^3Q",["^[",["^3R",["^[",[["^41","~$n"]]]]],"^3T","Given a str-style-vec, move into a collection at element n."],"^K","~$zprint.focus/down-ssv","^3V",false,"^6","zprint/focus.cljc","^:",15,"^3W",["^[",[["^41","~$n"]]],"^3X",null,"^3Y",["^[",[null,null]],"^8",1,"^7",28,"^9",28,"^3Z",2,"^3[",true,"^3Q",["^[",["^3R",["^[",[["^41","~$n"]]]]],"^3T","Given a str-style-vec, move into a collection at element n."],"~$next-ssv",["^ ","^3P",null,"^5",["^ ","^6","zprint/focus.cljc","^7",34,"^8",7,"^9",34,"^:",15,"^3Q",["^[",["^3R",["^[",[["^41","~$n"]]]]],"^3T","Given a str-style-vec, move to the next element beyond this\n  one.  This will skip over entire collections, if there are any.\n  It will also ignore :whitespace elements."],"^K","~$zprint.focus/next-ssv","^3V",false,"^6","zprint/focus.cljc","^:",15,"^3W",["^[",[["^41","~$n"]]],"^3X",null,"^3Y",["^[",[null,null]],"^8",1,"^7",34,"^9",34,"^3Z",2,"^3[",true,"^3Q",["^[",["^3R",["^[",[["^41","~$n"]]]]],"^3T","Given a str-style-vec, move to the next element beyond this\n  one.  This will skip over entire collections, if there are any.\n  It will also ignore :whitespace elements."],"~$right-ssv",["^ ","^3P",null,"^5",["^ ","^6","zprint/focus.cljc","^7",65,"^8",7,"^9",65,"^:",16,"^3Q",["^[",["^3R",["^[",[["~$nr","^41","~$n"]]]]],"^3T","Given a str-style-vec, move right nr elements."],"^K","~$zprint.focus/right-ssv","^3V",false,"^6","zprint/focus.cljc","^:",16,"^3W",["^[",[["^48","^41","~$n"]]],"^3X",null,"^3Y",["^[",[null,null]],"^8",1,"^7",65,"^9",65,"^3Z",3,"^3[",true,"^3Q",["^[",["^3R",["^[",[["^48","^41","~$n"]]]]],"^3T","Given a str-style-vec, move right nr elements."],"~$path-ssv",["^ ","^3P",null,"^5",["^ ","^6","zprint/focus.cljc","^7",77,"^8",7,"^9",77,"^:",15,"^3Q",["^[",["^3R",["^[",[["~$nwpath","^41"]]]]],"^3T","Given a non-whitespace path from a zipper, find that same\n  collection or element in a str-style-vec."],"^K","~$zprint.focus/path-ssv","^3V",false,"^6","zprint/focus.cljc","^:",15,"^3W",["^[",[["^4;","^41"]]],"^3X",null,"^3Y",["^[",[null,null]],"^8",1,"^7",77,"^9",77,"^3Z",2,"^3[",true,"^3Q",["^[",["^3R",["^[",[["^4;","^41"]]]]],"^3T","Given a non-whitespace path from a zipper, find that same\n  collection or element in a str-style-vec."],"~$range-ssv",["^ ","^3P",null,"^5",["^ ","^6","zprint/focus.cljc","^7",88,"^8",7,"^9",88,"^:",16,"^3Q",["^[",["^3R",["^[",[["^41","^4;"]]]]],"^3T","Use a non-whitespace path from a zipper, and find that\n  same collection or element in a str-style-vec, and return\n  a vector of the start and end of that collection or element.\n  Depends on next-ssv returning one past the end of its input."],"^K","~$zprint.focus/range-ssv","^3V",false,"^6","zprint/focus.cljc","^:",16,"^3W",["^[",[["^41","^4;"]]],"^3X",null,"^3Y",["^[",[null,null]],"^8",1,"^7",88,"^9",88,"^3Z",2,"^3[",true,"^3Q",["^[",["^3R",["^[",[["^41","^4;"]]]]],"^3T","Use a non-whitespace path from a zipper, and find that\n  same collection or element in a str-style-vec, and return\n  a vector of the start and end of that collection or element.\n  Depends on next-ssv returning one past the end of its input."]],"^Y",["^ ","^S","^S"],"~:cljs.analyzer/constants",["^ ","^U",["^J",["~:indent","~:whitespace","~:right","~:left"]],"~:order",["^4A","^4@","^4C","^4B"]],"^13",["^ ","^V",["^J",[]]],"^14",["^ "],"^15",["^T","^S","^Q","^R"]],"^N","^L","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^36",[["^4G","~:static-fns"],true,["^4G","~:elide-asserts"],false,["^4G","~:optimize-constants"],null,["^4G","~:external-config"],null,["^4G","~:tooling-config"],null,["^4G","~:emit-constants"],null,["^4G","~:infer-externs"],true,["^4G","^1<"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4G","~:fn-invoke-direct"],null,["^4G","^1>"],"/dev/null"]]]