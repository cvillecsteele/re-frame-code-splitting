["^ ","~:output",["^ ","~:js","goog.provide('reagent.impl.batching');\ngoog.require('cljs.core');\ngoog.require('reagent.debug');\ngoog.require('reagent.interop');\ngoog.require('reagent.impl.util');\ngoog.require('clojure.string');\nif(typeof reagent.impl.batching.mount_count !== 'undefined'){\n} else {\nreagent.impl.batching.mount_count = (0);\n}\nreagent.impl.batching.next_mount_count = (function reagent$impl$batching$next_mount_count(){\nreturn reagent.impl.batching.mount_count = (reagent.impl.batching.mount_count + (1));\n});\nreagent.impl.batching.fake_raf = (function reagent$impl$batching$fake_raf(f){\nreturn setTimeout(f,(16));\n});\nreagent.impl.batching.next_tick = ((!(reagent.impl.util.is_client))?reagent.impl.batching.fake_raf:(function (){var w = window;\nvar or__3922__auto__ = (w[\"requestAnimationFrame\"]);\nif(cljs.core.truth_(or__3922__auto__)){\nreturn or__3922__auto__;\n} else {\nvar or__3922__auto____$1 = (w[\"webkitRequestAnimationFrame\"]);\nif(cljs.core.truth_(or__3922__auto____$1)){\nreturn or__3922__auto____$1;\n} else {\nvar or__3922__auto____$2 = (w[\"mozRequestAnimationFrame\"]);\nif(cljs.core.truth_(or__3922__auto____$2)){\nreturn or__3922__auto____$2;\n} else {\nvar or__3922__auto____$3 = (w[\"msRequestAnimationFrame\"]);\nif(cljs.core.truth_(or__3922__auto____$3)){\nreturn or__3922__auto____$3;\n} else {\nreturn reagent.impl.batching.fake_raf;\n}\n}\n}\n}\n})());\nreagent.impl.batching.compare_mount_order = (function reagent$impl$batching$compare_mount_order(c1,c2){\nreturn ((c1[\"cljsMountOrder\"]) - (c2[\"cljsMountOrder\"]));\n});\nreagent.impl.batching.run_queue = (function reagent$impl$batching$run_queue(a){\na.sort(reagent.impl.batching.compare_mount_order);\n\nvar n__4376__auto__ = a.length;\nvar i = (0);\nwhile(true){\nif((i < n__4376__auto__)){\nvar c_25957 = (a[i]);\nif((c_25957[\"cljsIsDirty\"]) === true){\n(c_25957[\"forceUpdate\"])();\n} else {\n}\n\nvar G__25958 = (i + (1));\ni = G__25958;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nif(typeof reagent.impl.batching.ratom_flush !== 'undefined'){\n} else {\nreagent.impl.batching.ratom_flush = (function reagent$impl$batching$ratom_flush(){\nreturn null;\n});\n}\n\n/**\n* @constructor\n*/\nreagent.impl.batching.RenderQueue = (function (scheduled_QMARK_){\nthis.scheduled_QMARK_ = scheduled_QMARK_;\n});\nreagent.impl.batching.RenderQueue.prototype.run_funs = (function (k){\nvar self__ = this;\nvar this$ = this;\nvar temp__5461__auto__ = (this$[k]);\nif((temp__5461__auto__ == null)){\nreturn null;\n} else {\nvar fs = temp__5461__auto__;\n(this$[k] = null);\n\nvar n__4376__auto__ = fs.length;\nvar i = (0);\nwhile(true){\nif((i < n__4376__auto__)){\nvar fexpr__25959_25961 = (fs[i]);\n(fexpr__25959_25961.cljs$core$IFn$_invoke$arity$0 ? fexpr__25959_25961.cljs$core$IFn$_invoke$arity$0() : fexpr__25959_25961.call(null));\n\nvar G__25962 = (i + (1));\ni = G__25962;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n});\n\nreagent.impl.batching.RenderQueue.prototype.flush_after_render = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn this$.run_funs(\"afterRender\");\n});\n\nreagent.impl.batching.RenderQueue.prototype.queue_render = (function (c){\nvar self__ = this;\nvar this$ = this;\nreturn this$.enqueue(\"componentQueue\",c);\n});\n\nreagent.impl.batching.RenderQueue.prototype.schedule = (function (){\nvar self__ = this;\nvar this$ = this;\nif(self__.scheduled_QMARK_){\nreturn null;\n} else {\nself__.scheduled_QMARK_ = true;\n\nvar G__25960 = ((function (this$){\nreturn (function (){\nreturn this$.run_queues();\n});})(this$))\n;\nreturn (reagent.impl.batching.next_tick.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.batching.next_tick.cljs$core$IFn$_invoke$arity$1(G__25960) : reagent.impl.batching.next_tick.call(null,G__25960));\n}\n});\n\nreagent.impl.batching.RenderQueue.prototype.flush_queues = (function (){\nvar self__ = this;\nvar this$ = this;\nthis$.run_funs(\"beforeFlush\");\n\nreagent.impl.batching.ratom_flush();\n\nvar temp__5461__auto___25963 = (this$[\"componentQueue\"]);\nif((temp__5461__auto___25963 == null)){\n} else {\nvar cs_25964 = temp__5461__auto___25963;\n(this$[\"componentQueue\"] = null);\n\nreagent.impl.batching.run_queue(cs_25964);\n}\n\nreturn this$.flush_after_render();\n});\n\nreagent.impl.batching.RenderQueue.prototype.run_queues = (function (){\nvar self__ = this;\nvar this$ = this;\nself__.scheduled_QMARK_ = false;\n\nreturn this$.flush_queues();\n});\n\nreagent.impl.batching.RenderQueue.prototype.enqueue = (function (k,f){\nvar self__ = this;\nvar this$ = this;\nif(cljs.core.truth_(f)){\n} else {\nthrow (new Error([\"Assert failed: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1([\"Enqueued function\",\" must not be nil\"].join('')),\"\\n\",\"f\"].join('')));\n}\n\nif(((this$[k]) == null)){\n(this$[k] = []);\n} else {\n}\n\n(this$[k]).push(f);\n\nreturn this$.schedule();\n});\n\nreagent.impl.batching.RenderQueue.prototype.add_before_flush = (function (f){\nvar self__ = this;\nvar this$ = this;\nreturn this$.enqueue(\"beforeFlush\",f);\n});\n\nreagent.impl.batching.RenderQueue.prototype.add_after_render = (function (f){\nvar self__ = this;\nvar this$ = this;\nreturn this$.enqueue(\"afterRender\",f);\n});\n\nreagent.impl.batching.RenderQueue.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"scheduled?\",\"scheduled?\",579986609,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.impl.batching.RenderQueue.cljs$lang$type = true;\n\nreagent.impl.batching.RenderQueue.cljs$lang$ctorStr = \"reagent.impl.batching/RenderQueue\";\n\nreagent.impl.batching.RenderQueue.cljs$lang$ctorPrWriter = (function (this__4161__auto__,writer__4162__auto__,opt__4163__auto__){\nreturn cljs.core._write(writer__4162__auto__,\"reagent.impl.batching/RenderQueue\");\n});\n\n/**\n * Positional factory function for reagent.impl.batching/RenderQueue.\n */\nreagent.impl.batching.__GT_RenderQueue = (function reagent$impl$batching$__GT_RenderQueue(scheduled_QMARK_){\nreturn (new reagent.impl.batching.RenderQueue(scheduled_QMARK_));\n});\n\nif(typeof reagent.impl.batching.render_queue !== 'undefined'){\n} else {\nreagent.impl.batching.render_queue = reagent.impl.batching.__GT_RenderQueue(false);\n}\nreagent.impl.batching.flush = (function reagent$impl$batching$flush(){\nreturn reagent.impl.batching.render_queue.flush_queues();\n});\nreagent.impl.batching.flush_after_render = (function reagent$impl$batching$flush_after_render(){\nreturn reagent.impl.batching.render_queue.flush_after_render();\n});\nreagent.impl.batching.queue_render = (function reagent$impl$batching$queue_render(c){\nif(cljs.core.truth_((c[\"cljsIsDirty\"]))){\nreturn null;\n} else {\n(c[\"cljsIsDirty\"] = true);\n\nreturn reagent.impl.batching.render_queue.queue_render(c);\n}\n});\nreagent.impl.batching.mark_rendered = (function reagent$impl$batching$mark_rendered(c){\nreturn (c[\"cljsIsDirty\"] = false);\n});\nreagent.impl.batching.do_before_flush = (function reagent$impl$batching$do_before_flush(f){\nreturn reagent.impl.batching.render_queue.add_before_flush(f);\n});\nreagent.impl.batching.do_after_render = (function reagent$impl$batching$do_after_render(f){\nreturn reagent.impl.batching.render_queue.add_after_render(f);\n});\nreagent.impl.batching.schedule = (function reagent$impl$batching$schedule(){\nif(reagent.impl.batching.render_queue.scheduled_QMARK_ === false){\nreturn reagent.impl.batching.render_queue.schedule();\n} else {\nreturn null;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/impl/batching.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",26],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$dbg","~$reagent.debug","~$assert-some","^J","~$$","~$reagent.interop","~$$!","^L"],"~:excludes",["~#set",["~$flush"]],"~:name","~$reagent.impl.batching","~:op","~:ns","~:imports",null,"~:requires",["^ ","^J","^J","^L","^L","~$reagent.impl.util","^W","~$clojure.string","^X","~$string","^X","~$cljs.core","^Z","~$goog","^["],"~:seen",["^O",["~:require"]],"~:uses",["^ ","~$is-client","^W"],"~:require-macros",["^ ","^J","^J","^L","^L","^Z","^Z"],"~:form",["~#list",["~$ns","^R",["^16",["~:refer-clojure","~:exclude",["^P"]]],["^16",["^11",["^J","~:refer-macros",["^I","^K"]],["^L","^1:",["~$$","^M"]],["^W","~:refer",["^13"]],["^X","~:as","^Y"]]]]],"~:flags",["^ ","^11",["^O",[]]],"~:js-deps",["^ "],"~:deps",["^[","^Z","^J","^L","^W","^X"]],"^T","^R","~:resource-id",["~:shadow.build.classpath/resource","reagent/impl/batching.cljs"],"~:compiled-at",1535847047450,"~:resource-name","reagent/impl/batching.cljs","~:warnings",[],"~:source","(ns reagent.impl.batching\n  (:refer-clojure :exclude [flush])\n  (:require [reagent.debug :refer-macros [dbg assert-some]]\n            [reagent.interop :refer-macros [$ $!]]\n            [reagent.impl.util :refer [is-client]]\n            [clojure.string :as string]))\n\n;;; Update batching\n\n(defonce mount-count 0)\n\n(defn next-mount-count []\n  (set! mount-count (inc mount-count)))\n\n(defn fake-raf [f]\n  (js/setTimeout f 16))\n\n(def next-tick\n  (if-not is-client\n    fake-raf\n    (let [w js/window]\n      (or ($ w :requestAnimationFrame)\n          ($ w :webkitRequestAnimationFrame)\n          ($ w :mozRequestAnimationFrame)\n          ($ w :msRequestAnimationFrame)\n          fake-raf))))\n\n(defn compare-mount-order [c1 c2]\n  (- ($ c1 :cljsMountOrder)\n     ($ c2 :cljsMountOrder)))\n\n(defn run-queue [a]\n  ;; sort components by mount order, to make sure parents\n  ;; are rendered before children\n  (.sort a compare-mount-order)\n  (dotimes [i (alength a)]\n    (let [c (aget a i)]\n      (when (true? ($ c :cljsIsDirty))\n        ($ c forceUpdate)))))\n\n\n;; Set from ratom.cljs\n(defonce ratom-flush (fn []))\n\n(deftype RenderQueue [^:mutable ^boolean scheduled?]\n  Object\n  (enqueue [this k f]\n    (assert-some f \"Enqueued function\")\n    (when (nil? (aget this k))\n      (aset this k (array)))\n    (.push (aget this k) f)\n    (.schedule this))\n\n  (run-funs [this k]\n    (when-some [fs (aget this k)]\n      (aset this k nil)\n      (dotimes [i (alength fs)]\n        ((aget fs i)))))\n\n  (schedule [this]\n    (when-not scheduled?\n      (set! scheduled? true)\n      (next-tick #(.run-queues this))))\n\n  (queue-render [this c]\n    (.enqueue this \"componentQueue\" c))\n\n  (add-before-flush [this f]\n    (.enqueue this \"beforeFlush\" f))\n\n  (add-after-render [this f]\n    (.enqueue this \"afterRender\" f))\n\n  (run-queues [this]\n    (set! scheduled? false)\n    (.flush-queues this))\n\n  (flush-after-render [this]\n    (.run-funs this \"afterRender\"))\n\n  (flush-queues [this]\n    (.run-funs this \"beforeFlush\")\n    (ratom-flush)\n    (when-some [cs (aget this \"componentQueue\")]\n      (aset this \"componentQueue\" nil)\n      (run-queue cs))\n    (.flush-after-render this)))\n\n(defonce render-queue (->RenderQueue false))\n\n(defn flush []\n  (.flush-queues render-queue))\n\n(defn flush-after-render []\n  (.flush-after-render render-queue))\n\n(defn queue-render [c]\n  (when-not ($ c :cljsIsDirty)\n    ($! c :cljsIsDirty true)\n    (.queue-render render-queue c)))\n\n(defn mark-rendered [c]\n  ($! c :cljsIsDirty false))\n\n(defn do-before-flush [f]\n  (.add-before-flush render-queue f))\n\n(defn do-after-render [f]\n  (.add-after-render render-queue f))\n\n(defn schedule []\n  (when (false? (.-scheduled? render-queue))\n    (.schedule render-queue)))\n","~:reader-features",["^O",["~:cljs"]],"~:source-map",["^ ","~i9",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",6],["^ ","^1I",3,"^1J",6],["^ ","^1I",0,"^1J",7],["^ ","^1I",0,"^1J",8],["^ ","^1I",0,"^1J",8],["^ ","^1I",36,"^1J",8]],"~i9",[["^ ","^1I",10,"^1J",6,"^Q","reagent.impl.batching/mount-count"],["^ ","^1I",0,"^1J",8,"^Q","reagent.impl.batching/mount-count"]]],"~i11",["^ ","~i0",[["^ ","^1I",0,"^1J",10],["^ ","^1I",41,"^1J",10],["^ ","^1I",0,"^1J",11]],"~i6",[["^ ","^1I",0,"^1J",10,"^Q","reagent.impl.batching/next-mount-count"]]],"~i12",["^ ","~i2",[["^ ","^1I",0,"^1J",11]],"~i8",[["^ ","^1I",7,"^1J",11,"^Q","reagent.impl.batching/mount-count"]],"~i20",[["^ ","^1I",43,"^1J",11],["^ ","^1I",80,"^1J",11]],"~i25",[["^ ","^1I",44,"^1J",11,"^Q","reagent.impl.batching/mount-count"]]],"~i14",["^ ","~i0",[["^ ","^1I",0,"^1J",13],["^ ","^1I",33,"^1J",13],["^ ","^1I",0,"^1J",14]],"~i6",[["^ ","^1I",0,"^1J",13,"^Q","reagent.impl.batching/fake-raf"]],"~i16",[["^ ","^1I",74,"^1J",13,"^Q","f"]]],"~i15",["^ ","~i2",[["^ ","^1I",0,"^1J",14],["^ ","^1I",20,"^1J",14]],"~i3",[["^ ","^1I",7,"^1J",14,"^Q","js/setTimeout"]],"~i17",[["^ ","^1I",18,"^1J",14,"^Q","f"]]],"^1R",["^ ","~i0",[["^ ","^1I",0,"^1J",16]],"~i5",[["^ ","^1I",0,"^1J",16,"^Q","reagent.impl.batching/next-tick"]]],"~i18",["^ ","~i2",[["^ ","^1I",34,"^1J",16],["^ ","^1I",36,"^1J",16]],"~i10",[["^ ","^1I",38,"^1J",16,"^Q","reagent.impl.util/is-client"]]],"~i19",["^ ","~i4",[["^ ","^1I",68,"^1J",16,"^Q","reagent.impl.batching/fake-raf"]]],"^1M",["^ ","~i4",[["^ ","^1I",99,"^1J",16],["^ ","^1I",0,"^1J",17]],"^1T",[["^ ","^1I",116,"^1J",16,"^Q","w"]],"^1L",[["^ ","^1I",120,"^1J",16,"^Q","js/window"]]],"~i21",["^ ","~i6",[["^ ","^1I",0,"^1J",17],["^ ","^1I",4,"^1J",17,"^Q","or__3922__auto__"],["^ ","^1I",0,"^1J",18],["^ ","^1I",0,"^1J",18],["^ ","^1I",20,"^1J",18,"^Q","or__3922__auto__"],["^ ","^1I",0,"^1J",19,"^Q","or__3922__auto__"],["^ ","^1I",0,"^1J",21],["^ ","^1I",4,"^1J",21,"^Q","or__3922__auto__"],["^ ","^1I",0,"^1J",22],["^ ","^1I",0,"^1J",22],["^ ","^1I",20,"^1J",22,"^Q","or__3922__auto__"],["^ ","^1I",0,"^1J",23,"^Q","or__3922__auto__"],["^ ","^1I",0,"^1J",25],["^ ","^1I",4,"^1J",25,"^Q","or__3922__auto__"],["^ ","^1I",0,"^1J",26],["^ ","^1I",0,"^1J",26],["^ ","^1I",20,"^1J",26,"^Q","or__3922__auto__"],["^ ","^1I",0,"^1J",27,"^Q","or__3922__auto__"],["^ ","^1I",0,"^1J",29],["^ ","^1I",4,"^1J",29,"^Q","or__3922__auto__"],["^ ","^1I",0,"^1J",30],["^ ","^1I",0,"^1J",30],["^ ","^1I",20,"^1J",30,"^Q","or__3922__auto__"],["^ ","^1I",0,"^1J",31,"^Q","or__3922__auto__"]],"^1T",[["^ ","^1I",23,"^1J",17],["^ ","^1I",26,"^1J",17]],"~i13",[["^ ","^1I",24,"^1J",17,"^Q","w"]]],"~i22",["^ ","^1T",[["^ ","^1I",27,"^1J",21],["^ ","^1I",30,"^1J",21]],"^1W",[["^ ","^1I",28,"^1J",21,"^Q","w"]]],"~i23",["^ ","^1T",[["^ ","^1I",27,"^1J",25],["^ ","^1I",30,"^1J",25]],"^1W",[["^ ","^1I",28,"^1J",25,"^Q","w"]]],"~i24",["^ ","^1T",[["^ ","^1I",27,"^1J",29],["^ ","^1I",30,"^1J",29]],"^1W",[["^ ","^1I",28,"^1J",29,"^Q","w"]]],"^1N",["^ ","^1T",[["^ ","^1I",0,"^1J",33,"^Q","reagent.impl.batching/fake-raf"]]],"~i27",["^ ","~i0",[["^ ","^1I",0,"^1J",39],["^ ","^1I",44,"^1J",39],["^ ","^1I",0,"^1J",40]],"~i6",[["^ ","^1I",0,"^1J",39,"^Q","reagent.impl.batching/compare-mount-order"]],"^1[",[["^ ","^1I",96,"^1J",39,"^Q","c1"]],"~i30",[["^ ","^1I",99,"^1J",39,"^Q","c2"]]],"~i28",["^ ","~i2",[["^ ","^1I",0,"^1J",40]],"~i5",[["^ ","^1I",8,"^1J",40],["^ ","^1I",12,"^1J",40]],"~i8",[["^ ","^1I",9,"^1J",40,"^Q","c1"]]],"~i29",["^ ","~i5",[["^ ","^1I",33,"^1J",40],["^ ","^1I",37,"^1J",40]],"~i8",[["^ ","^1I",34,"^1J",40,"^Q","c2"]]],"~i31",["^ ","~i0",[["^ ","^1I",0,"^1J",42],["^ ","^1I",34,"^1J",42],["^ ","^1I",0,"^1J",43]],"~i6",[["^ ","^1I",0,"^1J",42,"^Q","reagent.impl.batching/run-queue"]],"^1R",[["^ ","^1I",76,"^1J",42,"^Q","a"]]],"~i34",["^ ","~i2",[["^ ","^1I",0,"^1J",43]],"~i9",[["^ ","^1I",0,"^1J",43,"^Q","a"]],"^1K",[["^ ","^1I",7,"^1J",43,"^Q","reagent.impl.batching/compare-mount-order"]]],"~i35",["^ ","~i2",[["^ ","^1I",0,"^1J",45],["^ ","^1I",4,"^1J",45,"^Q","n__4376__auto__"],["^ ","^1I",0,"^1J",46],["^ ","^1I",0,"^1J",46],["^ ","^1I",8,"^1J",46],["^ ","^1I",0,"^1J",48],["^ ","^1I",0,"^1J",48],["^ ","^1I",3,"^1J",48],["^ ","^1I",8,"^1J",48,"^Q","n__4376__auto__"],["^ ","^1I",0,"^1J",49],["^ ","^1I",0,"^1J",55],["^ ","^1I",15,"^1J",55],["^ ","^1I",20,"^1J",55],["^ ","^1I",0,"^1J",59]],"^1L",[["^ ","^1I",4,"^1J",46,"^Q","i"],["^ ","^1I",4,"^1J",48,"^Q","i"],["^ ","^1I",16,"^1J",55,"^Q","i"]],"^1O",[["^ ","^1I",22,"^1J",45]],"^1Y",[["^ ","^1I",22,"^1J",45,"^Q","a"]]],"~i36",["^ ","~i4",[["^ ","^1I",0,"^1J",49],["^ ","^1I",0,"^1J",50]],"^1T",[["^ ","^1I",4,"^1J",49,"^Q","c"]],"^1L",[["^ ","^1I",14,"^1J",49]],"^1S",[["^ ","^1I",15,"^1J",49,"^Q","a"]],"^1M",[["^ ","^1I",17,"^1J",49,"^Q","i"]]],"~i37",["^ ","~i6",[["^ ","^1I",0,"^1J",50],["^ ","^1I",0,"^1J",51],["^ ","^1I",0,"^1J",53]],"^1L",[["^ ","^1I",3,"^1J",50]],"^1U",[["^ ","^1I",3,"^1J",50],["^ ","^1I",12,"^1J",50]],"^1X",[["^ ","^1I",4,"^1J",50,"^Q","c"]]],"~i38",["^ ","~i8",[["^ ","^1I",0,"^1J",51],["^ ","^1I",0,"^1J",51],["^ ","^1I",9,"^1J",51]],"^1K",[["^ ","^1I",1,"^1J",51,"^Q","c"]]],"~i42",["^ ","~i0",[["^ ","^1I",0,"^1J",64],["^ ","^1I",3,"^1J",64],["^ ","^1I",0,"^1J",65],["^ ","^1I",0,"^1J",66],["^ ","^1I",0,"^1J",66]],"~i9",[["^ ","^1I",10,"^1J",64,"^Q","reagent.impl.batching/ratom-flush"],["^ ","^1I",0,"^1J",66,"^Q","reagent.impl.batching/ratom-flush"]],"^1V",[["^ ","^1I",36,"^1J",66],["^ ","^1I",0,"^1J",67],["^ ","^1I",0,"^1J",67]]],"~i44",["^ ","~i0",[["^ ","^1I",0,"^1J",70],["^ ","^1I",0,"^1J",70],["^ ","^1I",0,"^1J",77],["^ ","^1I",0,"^1J",77],["^ ","^1I",0,"^1J",77],["^ ","^1I",0,"^1J",77],["^ ","^1I",55,"^1J",77],["^ ","^1I",0,"^1J",79],["^ ","^1I",0,"^1J",79],["^ ","^1I",12,"^1J",79],["^ ","^1I",0,"^1J",80],["^ ","^1I",0,"^1J",105],["^ ","^1I",0,"^1J",105],["^ ","^1I",0,"^1J",105],["^ ","^1I",65,"^1J",105],["^ ","^1I",0,"^1J",107],["^ ","^1I",0,"^1J",107],["^ ","^1I",12,"^1J",107],["^ ","^1I",0,"^1J",108],["^ ","^1I",0,"^1J",111],["^ ","^1I",0,"^1J",111],["^ ","^1I",0,"^1J",111],["^ ","^1I",59,"^1J",111],["^ ","^1I",0,"^1J",113],["^ ","^1I",0,"^1J",113],["^ ","^1I",12,"^1J",113],["^ ","^1I",0,"^1J",114],["^ ","^1I",0,"^1J",117],["^ ","^1I",0,"^1J",117],["^ ","^1I",0,"^1J",117],["^ ","^1I",55,"^1J",117],["^ ","^1I",0,"^1J",119],["^ ","^1I",0,"^1J",119],["^ ","^1I",12,"^1J",119],["^ ","^1I",0,"^1J",120],["^ ","^1I",0,"^1J",134],["^ ","^1I",0,"^1J",134],["^ ","^1I",0,"^1J",134],["^ ","^1I",59,"^1J",134],["^ ","^1I",0,"^1J",136],["^ ","^1I",0,"^1J",136],["^ ","^1I",12,"^1J",136],["^ ","^1I",0,"^1J",137],["^ ","^1I",0,"^1J",153],["^ ","^1I",0,"^1J",153],["^ ","^1I",0,"^1J",153],["^ ","^1I",57,"^1J",153],["^ ","^1I",0,"^1J",155],["^ ","^1I",0,"^1J",155],["^ ","^1I",12,"^1J",155],["^ ","^1I",0,"^1J",156],["^ ","^1I",0,"^1J",161],["^ ","^1I",0,"^1J",161],["^ ","^1I",0,"^1J",161],["^ ","^1I",54,"^1J",161],["^ ","^1I",0,"^1J",163],["^ ","^1I",0,"^1J",163],["^ ","^1I",12,"^1J",163],["^ ","^1I",0,"^1J",164],["^ ","^1I",0,"^1J",179],["^ ","^1I",0,"^1J",179],["^ ","^1I",0,"^1J",179],["^ ","^1I",63,"^1J",179],["^ ","^1I",0,"^1J",181],["^ ","^1I",0,"^1J",181],["^ ","^1I",12,"^1J",181],["^ ","^1I",0,"^1J",182],["^ ","^1I",0,"^1J",185],["^ ","^1I",0,"^1J",185],["^ ","^1I",0,"^1J",185],["^ ","^1I",63,"^1J",185],["^ ","^1I",0,"^1J",187],["^ ","^1I",0,"^1J",187],["^ ","^1I",12,"^1J",187],["^ ","^1I",0,"^1J",188],["^ ","^1I",0,"^1J",191],["^ ","^1I",0,"^1J",191],["^ ","^1I",45,"^1J",191],["^ ","^1I",0,"^1J",192],["^ ","^1I",0,"^1J",192],["^ ","^1I",90,"^1J",192],["^ ","^1I",110,"^1J",192],["^ ","^1I",178,"^1J",192],["^ ","^1I",221,"^1J",192],["^ ","^1I",273,"^1J",192],["^ ","^1I",336,"^1J",192],["^ ","^1I",394,"^1J",192],["^ ","^1I",0,"^1J",195],["^ ","^1I",0,"^1J",195],["^ ","^1I",51,"^1J",195],["^ ","^1I",0,"^1J",197],["^ ","^1I",0,"^1J",197],["^ ","^1I",54,"^1J",197],["^ ","^1I",0,"^1J",199],["^ ","^1I",0,"^1J",199],["^ ","^1I",59,"^1J",199],["^ ","^1I",70,"^1J",199,"^Q","this__4161__auto__"],["^ ","^1I",89,"^1J",199,"^Q","writer__4162__auto__"],["^ ","^1I",110,"^1J",199,"^Q","opt__4163__auto__"],["^ ","^1I",0,"^1J",200],["^ ","^1I",0,"^1J",200],["^ ","^1I",7,"^1J",200,"^Q","cljs.core/-write"],["^ ","^1I",24,"^1J",200,"^Q","writer__4162__auto__"],["^ ","^1I",45,"^1J",200],["^ ","^1I",0,"^1J",203],["^ ","^1I",41,"^1J",206],["^ ","^1I",0,"^1J",207],["^ ","^1I",0,"^1J",207],["^ ","^1I",12,"^1J",207,"^Q","reagent.impl.batching/RenderQueue"]],"~i9",[["^ ","^1I",0,"^1J",77,"^Q","reagent.impl.batching/RenderQueue"],["^ ","^1I",0,"^1J",105,"^Q","reagent.impl.batching/RenderQueue"],["^ ","^1I",0,"^1J",111,"^Q","reagent.impl.batching/RenderQueue"],["^ ","^1I",0,"^1J",117,"^Q","reagent.impl.batching/RenderQueue"],["^ ","^1I",0,"^1J",134,"^Q","reagent.impl.batching/RenderQueue"],["^ ","^1I",0,"^1J",153,"^Q","reagent.impl.batching/RenderQueue"],["^ ","^1I",0,"^1J",161,"^Q","reagent.impl.batching/RenderQueue"],["^ ","^1I",0,"^1J",179,"^Q","reagent.impl.batching/RenderQueue"],["^ ","^1I",0,"^1J",185,"^Q","reagent.impl.batching/RenderQueue"],["^ ","^1I",0,"^1J",191,"^Q","reagent.impl.batching/RenderQueue"],["^ ","^1I",0,"^1J",195,"^Q","reagent.impl.batching/RenderQueue"],["^ ","^1I",0,"^1J",197,"^Q","reagent.impl.batching/RenderQueue"],["^ ","^1I",0,"^1J",199,"^Q","reagent.impl.batching/RenderQueue"],["^ ","^1I",0,"^1J",206,"^Q","reagent.impl.batching/->RenderQueue"],["^ ","^1I",0,"^1J",210,"^Q","reagent.impl.batching/RenderQueue"]],"~i41",[["^ ","^1I",90,"^1J",206,"^Q","scheduled?"],["^ ","^1I",46,"^1J",207,"^Q","scheduled?"]]],"~i46",["^ ","^1L",[["^ ","^1I",4,"^1J",163,"^Q","this"]],"^1R",[["^ ","^1I",65,"^1J",161,"^Q","k"]],"^1U",[["^ ","^1I",67,"^1J",161,"^Q","f"]]],"~i47",["^ ","~i4",[["^ ","^1I",0,"^1J",164],["^ ","^1I",0,"^1J",165],["^ ","^1I",0,"^1J",166],["^ ","^1I",0,"^1J",166],["^ ","^1I",6,"^1J",166],["^ ","^1I",11,"^1J",166,"^Q","js/Error"],["^ ","^1I",17,"^1J",166],["^ ","^1I",18,"^1J",166],["^ ","^1I",80,"^1J",166],["^ ","^1I",81,"^1J",166],["^ ","^1I",101,"^1J",166],["^ ","^1I",131,"^1J",166],["^ ","^1I",136,"^1J",166]],"^1R",[["^ ","^1I",20,"^1J",164,"^Q","f"]]],"~i48",["^ ","~i4",[["^ ","^1I",0,"^1J",169],["^ ","^1I",0,"^1J",170],["^ ","^1I",0,"^1J",172]],"^1T",[["^ ","^1I",3,"^1J",169],["^ ","^1I",18,"^1J",169]],"^1P",[["^ ","^1I",4,"^1J",169]],"^1X",[["^ ","^1I",5,"^1J",169,"^Q","this"]],"^1[",[["^ ","^1I",11,"^1J",169,"^Q","k"]]],"~i49",["^ ","~i6",[["^ ","^1I",0,"^1J",170]],"^1L",[["^ ","^1I",1,"^1J",170,"^Q","this"]],"^1R",[["^ ","^1I",7,"^1J",170,"^Q","k"]],"^1U",[["^ ","^1I",12,"^1J",170]]],"~i50",["^ ","~i4",[["^ ","^1I",0,"^1J",174]],"^1K",[["^ ","^1I",0,"^1J",174]],"^1R",[["^ ","^1I",1,"^1J",174,"^Q","this"]],"^1X",[["^ ","^1I",7,"^1J",174,"^Q","k"]],"^1N",[["^ ","^1I",16,"^1J",174,"^Q","f"]]],"~i51",["^ ","~i4",[["^ ","^1I",0,"^1J",176]],"^1Q",[["^ ","^1I",7,"^1J",176,"^Q","this"]]],"~i53",["^ ","^1W",[["^ ","^1I",4,"^1J",79,"^Q","this"]],"^1S",[["^ ","^1I",66,"^1J",77,"^Q","k"]]],"~i54",["^ ","~i4",[["^ ","^1I",0,"^1J",80],["^ ","^1I",4,"^1J",80,"^Q","temp__5461__auto__"],["^ ","^1I",0,"^1J",81],["^ ","^1I",0,"^1J",81],["^ ","^1I",3,"^1J",81],["^ ","^1I",4,"^1J",81,"^Q","temp__5461__auto__"],["^ ","^1I",26,"^1J",81],["^ ","^1I",0,"^1J",82],["^ ","^1I",0,"^1J",84],["^ ","^1I",9,"^1J",84,"^Q","temp__5461__auto__"],["^ ","^1I",0,"^1J",85]],"^1P",[["^ ","^1I",4,"^1J",84,"^Q","fs"]],"^1U",[["^ ","^1I",25,"^1J",80]],"^1N",[["^ ","^1I",26,"^1J",80,"^Q","this"]],"^20",[["^ ","^1I",32,"^1J",80,"^Q","k"]]],"~i55",["^ ","~i6",[["^ ","^1I",0,"^1J",85],["^ ","^1I",12,"^1J",85]],"^1L",[["^ ","^1I",1,"^1J",85,"^Q","this"]],"^1R",[["^ ","^1I",7,"^1J",85,"^Q","k"]]],"~i56",["^ ","~i6",[["^ ","^1I",0,"^1J",87],["^ ","^1I",4,"^1J",87,"^Q","n__4376__auto__"],["^ ","^1I",0,"^1J",88],["^ ","^1I",0,"^1J",88],["^ ","^1I",8,"^1J",88],["^ ","^1I",0,"^1J",90],["^ ","^1I",0,"^1J",90],["^ ","^1I",3,"^1J",90],["^ ","^1I",8,"^1J",90,"^Q","n__4376__auto__"],["^ ","^1I",0,"^1J",91],["^ ","^1I",0,"^1J",94],["^ ","^1I",15,"^1J",94],["^ ","^1I",20,"^1J",94],["^ ","^1I",0,"^1J",98]],"^1P",[["^ ","^1I",4,"^1J",88,"^Q","i"],["^ ","^1I",4,"^1J",90,"^Q","i"],["^ ","^1I",16,"^1J",94,"^Q","i"]],"^1S",[["^ ","^1I",22,"^1J",87]],"^1[",[["^ ","^1I",22,"^1J",87,"^Q","fs"]]],"~i57",["^ ","~i8",[["^ ","^1I",0,"^1J",91],["^ ","^1I",4,"^1J",91,"^Q","fexpr__25959"],["^ ","^1I",0,"^1J",92],["^ ","^1I",0,"^1J",92],["^ ","^1I",1,"^1J",92,"^Q","fexpr__25959"],["^ ","^1I",52,"^1J",92,"^Q","fexpr__25959"],["^ ","^1I",105,"^1J",92,"^Q","fexpr__25959"]],"~i9",[["^ ","^1I",25,"^1J",91]],"^1Q",[["^ ","^1I",26,"^1J",91,"^Q","fs"]],"^1S",[["^ ","^1I",29,"^1J",91,"^Q","i"]]],"~i59",["^ ","^1W",[["^ ","^1I",4,"^1J",119,"^Q","this"]]],"~i60",["^ ","~i4",[["^ ","^1I",0,"^1J",120],["^ ","^1I",0,"^1J",121],["^ ","^1I",0,"^1J",123]],"^1O",[["^ ","^1I",3,"^1J",120,"^Q","scheduled?"]]],"~i61",["^ ","~i6",[["^ ","^1I",0,"^1J",123],["^ ","^1I",26,"^1J",123]],"^1L",[["^ ","^1I",0,"^1J",123,"^Q","scheduled?"]]],"~i62",["^ ","~i6",[["^ ","^1I",0,"^1J",125],["^ ","^1I",4,"^1J",125,"^Q","G__25960"],["^ ","^1I",15,"^1J",125],["^ ","^1I",0,"^1J",127],["^ ","^1I",0,"^1J",130],["^ ","^1I",0,"^1J",130],["^ ","^1I",134,"^1J",130,"^Q","G__25960"],["^ ","^1I",188,"^1J",130,"^Q","G__25960"]],"~i7",[["^ ","^1I",8,"^1J",130,"^Q","reagent.impl.batching/next-tick"],["^ ","^1I",72,"^1J",130,"^Q","reagent.impl.batching/next-tick"],["^ ","^1I",146,"^1J",130,"^Q","reagent.impl.batching/next-tick"]],"^1S",[["^ ","^1I",0,"^1J",127]],"^23",[["^ ","^1I",7,"^1J",127,"^Q","this"]]],"~i64",["^ ","^1R",[["^ ","^1I",4,"^1J",113,"^Q","this"]],"^1X",[["^ ","^1I",70,"^1J",111,"^Q","c"]]],"~i65",["^ ","~i4",[["^ ","^1I",0,"^1J",114],["^ ","^1I",21,"^1J",114]],"^1O",[["^ ","^1I",7,"^1J",114,"^Q","this"]],"^26",[["^ ","^1I",38,"^1J",114,"^Q","c"]]],"~i67",["^ ","^1V",[["^ ","^1I",4,"^1J",181,"^Q","this"]],"~i26",[["^ ","^1I",74,"^1J",179,"^Q","f"]]],"~i68",["^ ","~i4",[["^ ","^1I",0,"^1J",182],["^ ","^1I",21,"^1J",182]],"^1O",[["^ ","^1I",7,"^1J",182,"^Q","this"]],"~i33",[["^ ","^1I",35,"^1J",182,"^Q","f"]]],"~i70",["^ ","^1V",[["^ ","^1I",4,"^1J",187,"^Q","this"]],"^2N",[["^ ","^1I",74,"^1J",185,"^Q","f"]]],"~i71",["^ ","~i4",[["^ ","^1I",0,"^1J",188],["^ ","^1I",21,"^1J",188]],"^1O",[["^ ","^1I",7,"^1J",188,"^Q","this"]],"^2P",[["^ ","^1I",35,"^1J",188,"^Q","f"]]],"~i73",["^ ","^1Q",[["^ ","^1I",4,"^1J",155,"^Q","this"]]],"~i74",["^ ","~i4",[["^ ","^1I",0,"^1J",156],["^ ","^1I",26,"^1J",156]],"^1T",[["^ ","^1I",0,"^1J",156,"^Q","scheduled?"]]],"~i75",["^ ","~i4",[["^ ","^1I",0,"^1J",158]],"^1U",[["^ ","^1I",7,"^1J",158,"^Q","this"]]],"~i77",["^ ","^1Y",[["^ ","^1I",4,"^1J",107,"^Q","this"]]],"~i78",["^ ","~i4",[["^ ","^1I",0,"^1J",108],["^ ","^1I",22,"^1J",108]],"^1Q",[["^ ","^1I",7,"^1J",108,"^Q","this"]]],"~i80",["^ ","^1R",[["^ ","^1I",4,"^1J",136,"^Q","this"]]],"~i81",["^ ","~i4",[["^ ","^1I",0,"^1J",137],["^ ","^1I",15,"^1J",137]],"^1Q",[["^ ","^1I",0,"^1J",137,"^Q","this"]]],"~i82",["^ ","~i4",[["^ ","^1I",0,"^1J",139]],"~i5",[["^ ","^1I",0,"^1J",139,"^Q","reagent.impl.batching/ratom-flush"]]],"~i83",["^ ","~i4",[["^ ","^1I",0,"^1J",141],["^ ","^1I",4,"^1J",141,"^Q","temp__5461__auto__"],["^ ","^1I",0,"^1J",142],["^ ","^1I",0,"^1J",142],["^ ","^1I",3,"^1J",142],["^ ","^1I",4,"^1J",142,"^Q","temp__5461__auto__"],["^ ","^1I",32,"^1J",142],["^ ","^1I",0,"^1J",143],["^ ","^1I",0,"^1J",144],["^ ","^1I",15,"^1J",144,"^Q","temp__5461__auto__"],["^ ","^1I",0,"^1J",145]],"^1P",[["^ ","^1I",4,"^1J",144,"^Q","cs"]],"^1U",[["^ ","^1I",31,"^1J",141],["^ ","^1I",38,"^1J",141]],"^1N",[["^ ","^1I",32,"^1J",141,"^Q","this"]]],"~i84",["^ ","~i6",[["^ ","^1I",0,"^1J",145],["^ ","^1I",7,"^1J",145],["^ ","^1I",27,"^1J",145]],"^1L",[["^ ","^1I",1,"^1J",145,"^Q","this"]]],"~i85",["^ ","~i6",[["^ ","^1I",0,"^1J",147]],"~i7",[["^ ","^1I",0,"^1J",147,"^Q","reagent.impl.batching/run-queue"]],"^1R",[["^ ","^1I",32,"^1J",147,"^Q","cs"]]],"~i86",["^ ","~i4",[["^ ","^1I",0,"^1J",150]],"^1N",[["^ ","^1I",7,"^1J",150,"^Q","this"]]],"~i88",["^ ","~i0",[["^ ","^1I",0,"^1J",210],["^ ","^1I",3,"^1J",210],["^ ","^1I",0,"^1J",211],["^ ","^1I",0,"^1J",212],["^ ","^1I",0,"^1J",212]],"~i9",[["^ ","^1I",10,"^1J",210,"^Q","reagent.impl.batching/render-queue"],["^ ","^1I",0,"^1J",212,"^Q","reagent.impl.batching/render-queue"]],"^1X",[["^ ","^1I",37,"^1J",212],["^ ","^1I",76,"^1J",212]],"^1Y",[["^ ","^1I",37,"^1J",212,"^Q","reagent.impl.batching/->RenderQueue"]]],"~i90",["^ ","~i0",[["^ ","^1I",0,"^1J",214],["^ ","^1I",30,"^1J",214],["^ ","^1I",0,"^1J",215]],"~i6",[["^ ","^1I",0,"^1J",214,"^Q","reagent.impl.batching/flush"]]],"~i91",["^ ","~i2",[["^ ","^1I",0,"^1J",215]],"^1R",[["^ ","^1I",7,"^1J",215,"^Q","reagent.impl.batching/render-queue"]]],"~i93",["^ ","~i0",[["^ ","^1I",0,"^1J",217],["^ ","^1I",43,"^1J",217],["^ ","^1I",0,"^1J",218]],"~i6",[["^ ","^1I",0,"^1J",217,"^Q","reagent.impl.batching/flush-after-render"]]],"~i94",["^ ","~i2",[["^ ","^1I",0,"^1J",218]],"^1Y",[["^ ","^1I",7,"^1J",218,"^Q","reagent.impl.batching/render-queue"]]],"~i96",["^ ","~i0",[["^ ","^1I",0,"^1J",220],["^ ","^1I",37,"^1J",220],["^ ","^1I",0,"^1J",221]],"~i6",[["^ ","^1I",0,"^1J",220,"^Q","reagent.impl.batching/queue-render"]],"^1M",[["^ ","^1I",82,"^1J",220,"^Q","c"]]],"~i97",["^ ","~i2",[["^ ","^1I",0,"^1J",221],["^ ","^1I",0,"^1J",222],["^ ","^1I",0,"^1J",224]],"^1L",[["^ ","^1I",20,"^1J",221],["^ ","^1I",23,"^1J",221]],"^1Q",[["^ ","^1I",21,"^1J",221,"^Q","c"]]],"~i98",["^ ","~i4",[["^ ","^1I",0,"^1J",224],["^ ","^1I",3,"^1J",224],["^ ","^1I",20,"^1J",224]],"~i8",[["^ ","^1I",1,"^1J",224,"^Q","c"]]],"~i99",["^ ","~i4",[["^ ","^1I",0,"^1J",226]],"^1U",[["^ ","^1I",7,"^1J",226,"^Q","reagent.impl.batching/render-queue"]],"~i32",[["^ ","^1I",55,"^1J",226,"^Q","c"]]],"~i101",["^ ","~i0",[["^ ","^1I",0,"^1J",229],["^ ","^1I",38,"^1J",229],["^ ","^1I",0,"^1J",230]],"~i6",[["^ ","^1I",0,"^1J",229,"^Q","reagent.impl.batching/mark-rendered"]],"^1V",[["^ ","^1I",84,"^1J",229,"^Q","c"]]],"~i102",["^ ","~i2",[["^ ","^1I",0,"^1J",230],["^ ","^1I",10,"^1J",230],["^ ","^1I",27,"^1J",230]],"~i6",[["^ ","^1I",8,"^1J",230,"^Q","c"]]],"~i104",["^ ","~i0",[["^ ","^1I",0,"^1J",232],["^ ","^1I",40,"^1J",232],["^ ","^1I",0,"^1J",233]],"~i6",[["^ ","^1I",0,"^1J",232,"^Q","reagent.impl.batching/do-before-flush"]],"^1Y",[["^ ","^1I",88,"^1J",232,"^Q","f"]]],"~i105",["^ ","~i2",[["^ ","^1I",0,"^1J",233]],"^1V",[["^ ","^1I",7,"^1J",233,"^Q","reagent.impl.batching/render-queue"]],"^24",[["^ ","^1I",59,"^1J",233,"^Q","f"]]],"~i107",["^ ","~i0",[["^ ","^1I",0,"^1J",235],["^ ","^1I",40,"^1J",235],["^ ","^1I",0,"^1J",236]],"~i6",[["^ ","^1I",0,"^1J",235,"^Q","reagent.impl.batching/do-after-render"]],"^1Y",[["^ ","^1I",88,"^1J",235,"^Q","f"]]],"~i108",["^ ","~i2",[["^ ","^1I",0,"^1J",236]],"^1V",[["^ ","^1I",7,"^1J",236,"^Q","reagent.impl.batching/render-queue"]],"^24",[["^ ","^1I",59,"^1J",236,"^Q","f"]]],"~i110",["^ ","~i0",[["^ ","^1I",0,"^1J",238],["^ ","^1I",33,"^1J",238],["^ ","^1I",0,"^1J",239]],"~i6",[["^ ","^1I",0,"^1J",238,"^Q","reagent.impl.batching/schedule"]]],"~i111",["^ ","~i2",[["^ ","^1I",0,"^1J",239],["^ ","^1I",0,"^1J",240],["^ ","^1I",0,"^1J",242]],"~i8",[["^ ","^1I",3,"^1J",239]],"^1P",[["^ ","^1I",3,"^1J",239]],"^20",[["^ ","^1I",3,"^1J",239,"^Q","reagent.impl.batching/render-queue"]]],"~i112",["^ ","~i4",[["^ ","^1I",0,"^1J",240]],"^1Q",[["^ ","^1I",7,"^1J",240,"^Q","reagent.impl.batching/render-queue"]]]],"~:cljc",false],"~:cache-keys",["~#cmap",[["^1A","reagent/impl/batching.cljs"],[1535847022000,"^[","^Z","^J","^L","^W","^X"],["~:macro","^Z"],[1535834828000],["^1A","goog/math/math.js"],[1505449243000,"^[","~$goog.array","~$goog.asserts"],["^3I","^J"],[1535847022000],["^1A","goog/array/array.js"],[1505449243000,"^[","^3K"],["^1A","reagent/impl/util.cljs"],[1535847022000,"^[","^Z","^J","^L","^X"],["^1A","goog/debug/error.js"],[1505449243000,"^["],["^1A","goog/dom/nodetype.js"],[1505449243000,"^["],["^1A","goog/object/object.js"],[1505449243000,"^["],"~:SHADOW-TIMESTAMP",[1535834828000,1535834828000],["^1A","goog/math/long.js"],[1505449243000,"^[","^3K","~$goog.reflect"],["^3I","^L"],[1535847022000],["^1A","goog/functions/functions.js"],[1505449243000,"^["],["^1A","goog/structs/map.js"],[1505449243000,"^[","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^1A","goog/asserts/asserts.js"],[1505449243000,"^[","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^1A","goog/uri/uri.js"],[1505449243000,"^[","^3J","^3K","^3S","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1A","goog/base.js"],[1505449243000],["^1A","goog/structs/structs.js"],[1505449243000,"^[","^3J","^3P"],["^1A","clojure/string.cljs"],[1535834828000,"^[","^Z","^3S","~$goog.string.StringBuffer"],["^1A","goog/string/string.js"],[1505449243000,"^["],["^1A","goog/reflect/reflect.js"],[1505449243000,"^["],["^1A","goog/string/stringbuffer.js"],[1505449243000,"^["],["^1A","goog/iter/iter.js"],[1505449243000,"^[","^3J","^3K","~$goog.functions","~$goog.math"],["^1A","reagent/interop.cljs"],[1535847022000,"^[","^Z"],["^1A","cljs/core.cljs"],[1535834828000,"~$goog.math.Long","~$goog.math.Integer","^3S","^3P","^3J","~$goog.Uri","^3Y"],["^1A","reagent/debug.cljs"],[1535847022000,"^[","^Z"],["^1A","goog/math/integer.js"],[1505449243000,"^["],["^1A","goog/uri/utils.js"],[1505449243000,"^[","^3J","^3K","^3S"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/impl/batching.cljs","^7",1,"^8",5,"^9",1,"^:",26],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",["^ ","^I","^J","^K","^J","~$$","^L","^M","^L"],"^N",["^O",["^P"]],"~:shadow/js-access-properties",["^O",["flush-after-render","add-after-render","queue-render","schedule","flush-queues","run-funs","add-before-flush","run-queues"]],"^Q","^R","^U",null,"^V",["^ ","^J","^J","^L","^L","^W","^W","^X","^X","^Y","^X","^Z","^Z","^[","^["],"^10",["^O",["^11"]],"~:shadow/js-access-global",["^O",["window","Error","setTimeout"]],"^12",["^ ","^13","^W"],"~:defs",["^ ","~$fake-raf",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",15,"^8",7,"^9",15,"^:",15,"~:arglists",["^16",["~$quote",["^16",[["~$f"]]]]]],"^Q","~$reagent.impl.batching/fake-raf","~:variadic",false,"^6","reagent/impl/batching.cljs","^:",15,"~:method-params",["^16",[["~$f"]]],"~:protocol-impl",null,"~:arglists-meta",["^16",[null,null]],"^8",1,"^7",15,"^9",15,"~:max-fixed-arity",1,"~:fn-var",true,"^49",["^16",["^4:",["^16",[["~$f"]]]]]],"~$do-before-flush",["^ ","^48",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",105,"^8",7,"^9",105,"^:",22,"^49",["^16",["^4:",["^16",[["~$f"]]]]]],"^Q","~$reagent.impl.batching/do-before-flush","^4<",false,"^6","reagent/impl/batching.cljs","^:",22,"^4=",["^16",[["~$f"]]],"^4>",null,"^4?",["^16",[null,null]],"^8",1,"^7",105,"^9",105,"^4@",1,"^4A",true,"^49",["^16",["^4:",["^16",[["~$f"]]]]]],"~$flush-after-render",["^ ","^48",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",94,"^8",7,"^9",94,"^:",25,"^49",["^16",["^4:",["^16",[[]]]]]],"^Q","~$reagent.impl.batching/flush-after-render","^4<",false,"^6","reagent/impl/batching.cljs","^:",25,"^4=",["^16",[[]]],"^4>",null,"^4?",["^16",[null,null]],"^8",1,"^7",94,"^9",94,"^4@",0,"^4A",true,"^49",["^16",["^4:",["^16",[[]]]]]],"~$queue-render",["^ ","^48",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",97,"^8",7,"^9",97,"^:",19,"^49",["^16",["^4:",["^16",[["~$c"]]]]]],"^Q","~$reagent.impl.batching/queue-render","^4<",false,"^6","reagent/impl/batching.cljs","^:",19,"^4=",["^16",[["~$c"]]],"^4>",null,"^4?",["^16",[null,null]],"^8",1,"^7",97,"^9",97,"^4@",1,"^4A",true,"^49",["^16",["^4:",["^16",[["~$c"]]]]]],"~$next-tick",["^ ","^Q","~$reagent.impl.batching/next-tick","^6","reagent/impl/batching.cljs","^7",18,"^8",1,"^9",18,"^:",15,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",18,"^8",6,"^9",18,"^:",15],"~:tag",["^O",[null,"~$any"]]],"^P",["^ ","^48",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",91,"^8",7,"^9",91,"^:",12,"^49",["^16",["^4:",["^16",[[]]]]]],"^Q","~$reagent.impl.batching/flush","^4<",false,"^6","reagent/impl/batching.cljs","^:",12,"^4=",["^16",[[]]],"^4>",null,"^4?",["^16",[null,null]],"^8",1,"^7",91,"^9",91,"^4@",0,"^4A",true,"^49",["^16",["^4:",["^16",[[]]]]]],"~$mark-rendered",["^ ","^48",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",102,"^8",7,"^9",102,"^:",20,"^49",["^16",["^4:",["^16",[["~$c"]]]]]],"^Q","~$reagent.impl.batching/mark-rendered","^4<",false,"^6","reagent/impl/batching.cljs","^:",20,"^4=",["^16",[["~$c"]]],"^4>",null,"^4?",["^16",[null,null]],"^8",1,"^7",102,"^9",102,"^4@",1,"^4A",true,"^49",["^16",["^4:",["^16",[["~$c"]]]]]],"~$schedule",["^ ","^48",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",111,"^8",7,"^9",111,"^:",15,"^49",["^16",["^4:",["^16",[[]]]]]],"^Q","~$reagent.impl.batching/schedule","^4<",false,"^6","reagent/impl/batching.cljs","^:",15,"^4=",["^16",[[]]],"^4>",null,"^4?",["^16",[null,null]],"^8",1,"^7",111,"^9",111,"^4@",0,"^4A",true,"^49",["^16",["^4:",["^16",[[]]]]]],"~$render-queue",["^ ","^Q","~$reagent.impl.batching/render-queue","^6","reagent/impl/batching.cljs","^7",89,"^8",1,"^9",89,"^:",22,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",89,"^8",10,"^9",89,"^:",22],"^4J","^4K"],"~$RenderQueue",["^ ","^Q","~$reagent.impl.batching/RenderQueue","~:type",true,"^4J","^4T","~:num-fields",1,"~:record",false,"^6","reagent/impl/batching.cljs","^7",45,"^8",10],"~$compare-mount-order",["^ ","^48",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",28,"^8",7,"^9",28,"^:",26,"^49",["^16",["^4:",["^16",[["~$c1","~$c2"]]]]]],"^Q","~$reagent.impl.batching/compare-mount-order","^4<",false,"^6","reagent/impl/batching.cljs","^:",26,"^4=",["^16",[["^4Y","^4Z"]]],"^4>",null,"^4?",["^16",[null,null]],"^8",1,"^7",28,"^9",28,"^4@",2,"^4A",true,"^49",["^16",["^4:",["^16",[["^4Y","^4Z"]]]]]],"~$mount-count",["^ ","^Q","~$reagent.impl.batching/mount-count","^6","reagent/impl/batching.cljs","^7",10,"^8",1,"^9",10,"^:",21,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",10,"^8",10,"^9",10,"^:",21],"^4J","~$number"],"~$next-mount-count",["^ ","^48",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",12,"^8",7,"^9",12,"^:",23,"^49",["^16",["^4:",["^16",[[]]]]]],"^Q","~$reagent.impl.batching/next-mount-count","^4<",false,"^6","reagent/impl/batching.cljs","^:",23,"^4=",["^16",[[]]],"^4>",null,"^4?",["^16",[null,null]],"^8",1,"^7",12,"^9",12,"^4@",0,"^4A",true,"^49",["^16",["^4:",["^16",[[]]]]]],"~$->RenderQueue",["^ ","^48",null,"^5",["^ ","~:protocols",["^O",["~$cljs.core/Object"]],"^6","reagent/impl/batching.cljs","^:",21,"^8",10,"~:factory","~:positional","^7",45,"^9",45,"^49",["^16",["^4:",["^16",[["~$scheduled?"]]]]],"~:skip-protocol-flag",null,"~:doc","Positional factory function for reagent.impl.batching/RenderQueue."],"^56",["^O",["^57"]],"^Q","~$reagent.impl.batching/->RenderQueue","^4<",false,"^6","reagent/impl/batching.cljs","^:",21,"^4=",["^16",[["^5:"]]],"^4>",null,"^4?",["^16",[null,null]],"^8",1,"^58","^59","^7",45,"^9",45,"^4@",1,"^4A",true,"^49",["^16",["^4:",["^16",[["^5:"]]]]],"^5;",null,"^5<","Positional factory function for reagent.impl.batching/RenderQueue."],"~$do-after-render",["^ ","^48",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",108,"^8",7,"^9",108,"^:",22,"^49",["^16",["^4:",["^16",[["~$f"]]]]]],"^Q","~$reagent.impl.batching/do-after-render","^4<",false,"^6","reagent/impl/batching.cljs","^:",22,"^4=",["^16",[["~$f"]]],"^4>",null,"^4?",["^16",[null,null]],"^8",1,"^7",108,"^9",108,"^4@",1,"^4A",true,"^49",["^16",["^4:",["^16",[["~$f"]]]]]],"~$run-queue",["^ ","^48",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",32,"^8",7,"^9",32,"^:",16,"^49",["^16",["^4:",["^16",[["~$a"]]]]]],"^Q","~$reagent.impl.batching/run-queue","^4<",false,"^6","reagent/impl/batching.cljs","^:",16,"^4=",["^16",[["~$a"]]],"^4>",null,"^4?",["^16",[null,null]],"^8",1,"^7",32,"^9",32,"^4@",1,"^4A",true,"^49",["^16",["^4:",["^16",[["~$a"]]]]]],"~$ratom-flush",["^ ","^48",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",43,"^8",10,"^9",43,"^:",21],"^Q","~$reagent.impl.batching/ratom-flush","^4<",false,"^6","reagent/impl/batching.cljs","^:",21,"^4=",["^16",[[]]],"^4>",null,"^4?",["^16",[]],"^8",1,"^7",43,"^9",43,"^4@",0,"^4A",true,"^49",null]],"^14",["^ ","^J","^J","^L","^L","^Z","^Z"],"~:cljs.analyzer/constants",["^ ","^10",["^O",["~$boolean","^5:","^4J","~:mutable"]],"~:order",["^5:","^4J","^5F","^5E"]],"^1=",["^ ","^11",["^O",[]]],"^1>",["^ "],"^1?",["^[","^Z","^J","^L","^W","^X"]],"^T","^R","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^3H",[["^5J","~:static-fns"],true,["^5J","~:elide-asserts"],false,["^5J","~:optimize-constants"],null,["^5J","~:external-config"],null,["^5J","~:tooling-config"],null,["^5J","~:emit-constants"],null,["^5J","~:infer-externs"],true,["^5J","^1F"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5J","~:fn-invoke-direct"],null,["^5J","^1H"],"/dev/null"]]]