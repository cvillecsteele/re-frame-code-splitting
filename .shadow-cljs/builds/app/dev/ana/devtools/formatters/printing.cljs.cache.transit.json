["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.printing');\ngoog.require('cljs.core');\ngoog.require('devtools.prefs');\ngoog.require('devtools.format');\ngoog.require('devtools.protocols');\ngoog.require('devtools.formatters.state');\ngoog.require('devtools.formatters.helpers');\ndevtools.formatters.printing.markup_QMARK_ = (function devtools$formatters$printing$markup_QMARK_(value){\nreturn new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(value));\n});\ndevtools.formatters.printing.mark_as_markup = (function devtools$formatters$printing$mark_as_markup(value){\nreturn cljs.core.with_meta(value,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186),true], null));\n});\ndevtools.formatters.printing.build_markup = (function devtools$formatters$printing$build_markup(var_args){\nvar args__4502__auto__ = [];\nvar len__4499__auto___28565 = arguments.length;\nvar i__4500__auto___28566 = (0);\nwhile(true){\nif((i__4500__auto___28566 < len__4499__auto___28565)){\nargs__4502__auto__.push((arguments[i__4500__auto___28566]));\n\nvar G__28567 = (i__4500__auto___28566 + (1));\ni__4500__auto___28566 = G__28567;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4503__auto__ = ((((2) < args__4502__auto__.length))?(new cljs.core.IndexedSeq(args__4502__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4503__auto__);\n});\n\ndevtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic = (function (markup_db,fn_key,args){\nvar f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(markup_db,fn_key);\nif(cljs.core.truth_(f)){\n} else {\nthrow (new Error([\"Assert failed: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1([\"missing markup method in markup-db: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_key)].join('')),\"\\n\",\"f\"].join('')));\n}\n\nreturn devtools.formatters.printing.mark_as_markup(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args));\n});\n\ndevtools.formatters.printing.build_markup.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ndevtools.formatters.printing.build_markup.cljs$lang$applyTo = (function (seq28559){\nvar G__28560 = cljs.core.first(seq28559);\nvar seq28559__$1 = cljs.core.next(seq28559);\nvar G__28561 = cljs.core.first(seq28559__$1);\nvar seq28559__$2 = cljs.core.next(seq28559__$1);\nvar self__4486__auto__ = this;\nreturn self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__28560,G__28561,seq28559__$2);\n});\n\ndevtools.formatters.printing.wrap_value_as_reference_if_needed = (function devtools$formatters$printing$wrap_value_as_reference_if_needed(markup_db,value){\nif(cljs.core.truth_((function (){var or__3922__auto__ = devtools.formatters.helpers.directly_printable_QMARK_(value);\nif(cljs.core.truth_(or__3922__auto__)){\nreturn or__3922__auto__;\n} else {\nreturn devtools.formatters.printing.markup_QMARK_(value);\n}\n})())){\nreturn value;\n} else {\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0));\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWriter}\n*/\ndevtools.formatters.printing.TemplateWriter = (function (group,markup_db){\nthis.group = group;\nthis.markup_db = markup_db;\nthis.cljs$lang$protocol_mask$partition0$ = 1073741824;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\ndevtools.formatters.printing.TemplateWriter.prototype.merge = (function (a){\nvar self__ = this;\nvar _ = this;\nreturn self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,a);\n});\n\ndevtools.formatters.printing.TemplateWriter.prototype.get_group = (function (){\nvar self__ = this;\nvar _ = this;\nreturn self__.group;\n});\n\ndevtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,o){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.wrap_value_as_reference_if_needed(self__.markup_db,o)], null));\n});\n\ndevtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn null;\n});\n\ndevtools.formatters.printing.TemplateWriter.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"group\",\"group\",-2071839637,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"markup-db\",\"markup-db\",-1841597035,null)], null);\n});\n\ndevtools.formatters.printing.TemplateWriter.cljs$lang$type = true;\n\ndevtools.formatters.printing.TemplateWriter.cljs$lang$ctorStr = \"devtools.formatters.printing/TemplateWriter\";\n\ndevtools.formatters.printing.TemplateWriter.cljs$lang$ctorPrWriter = (function (this__4161__auto__,writer__4162__auto__,opt__4163__auto__){\nreturn cljs.core._write(writer__4162__auto__,\"devtools.formatters.printing/TemplateWriter\");\n});\n\n/**\n * Positional factory function for devtools.formatters.printing/TemplateWriter.\n */\ndevtools.formatters.printing.__GT_TemplateWriter = (function devtools$formatters$printing$__GT_TemplateWriter(group,markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(group,markup_db));\n});\n\ndevtools.formatters.printing.make_template_writer = (function devtools$formatters$printing$make_template_writer(markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(cljs.core.PersistentVector.EMPTY,markup_db));\n});\ndevtools.formatters.printing.already_reference_QMARK_ = (function devtools$formatters$printing$already_reference_QMARK_(group){\nvar temp__5455__auto__ = cljs.core.first(cljs.core.first(group));\nif(cljs.core.truth_(temp__5455__auto__)){\nvar tag = temp__5455__auto__;\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tag,\"reference\");\n} else {\nreturn null;\n}\n});\ndevtools.formatters.printing.wrap_group_in_reference_if_needed = (function devtools$formatters$printing$wrap_group_in_reference_if_needed(group,obj,markup_db){\nif(cljs.core.truth_((function (){var and__3911__auto__ = cljs.core.not(devtools.formatters.printing.already_reference_QMARK_(group));\nif(and__3911__auto__){\nvar or__3922__auto__ = devtools.formatters.helpers.expandable_QMARK_(obj);\nif(cljs.core.truth_(or__3922__auto__)){\nreturn or__3922__auto__;\n} else {\nreturn devtools.formatters.helpers.abbreviated_QMARK_(group);\n}\n} else {\nreturn and__3911__auto__;\n}\n})())){\nvar expandable_markup = cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),group);\nvar surrogate_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,expandable_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0));\nvar reference_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([surrogate_markup], 0));\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [reference_markup], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_circular_warning_if_needed = (function devtools$formatters$printing$wrap_group_in_circular_warning_if_needed(group,markup_db,circular_QMARK_){\nif(cljs.core.truth_(circular_QMARK_)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_meta_if_needed = (function devtools$formatters$printing$wrap_group_in_meta_if_needed(group,value,markup_db){\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-metas\",\"render-metas\",1141294116),value,(function (p1__28574_SHARP_){\nreturn !((cljs.core.meta(p1__28574_SHARP_) == null));\n})))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587).cljs$core$IFn$_invoke$arity$1(markup_db),cljs.core.meta(value)),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.detect_edge_case_and_patch_it = (function devtools$formatters$printing$detect_edge_case_and_patch_it(group,obj,markup_db){\nif(((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"\\\"]\")))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"]\")))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\"]\")))))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0))], null);\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#<\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj)].join(''),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(1)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\">\")))){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),devtools.formatters.printing.build_markup(new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),obj),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2))], null);\n} else {\nreturn group;\n\n}\n}\n});\ndevtools.formatters.printing.post_process_printed_output = (function devtools$formatters$printing$post_process_printed_output(output_group,obj,markup_db,circular_QMARK_){\nreturn devtools.formatters.printing.wrap_group_in_meta_if_needed(devtools.formatters.printing.wrap_group_in_circular_warning_if_needed(devtools.formatters.printing.wrap_group_in_reference_if_needed(devtools.formatters.printing.detect_edge_case_and_patch_it(output_group,obj,markup_db),obj,markup_db),markup_db,circular_QMARK_),obj,markup_db);\n});\ndevtools.formatters.printing.alt_printer_job = (function devtools$formatters$printing$alt_printer_job(obj,writer,opts){\nvar map__28581 = opts;\nvar map__28581__$1 = ((((!((map__28581 == null)))?(((((map__28581.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28581.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28581):map__28581);\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28581__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\nif(cljs.core.truth_((function (){var or__3922__auto__ = (function (){try{if(!((obj == null))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$format$IDevtoolsFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n}\n}catch (e28585){var _e__27196__auto__ = e28585;\nreturn false;\n}})();\nif(cljs.core.truth_(or__3922__auto__)){\nreturn or__3922__auto__;\n} else {\ntry{if(!((obj == null))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$protocols$IFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n}\n}catch (e28587){var _e__27196__auto__ = e28587;\nreturn false;\n}}\n})())){\nreturn cljs.core._write(writer,devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0)));\n} else {\nvar temp__5455__auto__ = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0));\nif(cljs.core.truth_(temp__5455__auto__)){\nvar atomic_markup = temp__5455__auto__;\nreturn cljs.core._write(writer,atomic_markup);\n} else {\nvar default_impl = new cljs.core.Keyword(null,\"fallback-impl\",\"fallback-impl\",-1501286995).cljs$core$IFn$_invoke$arity$1(opts);\nvar inner_opts = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_print_level_STAR_,(1)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),(0)):opts);\nreturn (default_impl.cljs$core$IFn$_invoke$arity$3 ? default_impl.cljs$core$IFn$_invoke$arity$3(obj,writer,inner_opts) : default_impl.call(null,obj,writer,inner_opts));\n}\n}\n});\ndevtools.formatters.printing.alt_printer_impl = (function devtools$formatters$printing$alt_printer_impl(obj,writer,opts){\nvar _STAR_current_state_STAR_28589 = devtools.formatters.state._STAR_current_state_STAR_;\ndevtools.formatters.state._STAR_current_state_STAR_ = devtools.formatters.state.get_current_state();\n\ntry{var map__28590 = opts;\nvar map__28590__$1 = ((((!((map__28590 == null)))?(((((map__28590.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28590.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28590):map__28590);\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28590__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\nvar circular_QMARK_ = devtools.formatters.state.is_circular_QMARK_(obj);\nvar inner_writer = devtools.formatters.printing.make_template_writer(new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734).cljs$core$IFn$_invoke$arity$1(opts));\ndevtools.formatters.state.push_object_to_current_history_BANG_(obj);\n\ndevtools.formatters.printing.alt_printer_job(obj,inner_writer,opts);\n\nreturn writer.merge(devtools.formatters.printing.post_process_printed_output(inner_writer.get_group(),obj,markup_db,circular_QMARK_));\n}finally {devtools.formatters.state._STAR_current_state_STAR_ = _STAR_current_state_STAR_28589;\n}});\ndevtools.formatters.printing.managed_print = (function devtools$formatters$printing$managed_print(tag,markup_db,printer){\nvar writer = devtools.formatters.printing.make_template_writer(markup_db);\nvar opts = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"alt-impl\",\"alt-impl\",670969595),devtools.formatters.printing.alt_printer_impl,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734),markup_db,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),devtools.prefs.pref(new cljs.core.Keyword(null,\"max-header-elements\",\"max-header-elements\",713629864)),new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935),devtools.prefs.pref(new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935))], null);\nvar job_fn = ((function (writer,opts){\nreturn (function (){\nreturn (printer.cljs$core$IFn$_invoke$arity$2 ? printer.cljs$core$IFn$_invoke$arity$2(writer,opts) : printer.call(null,writer,opts));\n});})(writer,opts))\n;\nvar temp__5455__auto___28605 = devtools.formatters.state.get_managed_print_level();\nif(cljs.core.truth_(temp__5455__auto___28605)){\nvar managed_print_level_28606 = temp__5455__auto___28605;\nvar _STAR_print_level_STAR_28600_28607 = cljs.core._STAR_print_level_STAR_;\ncljs.core._STAR_print_level_STAR_ = managed_print_level_28606;\n\ntry{devtools.formatters.state.update_current_state_BANG_(((function (_STAR_print_level_STAR_28600_28607,managed_print_level_28606,temp__5455__auto___28605,writer,opts,job_fn){\nreturn (function (p1__28599_SHARP_){\nreturn devtools.formatters.state.set_managed_print_level(p1__28599_SHARP_,null);\n});})(_STAR_print_level_STAR_28600_28607,managed_print_level_28606,temp__5455__auto___28605,writer,opts,job_fn))\n);\n\njob_fn();\n}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_28600_28607;\n}} else {\njob_fn();\n}\n\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.prefs.pref(tag)], null),writer.get_group());\n});\ndevtools.formatters.printing.managed_print_via_writer = (function devtools$formatters$printing$managed_print_via_writer(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core.pr_seq_writer(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null),writer,opts);\n}));\n});\ndevtools.formatters.printing.managed_print_via_protocol = (function devtools$formatters$printing$managed_print_via_protocol(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core._pr_writer(value,writer,opts);\n}));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/printing.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",33],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$safe-call","~$devtools.oops"],"~:excludes",["~#set",[]],"~:name","~$devtools.formatters.printing","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$devtools.prefs","^S","~$devtools.format","^T","~$devtools.protocols","^U","~$devtools.formatters.state","^V","~$devtools.formatters.helpers","^W","~$cljs.core","^X","~$goog","^Y"],"~:seen",["^L",["~:require","~:require-macros"]],"~:uses",["^ ","~$IGroup","^U","~$expandable?","^W","~$ITemplate","^U","~$IDevtoolsFormat","^T","~$get-managed-print-level","^V","~$get-current-state","^V","~$ISurrogate","^U","~$should-render?","^W","~$set-managed-print-level","^V","~$directly-printable?","^W","~$pref","^S","~$push-object-to-current-history!","^V","~$update-current-state!","^V","~$abbreviated?","^W","~$IFormat","^U","~$*current-state*","^V","~$cljs-value?","^W","~$is-circular?","^V"],"^10",["^ ","^J","^J","^X","^X","^S","^S"],"~:form",["~#list",["~$ns","^N",["^1E",["^10",["^J","~:refer",["^I"]]]],["^1E",["^[",["^S","^1G",["^1<"]],["^T","^1G",["^15"]],["^U","^1G",["^14","^12","^18","^1@"]],["^V","^1G",["^1=","^1A","^17","^1C","^16","^1:","^1>"]],["^W","^1G",["^1B","^13","^1?","^1;","^19"]]]]]],"~:flags",["^ ","^10",["^L",[]],"^[",["^L",[]]],"~:js-deps",["^ "],"~:deps",["^Y","^X","^S","^T","^U","^V","^W"]],"^P","^N","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/printing.cljs"],"~:compiled-at",1535834863307,"~:resource-name","devtools/formatters/printing.cljs","~:warnings",[],"~:source","(ns devtools.formatters.printing\n  (:require-macros [devtools.oops :refer [safe-call]])\n  (:require [devtools.prefs :refer [pref]]\n            [devtools.format :refer [IDevtoolsFormat]]\n            [devtools.protocols :refer [ITemplate IGroup ISurrogate IFormat]]\n            [devtools.formatters.state :refer [push-object-to-current-history! *current-state* get-current-state\n                                               is-circular? get-managed-print-level set-managed-print-level\n                                               update-current-state!]]\n            [devtools.formatters.helpers :refer [cljs-value? expandable? abbreviated? directly-printable? should-render?]]))\n\n; -- helpers ----------------------------------------------------------------------------------------------------------------\n\n(defn markup? [value]\n  (::markup (meta value)))\n\n(defn mark-as-markup [value]\n  (with-meta value {::markup true}))\n\n(defn build-markup [markup-db fn-key & args]\n  (let [f (get markup-db fn-key)]\n    (assert f (str \"missing markup method in markup-db: \" fn-key))\n    (mark-as-markup (apply f args))))\n\n(defn wrap-value-as-reference-if-needed [markup-db value]\n  (if (or (directly-printable? value) (markup? value))\n    value\n    (build-markup markup-db :reference-surrogate value)))\n\n; -- TemplateWriter ---------------------------------------------------------------------------------------------------------\n\n(deftype TemplateWriter [^:mutable group markup-db]\n  Object\n  (merge [_ a] (set! group (concat group a)))\n  (get-group [_] group)\n  IWriter\n  (-write [_ o] (set! group (concat group [(wrap-value-as-reference-if-needed markup-db o)])))                                ; issue #21\n  (-flush [_] nil))\n\n(defn make-template-writer [markup-db]\n  (TemplateWriter. [] markup-db))\n\n; -- post-processing --------------------------------------------------------------------------------------------------------\n\n(defn already-reference? [group]\n  (if-let [tag (first (first group))]\n    (= tag \"reference\")))\n\n(defn wrap-group-in-reference-if-needed [group obj markup-db]\n  (if (and (not (already-reference? group))\n           (or (expandable? obj) (abbreviated? group)))\n    (let [expandable-markup (apply build-markup markup-db :expandable group)\n          surrogate-markup (build-markup markup-db :raw-surrogate obj expandable-markup :target)\n          reference-markup (build-markup markup-db :reference surrogate-markup)]\n      [reference-markup])\n    group))\n\n(defn wrap-group-in-circular-warning-if-needed [group markup-db circular?]\n  (if circular?\n    [(apply build-markup markup-db :circular-reference group)]\n    group))\n\n(defn wrap-group-in-meta-if-needed [group value markup-db]\n  (if (should-render? :render-metas value #(some? (meta %)))\n    [(apply (partial (:meta-wrapper markup-db) (meta value)) group)]\n    group))\n\n; default printer implementation can do this:\n;   :else (write-all writer \"#<\" (str obj) \">\")\n; we want to wrap stringified obj in a reference for further inspection\n;\n; this behaviour changed in https://github.com/clojure/clojurescript/commit/34c3b8985ed8197d90f441c46d168c4024a20eb8\n; newly functions and :else branch print \"#object [\" ... \"]\"\n;\n; in some situations obj can still be a clojurescript value (e.g. deftypes)\n; we have to implement a special flag to prevent infinite recursion\n; see https://github.com/binaryage/cljs-devtools/issues/2\n;     https://github.com/binaryage/cljs-devtools/issues/8\n(defn detect-edge-case-and-patch-it [group obj markup-db]\n  (cond\n    (or\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"\\\"]\"))                                          ; function case\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"]\"))                                            ; :else -constructor case\n      (and (= (count group) 3) (= (nth group 0) \"#object[\") (= (nth group 2) \"]\")))                                           ; :else -cljs$lang$ctorStr case\n    [(build-markup markup-db :native-reference obj)]\n\n    (and (= (count group) 3) (= (nth group 0) \"#<\") (= (str obj) (nth group 1)) (= (nth group 2) \">\"))                        ; old code prior r1.7.28\n    [(nth group 0) (build-markup :native-reference obj) (nth group 2)]\n\n    :else group))\n\n(defn post-process-printed-output [output-group obj markup-db circular?]\n  (-> output-group\n      (detect-edge-case-and-patch-it obj markup-db)                                                                           ; an ugly hack\n      (wrap-group-in-reference-if-needed obj markup-db)\n      (wrap-group-in-circular-warning-if-needed markup-db circular?)\n      (wrap-group-in-meta-if-needed obj markup-db)))\n\n; -- alternative printer ----------------------------------------------------------------------------------------------------\n\n(defn alt-printer-job [obj writer opts]\n  (let [{:keys [markup-db]} opts]\n    (if (or (safe-call satisfies? false IDevtoolsFormat obj)\n            (safe-call satisfies? false IFormat obj))                                                                         ; we have to wrap value in reference if detected IFormat\n      (-write writer (build-markup markup-db :reference obj))\n      (if-let [atomic-markup (build-markup markup-db :atomic obj)]\n        (-write writer atomic-markup)\n        (let [default-impl (:fallback-impl opts)\n              ; we want to limit print-level, at max-print-level level use maximal abbreviation e.g. [...] or {...}\n              inner-opts (if (= *print-level* 1) (assoc opts :print-length 0) opts)]\n          (default-impl obj writer inner-opts))))))\n\n(defn alt-printer-impl [obj writer opts]\n  (binding [*current-state* (get-current-state)]\n    (let [{:keys [markup-db]} opts\n          circular? (is-circular? obj)\n          inner-writer (make-template-writer (:markup-db opts))]\n      (push-object-to-current-history! obj)\n      (alt-printer-job obj inner-writer opts)\n      (.merge writer (post-process-printed-output (.get-group inner-writer) obj markup-db circular?)))))\n\n; -- common code for managed printing ---------------------------------------------------------------------------------------\n\n(defn managed-print [tag markup-db printer]\n  (let [writer (make-template-writer markup-db)\n        opts {:alt-impl     alt-printer-impl\n              :markup-db    markup-db\n              :print-length (pref :max-header-elements)\n              :more-marker  (pref :more-marker)}\n        job-fn #(printer writer opts)]\n    (if-let [managed-print-level (get-managed-print-level)]\n      (binding [*print-level* managed-print-level]\n        (update-current-state! #(set-managed-print-level % nil))                                                              ; reset managed-print-level so it does not propagate further down in expaded data\n        (job-fn))\n      (job-fn))\n    (concat [(pref tag)] (.get-group writer))))\n\n; -- public printing API ----------------------------------------------------------------------------------------------------\n\n(defn managed-print-via-writer [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (pr-seq-writer [value] writer opts))))                                                       ; note we use pr-seq-writer becasue pr-writer is private for some reason\n\n(defn managed-print-via-protocol [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (-pr-writer value writer opts))))\n","~:reader-features",["^L",["~:cljs"]],"~:source-map",["^ ","~i12",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",7],["^ ","^1U",45,"^1V",7],["^ ","^1U",0,"^1V",8]],"~i6",[["^ ","^1U",0,"^1V",7,"^M","devtools.formatters.printing/markup?"]],"~i15",[["^ ","^1U",98,"^1V",7,"^M","value"]]],"~i13",["^ ","~i2",[["^ ","^1U",0,"^1V",8],["^ ","^1U",7,"^1V",8]],"^1T",[["^ ","^1U",150,"^1V",8]],"^1X",[["^ ","^1U",150,"^1V",8,"^M","cljs.core/meta"]],"~i18",[["^ ","^1U",165,"^1V",8,"^M","value"]]],"^1W",["^ ","~i0",[["^ ","^1U",0,"^1V",10],["^ ","^1U",46,"^1V",10],["^ ","^1U",0,"^1V",11]],"~i6",[["^ ","^1U",0,"^1V",10,"^M","devtools.formatters.printing/mark-as-markup"]],"~i22",[["^ ","^1U",100,"^1V",10,"^M","value"]]],"~i16",["^ ","~i2",[["^ ","^1U",0,"^1V",11],["^ ","^1U",33,"^1V",11],["^ ","^1U",76,"^1V",11],["^ ","^1U",189,"^1V",11]],"~i3",[["^ ","^1U",7,"^1V",11,"^M","cljs.core/with-meta"]],"^1X",[["^ ","^1U",27,"^1V",11,"^M","value"]]],"^1Y",["^ ","~i0",[["^ ","^1U",0,"^1V",13],["^ ","^1U",0,"^1V",13],["^ ","^1U",44,"^1V",13],["^ ","^1U",96,"^1V",13,"^M","var_args"],["^ ","^1U",0,"^1V",14],["^ ","^1U",0,"^1V",14],["^ ","^1U",4,"^1V",14,"^M","args__4502__auto__"],["^ ","^1U",25,"^1V",14],["^ ","^1U",0,"^1V",15],["^ ","^1U",0,"^1V",15],["^ ","^1U",4,"^1V",15,"^M","len__4499__auto__"],["^ ","^1U",30,"^1V",15],["^ ","^1U",30,"^1V",15],["^ ","^1U",0,"^1V",16],["^ ","^1U",0,"^1V",16],["^ ","^1U",4,"^1V",16,"^M","i__4500__auto__"],["^ ","^1U",28,"^1V",16],["^ ","^1U",0,"^1V",18],["^ ","^1U",0,"^1V",18],["^ ","^1U",3,"^1V",18],["^ ","^1U",4,"^1V",18,"^M","i__4500__auto__"],["^ ","^1U",28,"^1V",18,"^M","len__4499__auto__"],["^ ","^1U",0,"^1V",19],["^ ","^1U",0,"^1V",19],["^ ","^1U",0,"^1V",19,"^M","args__4502__auto__"],["^ ","^1U",24,"^1V",19],["^ ","^1U",25,"^1V",19],["^ ","^1U",35,"^1V",19,"^M","i__4500__auto__"],["^ ","^1U",0,"^1V",21],["^ ","^1U",15,"^1V",21],["^ ","^1U",16,"^1V",21,"^M","i__4500__auto__"],["^ ","^1U",40,"^1V",21],["^ ","^1U",0,"^1V",25],["^ ","^1U",0,"^1V",29],["^ ","^1U",4,"^1V",29,"^M","argseq__4503__auto__"],["^ ","^1U",27,"^1V",29],["^ ","^1U",29,"^1V",29],["^ ","^1U",30,"^1V",29],["^ ","^1U",36,"^1V",29],["^ ","^1U",36,"^1V",29,"^M","args__4502__auto__"],["^ ","^1U",64,"^1V",29],["^ ","^1U",64,"^1V",29],["^ ","^1U",69,"^1V",29,"^M","cljs.core/IndexedSeq"],["^ ","^1U",90,"^1V",29],["^ ","^1U",90,"^1V",29,"^M","args__4502__auto__"],["^ ","^1U",115,"^1V",29],["^ ","^1U",120,"^1V",29],["^ ","^1U",124,"^1V",29],["^ ","^1U",131,"^1V",29],["^ ","^1U",0,"^1V",30],["^ ","^1U",0,"^1V",30],["^ ","^1U",7,"^1V",30,"^M","devtools.formatters.printing/build-markup"],["^ ","^1U",86,"^1V",30],["^ ","^1U",87,"^1V",30],["^ ","^1U",97,"^1V",30],["^ ","^1U",103,"^1V",30],["^ ","^1U",104,"^1V",30],["^ ","^1U",114,"^1V",30],["^ ","^1U",120,"^1V",30,"^M","argseq__4503__auto__"],["^ ","^1U",0,"^1V",33],["^ ","^1U",0,"^1V",33],["^ ","^1U",0,"^1V",33],["^ ","^1U",0,"^1V",33,"^M","devtools.formatters.printing/build-markup"],["^ ","^1U",81,"^1V",33],["^ ","^1U",0,"^1V",34],["^ ","^1U",0,"^1V",43],["^ ","^1U",0,"^1V",43],["^ ","^1U",0,"^1V",43,"^M","devtools.formatters.printing/build-markup"],["^ ","^1U",68,"^1V",43],["^ ","^1U",0,"^1V",45],["^ ","^1U",0,"^1V",46],["^ ","^1U",0,"^1V",46],["^ ","^1U",0,"^1V",46,"^M","devtools.formatters.printing/build-markup"],["^ ","^1U",62,"^1V",46],["^ ","^1U",73,"^1V",46,"^M","seq28559"],["^ ","^1U",0,"^1V",47],["^ ","^1U",0,"^1V",47],["^ ","^1U",4,"^1V",47,"^M","G__28560"],["^ ","^1U",15,"^1V",47],["^ ","^1U",15,"^1V",47,"^M","cljs.core/first"],["^ ","^1U",31,"^1V",47,"^M","seq28559"],["^ ","^1U",4,"^1V",48,"^M","seq28559"],["^ ","^1U",19,"^1V",48],["^ ","^1U",19,"^1V",48,"^M","cljs.core/next"],["^ ","^1U",34,"^1V",48,"^M","seq28559"],["^ ","^1U",4,"^1V",49,"^M","G__28561"],["^ ","^1U",15,"^1V",49],["^ ","^1U",15,"^1V",49,"^M","cljs.core/first"],["^ ","^1U",31,"^1V",49,"^M","seq28559"],["^ ","^1U",4,"^1V",50,"^M","seq28559"],["^ ","^1U",19,"^1V",50],["^ ","^1U",19,"^1V",50,"^M","cljs.core/next"],["^ ","^1U",34,"^1V",50,"^M","seq28559"],["^ ","^1U",0,"^1V",51],["^ ","^1U",0,"^1V",51],["^ ","^1U",4,"^1V",51,"^M","self__4486__auto__"],["^ ","^1U",25,"^1V",51],["^ ","^1U",0,"^1V",52],["^ ","^1U",0,"^1V",52],["^ ","^1U",7,"^1V",52,"^M","self__4486__auto__"],["^ ","^1U",63,"^1V",52,"^M","G__28560"],["^ ","^1U",72,"^1V",52,"^M","G__28561"],["^ ","^1U",81,"^1V",52,"^M","seq28559"],["^ ","^1U",0,"^1V",55]],"~i6",[["^ ","^1U",0,"^1V",13,"^M","devtools.formatters.printing/build-markup"]],"~i20",[["^ ","^1U",92,"^1V",33,"^M","markup-db"]],"~i30",[["^ ","^1U",102,"^1V",33,"^M","fn-key"]],"~i39",[["^ ","^1U",109,"^1V",33,"^M","args"]]],"~i19",["^ ","~i2",[["^ ","^1U",0,"^1V",34],["^ ","^1U",0,"^1V",35]],"~i8",[["^ ","^1U",4,"^1V",34,"^M","f"]],"~i10",[["^ ","^1U",8,"^1V",34]],"~i11",[["^ ","^1U",8,"^1V",34,"^M","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^1W",[["^ ","^1U",52,"^1V",34,"^M","markup-db"]],"~i25",[["^ ","^1U",62,"^1V",34,"^M","fn-key"]]],"^20",["^ ","~i4",[["^ ","^1U",0,"^1V",35],["^ ","^1U",0,"^1V",36],["^ ","^1U",0,"^1V",37],["^ ","^1U",0,"^1V",37],["^ ","^1U",6,"^1V",37],["^ ","^1U",11,"^1V",37,"^M","js/Error"],["^ ","^1U",17,"^1V",37],["^ ","^1U",18,"^1V",37],["^ ","^1U",183,"^1V",37],["^ ","^1U",188,"^1V",37]],"^1T",[["^ ","^1U",20,"^1V",35,"^M","f"]],"~i14",[["^ ","^1U",80,"^1V",37],["^ ","^1U",81,"^1V",37]],"~i58",[["^ ","^1U",164,"^1V",37,"^M","fn-key"]]],"~i21",["^ ","~i4",[["^ ","^1U",0,"^1V",40]],"~i5",[["^ ","^1U",7,"^1V",40,"^M","devtools.formatters.printing/mark-as-markup"]],"^20",[["^ ","^1U",51,"^1V",40]],"^29",[["^ ","^1U",51,"^1V",40,"^M","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"~i27",[["^ ","^1U",97,"^1V",40,"^M","f"]],"~i29",[["^ ","^1U",99,"^1V",40,"^M","args"]]],"~i23",["^ ","~i0",[["^ ","^1U",0,"^1V",55],["^ ","^1U",65,"^1V",55],["^ ","^1U",0,"^1V",56]],"~i6",[["^ ","^1U",0,"^1V",55,"^M","devtools.formatters.printing/wrap-value-as-reference-if-needed"]],"~i41",[["^ ","^1U",138,"^1V",55,"^M","markup-db"]],"~i51",[["^ ","^1U",148,"^1V",55,"^M","value"]]],"~i24",["^ ","~i2",[["^ ","^1U",0,"^1V",56]],"~i6",[["^ ","^1U",20,"^1V",56],["^ ","^1U",37,"^1V",56,"^M","or__3922__auto__"],["^ ","^1U",0,"^1V",57],["^ ","^1U",0,"^1V",57],["^ ","^1U",20,"^1V",57,"^M","or__3922__auto__"],["^ ","^1U",0,"^1V",58,"^M","or__3922__auto__"]],"^24",[["^ ","^1U",56,"^1V",56]],"^25",[["^ ","^1U",56,"^1V",56,"^M","devtools.formatters.helpers/directly-printable?"]],"~i31",[["^ ","^1U",110,"^1V",56,"^M","value"]],"~i38",[["^ ","^1U",0,"^1V",60]],"^22",[["^ ","^1U",7,"^1V",60,"^M","devtools.formatters.printing/markup?"]],"~i47",[["^ ","^1U",50,"^1V",60,"^M","value"]]],"^26",["^ ","~i4",[["^ ","^1U",0,"^1V",63,"^M","value"]]],"~i26",["^ ","~i4",[["^ ","^1U",0,"^1V",65],["^ ","^1U",96,"^1V",65]],"~i5",[["^ ","^1U",7,"^1V",65,"^M","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^1Y",[["^ ","^1U",86,"^1V",65,"^M","markup-db"]],"~i49",[["^ ","^1U",228,"^1V",65,"^M","value"]]],"^21",["^ ","~i0",[["^ ","^1U",0,"^1V",68],["^ ","^1U",0,"^1V",68],["^ ","^1U",0,"^1V",79],["^ ","^1U",0,"^1V",79],["^ ","^1U",0,"^1V",79],["^ ","^1U",0,"^1V",79],["^ ","^1U",62,"^1V",79],["^ ","^1U",0,"^1V",81],["^ ","^1U",0,"^1V",81],["^ ","^1U",8,"^1V",81],["^ ","^1U",0,"^1V",82],["^ ","^1U",0,"^1V",85],["^ ","^1U",0,"^1V",85],["^ ","^1U",0,"^1V",85],["^ ","^1U",66,"^1V",85],["^ ","^1U",0,"^1V",87],["^ ","^1U",0,"^1V",87],["^ ","^1U",8,"^1V",87],["^ ","^1U",0,"^1V",88],["^ ","^1U",0,"^1V",91],["^ ","^1U",0,"^1V",91],["^ ","^1U",0,"^1V",91],["^ ","^1U",89,"^1V",91],["^ ","^1U",0,"^1V",93],["^ ","^1U",0,"^1V",93],["^ ","^1U",12,"^1V",93],["^ ","^1U",0,"^1V",94],["^ ","^1U",0,"^1V",97],["^ ","^1U",0,"^1V",97],["^ ","^1U",0,"^1V",97],["^ ","^1U",89,"^1V",97],["^ ","^1U",0,"^1V",99],["^ ","^1U",0,"^1V",99],["^ ","^1U",12,"^1V",99],["^ ","^1U",0,"^1V",100],["^ ","^1U",0,"^1V",100],["^ ","^1U",0,"^1V",103],["^ ","^1U",0,"^1V",103],["^ ","^1U",55,"^1V",103],["^ ","^1U",0,"^1V",104],["^ ","^1U",0,"^1V",104],["^ ","^1U",90,"^1V",104],["^ ","^1U",110,"^1V",104],["^ ","^1U",170,"^1V",104],["^ ","^1U",213,"^1V",104],["^ ","^1U",271,"^1V",104],["^ ","^1U",285,"^1V",104],["^ ","^1U",0,"^1V",107],["^ ","^1U",0,"^1V",107],["^ ","^1U",61,"^1V",107],["^ ","^1U",0,"^1V",109],["^ ","^1U",0,"^1V",109],["^ ","^1U",64,"^1V",109],["^ ","^1U",0,"^1V",111],["^ ","^1U",0,"^1V",111],["^ ","^1U",69,"^1V",111],["^ ","^1U",80,"^1V",111,"^M","this__4161__auto__"],["^ ","^1U",99,"^1V",111,"^M","writer__4162__auto__"],["^ ","^1U",120,"^1V",111,"^M","opt__4163__auto__"],["^ ","^1U",0,"^1V",112],["^ ","^1U",0,"^1V",112],["^ ","^1U",7,"^1V",112,"^M","cljs.core/-write"],["^ ","^1U",24,"^1V",112,"^M","writer__4162__auto__"],["^ ","^1U",45,"^1V",112],["^ ","^1U",0,"^1V",115],["^ ","^1U",51,"^1V",118],["^ ","^1U",0,"^1V",119],["^ ","^1U",0,"^1V",119],["^ ","^1U",12,"^1V",119,"^M","devtools.formatters.printing/TemplateWriter"]],"~i9",[["^ ","^1U",0,"^1V",79,"^M","devtools.formatters.printing/TemplateWriter"],["^ ","^1U",0,"^1V",85,"^M","devtools.formatters.printing/TemplateWriter"],["^ ","^1U",0,"^1V",91,"^M","devtools.formatters.printing/TemplateWriter"],["^ ","^1U",0,"^1V",97,"^M","devtools.formatters.printing/TemplateWriter"],["^ ","^1U",0,"^1V",103,"^M","devtools.formatters.printing/TemplateWriter"],["^ ","^1U",0,"^1V",107,"^M","devtools.formatters.printing/TemplateWriter"],["^ ","^1U",0,"^1V",109,"^M","devtools.formatters.printing/TemplateWriter"],["^ ","^1U",0,"^1V",111,"^M","devtools.formatters.printing/TemplateWriter"],["^ ","^1U",0,"^1V",118,"^M","devtools.formatters.printing/->TemplateWriter"],["^ ","^1U",0,"^1V",122,"^M","devtools.formatters.printing/TemplateWriter"]],"~i35",[["^ ","^1U",110,"^1V",118,"^M","group"],["^ ","^1U",56,"^1V",119,"^M","group"]],"^2=",[["^ ","^1U",116,"^1V",118,"^M","markup-db"],["^ ","^1U",62,"^1V",119,"^M","markup-db"]]],"~i32",["^ ","^24",[["^ ","^1U",4,"^1V",81,"^M","_"]],"^1T",[["^ ","^1U",73,"^1V",79,"^M","a"]],"^1W",[["^ ","^1U",0,"^1V",82]],"^29",[["^ ","^1U",7,"^1V",82,"^M","group"]],"^2:",[["^ ","^1U",22,"^1V",82]],"~i28",[["^ ","^1U",22,"^1V",82,"^M","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"^2E",[["^ ","^1U",69,"^1V",82,"^M","group"]],"^2=",[["^ ","^1U",82,"^1V",82,"^M","a"]]],"~i33",["^ ","^27",[["^ ","^1U",4,"^1V",87,"^M","_"]],"~i17",[["^ ","^1U",0,"^1V",88,"^M","group"]]],"^2E",["^ ","^25",[["^ ","^1U",100,"^1V",91,"^M","_"],["^ ","^1U",4,"^1V",93,"^M","_"]],"^1X",[["^ ","^1U",102,"^1V",91,"^M","o"]],"^1[",[["^ ","^1U",0,"^1V",94]],"^1Z",[["^ ","^1U",7,"^1V",94,"^M","group"]],"^2G",[["^ ","^1U",22,"^1V",94],["^ ","^1U",82,"^1V",94]],"^2;",[["^ ","^1U",22,"^1V",94,"^M","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"~i36",[["^ ","^1U",69,"^1V",94,"^M","group"]],"~i43",[["^ ","^1U",165,"^1V",94]],"~i44",[["^ ","^1U",165,"^1V",94,"^M","devtools.formatters.printing/wrap-value-as-reference-if-needed"]],"~i78",[["^ ","^1U",228,"^1V",94,"^M","markup-db"]],"~i88",[["^ ","^1U",245,"^1V",94,"^M","o"]]],"^2J",["^ ","^25",[["^ ","^1U",100,"^1V",97,"^M","_"],["^ ","^1U",4,"^1V",99,"^M","_"]]],"^2A",["^ ","~i0",[["^ ","^1U",0,"^1V",122],["^ ","^1U",52,"^1V",122],["^ ","^1U",0,"^1V",123]],"~i6",[["^ ","^1U",0,"^1V",122,"^M","devtools.formatters.printing/make-template-writer"]],"^2G",[["^ ","^1U",112,"^1V",122,"^M","markup-db"]]],"^22",["^ ","~i2",[["^ ","^1U",0,"^1V",123],["^ ","^1U",12,"^1V",123,"^M","devtools.formatters.printing/TemplateWriter"],["^ ","^1U",56,"^1V",123]],"^1Z",[["^ ","^1U",89,"^1V",123,"^M","markup-db"]]],"^2K",["^ ","~i0",[["^ ","^1U",0,"^1V",125],["^ ","^1U",56,"^1V",125],["^ ","^1U",0,"^1V",126]],"~i6",[["^ ","^1U",0,"^1V",125,"^M","devtools.formatters.printing/already-reference?"]],"^2C",[["^ ","^1U",120,"^1V",125,"^M","group"]]],"^2L",["^ ","~i2",[["^ ","^1U",0,"^1V",126],["^ ","^1U",4,"^1V",126,"^M","temp__5455__auto__"],["^ ","^1U",0,"^1V",127],["^ ","^1U",0,"^1V",127],["^ ","^1U",20,"^1V",127,"^M","temp__5455__auto__"],["^ ","^1U",0,"^1V",128],["^ ","^1U",10,"^1V",128,"^M","temp__5455__auto__"],["^ ","^1U",0,"^1V",129],["^ ","^1U",0,"^1V",131]],"^25",[["^ ","^1U",4,"^1V",128,"^M","tag"]],"^1W",[["^ ","^1U",25,"^1V",126]],"^1[",[["^ ","^1U",25,"^1V",126,"^M","cljs.core/first"]],"^1Z",[["^ ","^1U",41,"^1V",126]],"^2<",[["^ ","^1U",41,"^1V",126,"^M","cljs.core/first"]],"^2;",[["^ ","^1U",57,"^1V",126,"^M","group"]]],"~i45",["^ ","~i4",[["^ ","^1U",0,"^1V",129],["^ ","^1U",56,"^1V",129]],"~i5",[["^ ","^1U",7,"^1V",129,"^M","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i7",[["^ ","^1U",52,"^1V",129,"^M","tag"]]],"^2B",["^ ","~i0",[["^ ","^1U",0,"^1V",134],["^ ","^1U",65,"^1V",134],["^ ","^1U",0,"^1V",135]],"~i6",[["^ ","^1U",0,"^1V",134,"^M","devtools.formatters.printing/wrap-group-in-reference-if-needed"]],"^2=",[["^ ","^1U",138,"^1V",134,"^M","group"]],"^2B",[["^ ","^1U",144,"^1V",134,"^M","obj"]],"^2>",[["^ ","^1U",148,"^1V",134,"^M","markup-db"]]],"~i48",["^ ","~i2",[["^ ","^1U",0,"^1V",135]],"~i6",[["^ ","^1U",20,"^1V",135],["^ ","^1U",37,"^1V",135,"^M","and__3911__auto__"],["^ ","^1U",0,"^1V",136],["^ ","^1U",0,"^1V",136],["^ ","^1U",3,"^1V",136,"^M","and__3911__auto__"],["^ ","^1U",0,"^1V",144,"^M","and__3911__auto__"]],"^25",[["^ ","^1U",57,"^1V",135]],"^1T",[["^ ","^1U",57,"^1V",135,"^M","cljs.core/not"]],"^1[",[["^ ","^1U",71,"^1V",135]],"^2I",[["^ ","^1U",71,"^1V",135,"^M","devtools.formatters.printing/already-reference?"]],"^2J",[["^ ","^1U",125,"^1V",135,"^M","group"]]],"^2D",["^ ","^25",[["^ ","^1U",0,"^1V",137],["^ ","^1U",4,"^1V",137,"^M","or__3922__auto__"],["^ ","^1U",0,"^1V",138],["^ ","^1U",0,"^1V",138],["^ ","^1U",20,"^1V",138,"^M","or__3922__auto__"],["^ ","^1U",0,"^1V",139,"^M","or__3922__auto__"]],"^1W",[["^ ","^1U",23,"^1V",137]],"^1[",[["^ ","^1U",23,"^1V",137,"^M","devtools.formatters.helpers/expandable?"]],"^2G",[["^ ","^1U",69,"^1V",137,"^M","obj"]],"^2H",[["^ ","^1U",0,"^1V",141]],"~i34",[["^ ","^1U",7,"^1V",141,"^M","devtools.formatters.helpers/abbreviated?"]],"^2B",[["^ ","^1U",54,"^1V",141,"^M","group"]]],"~i50",["^ ","~i4",[["^ ","^1U",0,"^1V",147],["^ ","^1U",0,"^1V",150],["^ ","^1U",0,"^1V",150]],"^24",[["^ ","^1U",4,"^1V",147,"^M","expandable-markup"]],"^2G",[["^ ","^1U",24,"^1V",147],["^ ","^1U",122,"^1V",147]],"^2;",[["^ ","^1U",24,"^1V",147,"^M","cljs.core.apply.cljs$core$IFn$_invoke$arity$4"]],"^2E",[["^ ","^1U",70,"^1V",147,"^M","devtools.formatters.printing/build-markup"]],"^2P",[["^ ","^1U",112,"^1V",147,"^M","markup-db"]],"~i70",[["^ ","^1U",187,"^1V",147,"^M","group"]]],"^2>",["^ ","^24",[["^ ","^1U",4,"^1V",148,"^M","surrogate-markup"]],"^2:",[["^ ","^1U",23,"^1V",148],["^ ","^1U",112,"^1V",148],["^ ","^1U",254,"^1V",148]],"^2G",[["^ ","^1U",23,"^1V",148,"^M","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^2=",[["^ ","^1U",102,"^1V",148,"^M","markup-db"]],"~i66",[["^ ","^1U",232,"^1V",148,"^M","obj"]],"^2S",[["^ ","^1U",236,"^1V",148,"^M","expandable-markup"]]],"~i52",["^ ","^24",[["^ ","^1U",4,"^1V",149,"^M","reference-markup"]],"^2:",[["^ ","^1U",23,"^1V",149],["^ ","^1U",112,"^1V",149]],"^2G",[["^ ","^1U",23,"^1V",149,"^M","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^2=",[["^ ","^1U",102,"^1V",149,"^M","markup-db"]],"~i62",[["^ ","^1U",226,"^1V",149,"^M","surrogate-markup"]]],"~i53",["^ ","~i7",[["^ ","^1U",90,"^1V",150,"^M","reference-markup"]]],"~i54",["^ ","~i4",[["^ ","^1U",0,"^1V",152,"^M","group"]]],"~i56",["^ ","~i0",[["^ ","^1U",0,"^1V",155],["^ ","^1U",72,"^1V",155],["^ ","^1U",0,"^1V",156]],"~i6",[["^ ","^1U",0,"^1V",155,"^M","devtools.formatters.printing/wrap-group-in-circular-warning-if-needed"]],"^2P",[["^ ","^1U",152,"^1V",155,"^M","group"]],"^2X",[["^ ","^1U",158,"^1V",155,"^M","markup-db"]],"~i64",[["^ ","^1U",168,"^1V",155,"^M","circular?"]]],"~i57",["^ ","~i2",[["^ ","^1U",0,"^1V",156],["^ ","^1U",0,"^1V",157]],"~i6",[["^ ","^1U",20,"^1V",156,"^M","circular?"]]],"^28",["^ ","~i5",[["^ ","^1U",90,"^1V",157],["^ ","^1U",188,"^1V",157]],"~i6",[["^ ","^1U",90,"^1V",157,"^M","cljs.core.apply.cljs$core$IFn$_invoke$arity$4"]],"^1T",[["^ ","^1U",136,"^1V",157,"^M","devtools.formatters.printing/build-markup"]],"^26",[["^ ","^1U",178,"^1V",157,"^M","markup-db"]],"~i55",[["^ ","^1U",268,"^1V",157,"^M","group"]]],"~i59",["^ ","~i4",[["^ ","^1U",0,"^1V",159,"^M","group"]]],"~i61",["^ ","~i0",[["^ ","^1U",0,"^1V",162],["^ ","^1U",60,"^1V",162],["^ ","^1U",0,"^1V",163]],"~i6",[["^ ","^1U",0,"^1V",162,"^M","devtools.formatters.printing/wrap-group-in-meta-if-needed"]],"^2J",[["^ ","^1U",128,"^1V",162,"^M","group"]],"~i42",[["^ ","^1U",134,"^1V",162,"^M","value"]],"^2P",[["^ ","^1U",140,"^1V",162,"^M","markup-db"]]],"^2V",["^ ","~i2",[["^ ","^1U",0,"^1V",163],["^ ","^1U",0,"^1V",166]],"~i6",[["^ ","^1U",20,"^1V",163],["^ ","^1U",69,"^1V",163],["^ ","^1U",144,"^1V",163],["^ ","^1U",155,"^1V",163,"^M","p1__28574#"],["^ ","^1U",0,"^1V",164]],"~i7",[["^ ","^1U",20,"^1V",163,"^M","devtools.formatters.helpers/should-render?"]],"^2J",[["^ ","^1U",138,"^1V",163,"^M","value"]],"^2K",[["^ ","^1U",0,"^1V",164],["^ ","^1U",9,"^1V",164],["^ ","^1U",46,"^1V",164]],"^2R",[["^ ","^1U",10,"^1V",164],["^ ","^1U",25,"^1V",164,"^M","p1__28574#"]],"^2>",[["^ ","^1U",10,"^1V",164,"^M","cljs.core/meta"]]],"~i63",["^ ","~i5",[["^ ","^1U",90,"^1V",166]],"~i6",[["^ ","^1U",90,"^1V",166,"^M","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"^1T",[["^ ","^1U",136,"^1V",166]],"^1X",[["^ ","^1U",136,"^1V",166,"^M","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"]],"^29",[["^ ","^1U",184,"^1V",166],["^ ","^1U",184,"^1V",166]],"^2J",[["^ ","^1U",284,"^1V",166,"^M","markup-db"]],"^2B",[["^ ","^1U",295,"^1V",166]],"^2P",[["^ ","^1U",295,"^1V",166,"^M","cljs.core/meta"]],"^2W",[["^ ","^1U",310,"^1V",166,"^M","value"]],"^32",[["^ ","^1U",318,"^1V",166,"^M","group"]]],"^2Z",["^ ","~i4",[["^ ","^1U",0,"^1V",168,"^M","group"]]],"~i77",["^ ","~i0",[["^ ","^1U",0,"^1V",171],["^ ","^1U",61,"^1V",171],["^ ","^1U",0,"^1V",172]],"~i6",[["^ ","^1U",0,"^1V",171,"^M","devtools.formatters.printing/detect-edge-case-and-patch-it"]],"~i37",[["^ ","^1U",130,"^1V",171,"^M","group"]],"^2K",[["^ ","^1U",136,"^1V",171,"^M","obj"]],"^2B",[["^ ","^1U",140,"^1V",171,"^M","markup-db"]]],"^2M",["^ ","~i2",[["^ ","^1U",0,"^1V",172],["^ ","^1U",0,"^1V",173],["^ ","^1U",0,"^1V",175],["^ ","^1U",0,"^1V",176],["^ ","^1U",0,"^1V",178]]],"~i79",["^ ","~i4",[["^ ","^1U",3,"^1V",172]]],"~i80",["^ ","~i6",[["^ ","^1U",5,"^1V",172]],"^25",[["^ ","^1U",7,"^1V",172],["^ ","^1U",75,"^1V",172]],"^1T",[["^ ","^1U",7,"^1V",172,"^M","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^27",[["^ ","^1U",52,"^1V",172]],"^1W",[["^ ","^1U",52,"^1V",172,"^M","cljs.core/count"]],"^29",[["^ ","^1U",68,"^1V",172,"^M","group"]],"^2@",[["^ ","^1U",85,"^1V",172],["^ ","^1U",185,"^1V",172]],"^2F",[["^ ","^1U",85,"^1V",172,"^M","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2Q",[["^ ","^1U",130,"^1V",172],["^ ","^1U",180,"^1V",172]],"^2E",[["^ ","^1U",130,"^1V",172,"^M","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^22",[["^ ","^1U",174,"^1V",172,"^M","group"]],"~i60",[["^ ","^1U",202,"^1V",172],["^ ","^1U",302,"^1V",172]],"^32",[["^ ","^1U",202,"^1V",172,"^M","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^34",[["^ ","^1U",247,"^1V",172],["^ ","^1U",297,"^1V",172]],"^2Z",[["^ ","^1U",247,"^1V",172,"^M","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"~i68",[["^ ","^1U",291,"^1V",172,"^M","group"]]],"~i81",["^ ","~i6",[["^ ","^1U",316,"^1V",172]],"^25",[["^ ","^1U",318,"^1V",172],["^ ","^1U",386,"^1V",172]],"^1T",[["^ ","^1U",318,"^1V",172,"^M","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^27",[["^ ","^1U",363,"^1V",172]],"^1W",[["^ ","^1U",363,"^1V",172,"^M","cljs.core/count"]],"^29",[["^ ","^1U",379,"^1V",172,"^M","group"]],"^2@",[["^ ","^1U",396,"^1V",172],["^ ","^1U",496,"^1V",172]],"^2F",[["^ ","^1U",396,"^1V",172,"^M","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2Q",[["^ ","^1U",441,"^1V",172],["^ ","^1U",491,"^1V",172]],"^2E",[["^ ","^1U",441,"^1V",172,"^M","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^22",[["^ ","^1U",485,"^1V",172,"^M","group"]],"^39",[["^ ","^1U",513,"^1V",172],["^ ","^1U",613,"^1V",172]],"^32",[["^ ","^1U",513,"^1V",172,"^M","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^34",[["^ ","^1U",558,"^1V",172],["^ ","^1U",608,"^1V",172]],"^2Z",[["^ ","^1U",558,"^1V",172,"^M","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^3:",[["^ ","^1U",602,"^1V",172,"^M","group"]]],"~i82",["^ ","~i6",[["^ ","^1U",625,"^1V",172]],"^25",[["^ ","^1U",627,"^1V",172],["^ ","^1U",695,"^1V",172]],"^1T",[["^ ","^1U",627,"^1V",172,"^M","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^27",[["^ ","^1U",672,"^1V",172]],"^1W",[["^ ","^1U",672,"^1V",172,"^M","cljs.core/count"]],"^29",[["^ ","^1U",688,"^1V",172,"^M","group"]],"^2@",[["^ ","^1U",705,"^1V",172],["^ ","^1U",805,"^1V",172]],"^2F",[["^ ","^1U",705,"^1V",172,"^M","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2Q",[["^ ","^1U",750,"^1V",172],["^ ","^1U",800,"^1V",172]],"^2E",[["^ ","^1U",750,"^1V",172,"^M","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^22",[["^ ","^1U",794,"^1V",172,"^M","group"]],"^39",[["^ ","^1U",822,"^1V",172],["^ ","^1U",922,"^1V",172]],"^32",[["^ ","^1U",822,"^1V",172,"^M","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^34",[["^ ","^1U",867,"^1V",172],["^ ","^1U",917,"^1V",172]],"^2Z",[["^ ","^1U",867,"^1V",172,"^M","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^3:",[["^ ","^1U",911,"^1V",172,"^M","group"]]],"~i83",["^ ","~i5",[["^ ","^1U",90,"^1V",173],["^ ","^1U",179,"^1V",173]],"~i6",[["^ ","^1U",90,"^1V",173,"^M","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^23",[["^ ","^1U",169,"^1V",173,"^M","markup-db"]],"^2B",[["^ ","^1U",307,"^1V",173,"^M","obj"]]],"~i85",["^ ","~i4",[["^ ","^1U",3,"^1V",175]],"~i9",[["^ ","^1U",5,"^1V",175],["^ ","^1U",73,"^1V",175]],"^24",[["^ ","^1U",5,"^1V",175,"^M","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1T",[["^ ","^1U",50,"^1V",175]],"^1X",[["^ ","^1U",50,"^1V",175,"^M","cljs.core/count"]],"^23",[["^ ","^1U",66,"^1V",175,"^M","group"]],"^2;",[["^ ","^1U",83,"^1V",175],["^ ","^1U",183,"^1V",175]],"^21",[["^ ","^1U",83,"^1V",175,"^M","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2F",[["^ ","^1U",128,"^1V",175],["^ ","^1U",178,"^1V",175]],"^2H",[["^ ","^1U",128,"^1V",175,"^M","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^36",[["^ ","^1U",172,"^1V",175,"^M","group"]],"^2U",[["^ ","^1U",194,"^1V",175]],"^2W",[["^ ","^1U",194,"^1V",175,"^M","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^30",[["^ ","^1U",239,"^1V",175]],"^39",[["^ ","^1U",284,"^1V",175,"^M","obj"]],"~i65",[["^ ","^1U",299,"^1V",175],["^ ","^1U",349,"^1V",175]],"^2T",[["^ ","^1U",299,"^1V",175,"^M","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^2S",[["^ ","^1U",343,"^1V",175,"^M","group"]],"^38",[["^ ","^1U",360,"^1V",175],["^ ","^1U",460,"^1V",175]],"^3;",[["^ ","^1U",360,"^1V",175,"^M","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^3=",[["^ ","^1U",405,"^1V",175],["^ ","^1U",455,"^1V",175]],"~i84",[["^ ","^1U",405,"^1V",175,"^M","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^2N",[["^ ","^1U",449,"^1V",175,"^M","group"]]],"~i86",["^ ","~i5",[["^ ","^1U",90,"^1V",176],["^ ","^1U",140,"^1V",176]],"~i6",[["^ ","^1U",90,"^1V",176,"^M","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^24",[["^ ","^1U",134,"^1V",176,"^M","group"]],"^23",[["^ ","^1U",145,"^1V",176],["^ ","^1U",187,"^1V",176]],"^20",[["^ ","^1U",145,"^1V",176,"^M","devtools.formatters.printing/build-markup"]],"^2>",[["^ ","^1U",265,"^1V",176,"^M","obj"]],"^2Y",[["^ ","^1U",270,"^1V",176],["^ ","^1U",320,"^1V",176]],"^2[",[["^ ","^1U",270,"^1V",176,"^M","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^32",[["^ ","^1U",314,"^1V",176,"^M","group"]]],"^2N",["^ ","^24",[["^ ","^1U",0,"^1V",178,"^M","group"]]],"~i90",["^ ","~i0",[["^ ","^1U",0,"^1V",183],["^ ","^1U",59,"^1V",183],["^ ","^1U",0,"^1V",184]],"~i6",[["^ ","^1U",0,"^1V",183,"^M","devtools.formatters.printing/post-process-printed-output"]],"^2E",[["^ ","^1U",126,"^1V",183,"^M","output-group"]],"^2P",[["^ ","^1U",139,"^1V",183,"^M","obj"]],"^2U",[["^ ","^1U",143,"^1V",183,"^M","markup-db"]],"^2V",[["^ ","^1U",153,"^1V",183,"^M","circular?"]]],"~i91",["^ ","~i6",[["^ ","^1U",257,"^1V",184,"^M","output-group"]]],"~i92",["^ ","~i6",[["^ ","^1U",198,"^1V",184]],"~i7",[["^ ","^1U",198,"^1V",184,"^M","devtools.formatters.printing/detect-edge-case-and-patch-it"]],"^36",[["^ ","^1U",270,"^1V",184,"^M","obj"]],"^2=",[["^ ","^1U",274,"^1V",184,"^M","markup-db"]]],"~i93",["^ ","~i6",[["^ ","^1U",135,"^1V",184]],"~i7",[["^ ","^1U",135,"^1V",184,"^M","devtools.formatters.printing/wrap-group-in-reference-if-needed"]],"^2=",[["^ ","^1U",285,"^1V",184,"^M","obj"]],"^2O",[["^ ","^1U",289,"^1V",184,"^M","markup-db"]]],"~i94",["^ ","~i6",[["^ ","^1U",65,"^1V",184]],"~i7",[["^ ","^1U",65,"^1V",184,"^M","devtools.formatters.printing/wrap-group-in-circular-warning-if-needed"]],"^2P",[["^ ","^1U",300,"^1V",184,"^M","markup-db"]],"^28",[["^ ","^1U",310,"^1V",184,"^M","circular?"]]],"~i95",["^ ","~i6",[["^ ","^1U",0,"^1V",184]],"~i7",[["^ ","^1U",7,"^1V",184,"^M","devtools.formatters.printing/wrap-group-in-meta-if-needed"]],"^2J",[["^ ","^1U",327,"^1V",184,"^M","obj"]],"~i40",[["^ ","^1U",331,"^1V",184,"^M","markup-db"]]],"~i99",["^ ","~i0",[["^ ","^1U",0,"^1V",186],["^ ","^1U",47,"^1V",186],["^ ","^1U",0,"^1V",187]],"~i6",[["^ ","^1U",0,"^1V",186,"^M","devtools.formatters.printing/alt-printer-job"]],"^2<",[["^ ","^1U",102,"^1V",186,"^M","obj"]],"^2:",[["^ ","^1U",106,"^1V",186,"^M","writer"]],"^2Q",[["^ ","^1U",113,"^1V",186,"^M","opts"]]],"~i100",["^ ","~i2",[["^ ","^1U",0,"^1V",187],["^ ","^1U",4,"^1V",187,"^M","map__28581"],["^ ","^1U",4,"^1V",188,"^M","map__28581"],["^ ","^1U",21,"^1V",188],["^ ","^1U",23,"^1V",188],["^ ","^1U",25,"^1V",188],["^ ","^1U",27,"^1V",188],["^ ","^1U",28,"^1V",188,"^M","map__28581"],["^ ","^1U",42,"^1V",188],["^ ","^1U",50,"^1V",188],["^ ","^1U",52,"^1V",188],["^ ","^1U",54,"^1V",188],["^ ","^1U",55,"^1V",188],["^ ","^1U",55,"^1V",188,"^M","map__28581"],["^ ","^1U",104,"^1V",188],["^ ","^1U",115,"^1V",188],["^ ","^1U",116,"^1V",188,"^M","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1U",148,"^1V",188],["^ ","^1U",148,"^1V",188,"^M","map__28581"],["^ ","^1U",179,"^1V",188],["^ ","^1U",184,"^1V",188],["^ ","^1U",191,"^1V",188],["^ ","^1U",199,"^1V",188],["^ ","^1U",199,"^1V",188,"^M","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1U",245,"^1V",188,"^M","cljs.core/hash-map"],["^ ","^1U",264,"^1V",188,"^M","map__28581"],["^ ","^1U",276,"^1V",188,"^M","map__28581"],["^ ","^1U",16,"^1V",189],["^ ","^1U",16,"^1V",189,"^M","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1U",60,"^1V",189,"^M","map__28581"],["^ ","^1U",75,"^1V",189],["^ ","^1U",0,"^1V",190]],"^1[",[["^ ","^1U",4,"^1V",189,"^M","markup-db"]],"^2G",[["^ ","^1U",17,"^1V",187,"^M","opts"]]],"~i101",["^ ","~i4",[["^ ","^1U",0,"^1V",190]],"~i8",[["^ ","^1U",20,"^1V",190],["^ ","^1U",37,"^1V",190,"^M","or__3922__auto__"],["^ ","^1U",0,"^1V",206],["^ ","^1U",0,"^1V",206],["^ ","^1U",20,"^1V",206,"^M","or__3922__auto__"],["^ ","^1U",0,"^1V",207,"^M","or__3922__auto__"]],"^1T",[["^ ","^1U",56,"^1V",190],["^ ","^1U",73,"^1V",190],["^ ","^1U",73,"^1V",190],["^ ","^1U",76,"^1V",190],["^ ","^1U",78,"^1V",190],["^ ","^1U",86,"^1V",190],["^ ","^1U",0,"^1V",191],["^ ","^1U",3,"^1V",191],["^ ","^1U",5,"^1V",191],["^ ","^1U",16,"^1V",191],["^ ","^1U",17,"^1V",191,"^M","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1U",49,"^1V",191],["^ ","^1U",0,"^1V",192],["^ ","^1U",0,"^1V",194],["^ ","^1U",3,"^1V",194],["^ ","^1U",5,"^1V",194],["^ ","^1U",0,"^1V",195],["^ ","^1U",7,"^1V",195,"^M","cljs.core/native-satisfies?"],["^ ","^1U",0,"^1V",197],["^ ","^1U",0,"^1V",201],["^ ","^1U",7,"^1V",201,"^M","cljs.core/native-satisfies?"],["^ ","^1U",16,"^1V",203],["^ ","^1U",20,"^1V",203,"^M","_e__27196__auto__"],["^ ","^1U",40,"^1V",203,"^M","e28585"],["^ ","^1U",0,"^1V",204],["^ ","^1U",0,"^1V",204]],"^3H",[["^ ","^1U",41,"^1V",195,"^M","devtools.format/IDevtoolsFormat"],["^ ","^1U",41,"^1V",201,"^M","devtools.format/IDevtoolsFormat"]],"^2Y",[["^ ","^1U",79,"^1V",190,"^M","obj"],["^ ","^1U",49,"^1V",191,"^M","obj"],["^ ","^1U",5,"^1V",194,"^M","obj"],["^ ","^1U",73,"^1V",195,"^M","obj"],["^ ","^1U",73,"^1V",201,"^M","obj"]]],"~i102",["^ ","^1T",[["^ ","^1U",0,"^1V",209],["^ ","^1U",4,"^1V",209],["^ ","^1U",4,"^1V",209],["^ ","^1U",7,"^1V",209],["^ ","^1U",9,"^1V",209],["^ ","^1U",17,"^1V",209],["^ ","^1U",0,"^1V",210],["^ ","^1U",3,"^1V",210],["^ ","^1U",5,"^1V",210],["^ ","^1U",16,"^1V",210],["^ ","^1U",17,"^1V",210,"^M","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1U",49,"^1V",210],["^ ","^1U",0,"^1V",211],["^ ","^1U",0,"^1V",213],["^ ","^1U",3,"^1V",213],["^ ","^1U",5,"^1V",213],["^ ","^1U",0,"^1V",214],["^ ","^1U",7,"^1V",214,"^M","cljs.core/native-satisfies?"],["^ ","^1U",0,"^1V",216],["^ ","^1U",0,"^1V",220],["^ ","^1U",7,"^1V",220,"^M","cljs.core/native-satisfies?"],["^ ","^1U",16,"^1V",222],["^ ","^1U",20,"^1V",222,"^M","_e__27196__auto__"],["^ ","^1U",40,"^1V",222,"^M","e28587"],["^ ","^1U",0,"^1V",223],["^ ","^1U",0,"^1V",223]],"^3H",[["^ ","^1U",41,"^1V",214,"^M","devtools.protocols/IFormat"],["^ ","^1U",41,"^1V",220,"^M","devtools.protocols/IFormat"]],"^2P",[["^ ","^1U",10,"^1V",209,"^M","obj"],["^ ","^1U",49,"^1V",210,"^M","obj"],["^ ","^1U",5,"^1V",213,"^M","obj"],["^ ","^1U",68,"^1V",214,"^M","obj"],["^ ","^1U",68,"^1V",220,"^M","obj"]]],"~i103",["^ ","~i6",[["^ ","^1U",0,"^1V",226]],"~i7",[["^ ","^1U",7,"^1V",226,"^M","cljs.core/-write"]],"^27",[["^ ","^1U",24,"^1V",226,"^M","writer"]],"^29",[["^ ","^1U",31,"^1V",226],["^ ","^1U",120,"^1V",226]],"^1Z",[["^ ","^1U",31,"^1V",226,"^M","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^2E",[["^ ","^1U",110,"^1V",226,"^M","markup-db"]],"^2Y",[["^ ","^1U",234,"^1V",226,"^M","obj"]]],"~i104",["^ ","~i6",[["^ ","^1U",0,"^1V",228],["^ ","^1U",4,"^1V",228,"^M","temp__5455__auto__"],["^ ","^1U",0,"^1V",229],["^ ","^1U",0,"^1V",229],["^ ","^1U",20,"^1V",229,"^M","temp__5455__auto__"],["^ ","^1U",0,"^1V",230],["^ ","^1U",20,"^1V",230,"^M","temp__5455__auto__"],["^ ","^1U",0,"^1V",231]],"^1W",[["^ ","^1U",4,"^1V",230,"^M","atomic-markup"]],"^2;",[["^ ","^1U",25,"^1V",228],["^ ","^1U",114,"^1V",228]],"^21",[["^ ","^1U",25,"^1V",228,"^M","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^2K",[["^ ","^1U",104,"^1V",228,"^M","markup-db"]],"^32",[["^ ","^1U",221,"^1V",228,"^M","obj"]]],"~i105",["^ ","~i8",[["^ ","^1U",0,"^1V",231]],"~i9",[["^ ","^1U",7,"^1V",231,"^M","cljs.core/-write"]],"^1[",[["^ ","^1U",24,"^1V",231,"^M","writer"]],"^2<",[["^ ","^1U",31,"^1V",231,"^M","atomic-markup"]]],"~i106",["^ ","~i8",[["^ ","^1U",0,"^1V",233],["^ ","^1U",0,"^1V",235]],"^27",[["^ ","^1U",4,"^1V",233,"^M","default-impl"]],"^2:",[["^ ","^1U",19,"^1V",233],["^ ","^1U",19,"^1V",233]],"^2K",[["^ ","^1U",121,"^1V",233,"^M","opts"]]],"~i108",["^ ","^27",[["^ ","^1U",4,"^1V",234,"^M","inner-opts"]],"^26",[["^ ","^1U",17,"^1V",234]],"^2;",[["^ ","^1U",19,"^1V",234],["^ ","^1U",98,"^1V",234]],"^21",[["^ ","^1U",19,"^1V",234,"^M","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2F",[["^ ","^1U",64,"^1V",234,"^M","cljs.core/*print-level*"]],"^2D",[["^ ","^1U",104,"^1V",234],["^ ","^1U",155,"^1V",234],["^ ","^1U",224,"^1V",234]],"^2R",[["^ ","^1U",104,"^1V",234,"^M","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2Y",[["^ ","^1U",150,"^1V",234,"^M","opts"]],"^2M",[["^ ","^1U",229,"^1V",234,"^M","opts"]]],"~i109",["^ ","^24",[["^ ","^1U",0,"^1V",235]],"^25",[["^ ","^1U",8,"^1V",235,"^M","default-impl"],["^ ","^1U",53,"^1V",235,"^M","default-impl"],["^ ","^1U",121,"^1V",235,"^M","default-impl"]],"^2?",[["^ ","^1U",96,"^1V",235,"^M","obj"],["^ ","^1U",144,"^1V",235,"^M","obj"]],"^2G",[["^ ","^1U",100,"^1V",235,"^M","writer"],["^ ","^1U",148,"^1V",235,"^M","writer"]],"^2E",[["^ ","^1U",107,"^1V",235,"^M","inner-opts"],["^ ","^1U",155,"^1V",235,"^M","inner-opts"]]],"~i111",["^ ","~i0",[["^ ","^1U",0,"^1V",239],["^ ","^1U",48,"^1V",239],["^ ","^1U",0,"^1V",240]],"~i6",[["^ ","^1U",0,"^1V",239,"^M","devtools.formatters.printing/alt-printer-impl"]],"^2?",[["^ ","^1U",104,"^1V",239,"^M","obj"]],"^2G",[["^ ","^1U",108,"^1V",239,"^M","writer"]],"^2E",[["^ ","^1U",115,"^1V",239,"^M","opts"]]],"~i112",["^ ","~i2",[["^ ","^1U",0,"^1V",240],["^ ","^1U",4,"^1V",240,"^M","*current-state*28589"],["^ ","^1U",0,"^1V",241],["^ ","^1U",0,"^1V",241],["^ ","^1U",0,"^1V",243],["^ ","^1U",4,"^1V",243],["^ ","^1U",10,"^1V",253],["^ ","^1U",10,"^1V",253],["^ ","^1U",64,"^1V",253,"^M","*current-state*28589"]],"^1T",[["^ ","^1U",37,"^1V",240,"^M","devtools.formatters.state/*current-state*"],["^ ","^1U",0,"^1V",241,"^M","devtools.formatters.state/*current-state*"],["^ ","^1U",10,"^1V",253,"^M","devtools.formatters.state/*current-state*"]],"^2G",[["^ ","^1U",54,"^1V",241]],"^2;",[["^ ","^1U",54,"^1V",241,"^M","devtools.formatters.state/get-current-state"]]],"~i113",["^ ","~i4",[["^ ","^1U",4,"^1V",243],["^ ","^1U",8,"^1V",243,"^M","map__28590"],["^ ","^1U",4,"^1V",244,"^M","map__28590"],["^ ","^1U",21,"^1V",244],["^ ","^1U",23,"^1V",244],["^ ","^1U",25,"^1V",244],["^ ","^1U",27,"^1V",244],["^ ","^1U",28,"^1V",244,"^M","map__28590"],["^ ","^1U",42,"^1V",244],["^ ","^1U",50,"^1V",244],["^ ","^1U",52,"^1V",244],["^ ","^1U",54,"^1V",244],["^ ","^1U",55,"^1V",244],["^ ","^1U",55,"^1V",244,"^M","map__28590"],["^ ","^1U",104,"^1V",244],["^ ","^1U",115,"^1V",244],["^ ","^1U",116,"^1V",244,"^M","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1U",148,"^1V",244],["^ ","^1U",148,"^1V",244,"^M","map__28590"],["^ ","^1U",179,"^1V",244],["^ ","^1U",184,"^1V",244],["^ ","^1U",191,"^1V",244],["^ ","^1U",199,"^1V",244],["^ ","^1U",199,"^1V",244,"^M","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1U",245,"^1V",244,"^M","cljs.core/hash-map"],["^ ","^1U",264,"^1V",244,"^M","map__28590"],["^ ","^1U",276,"^1V",244,"^M","map__28590"],["^ ","^1U",16,"^1V",245],["^ ","^1U",16,"^1V",245,"^M","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1U",60,"^1V",245,"^M","map__28590"],["^ ","^1U",75,"^1V",245],["^ ","^1U",0,"^1V",248]],"^1Y",[["^ ","^1U",4,"^1V",245,"^M","markup-db"]],"^21",[["^ ","^1U",21,"^1V",243,"^M","opts"]]],"~i114",["^ ","^24",[["^ ","^1U",4,"^1V",246,"^M","circular?"]],"^20",[["^ ","^1U",22,"^1V",246]],"^29",[["^ ","^1U",22,"^1V",246,"^M","devtools.formatters.state/is-circular?"]],"^2Q",[["^ ","^1U",67,"^1V",246,"^M","obj"]]],"~i115",["^ ","^24",[["^ ","^1U",4,"^1V",247,"^M","inner-writer"]],"^2<",[["^ ","^1U",19,"^1V",247]],"^2?",[["^ ","^1U",19,"^1V",247,"^M","devtools.formatters.printing/make-template-writer"]],"^2O",[["^ ","^1U",69,"^1V",247],["^ ","^1U",69,"^1V",247]],"^2[",[["^ ","^1U",161,"^1V",247,"^M","opts"]]],"~i116",["^ ","~i6",[["^ ","^1U",0,"^1V",248]],"~i7",[["^ ","^1U",0,"^1V",248,"^M","devtools.formatters.state/push-object-to-current-history!"]],"^22",[["^ ","^1U",63,"^1V",248,"^M","obj"]]],"~i117",["^ ","~i6",[["^ ","^1U",0,"^1V",250]],"~i7",[["^ ","^1U",0,"^1V",250,"^M","devtools.formatters.printing/alt-printer-job"]],"^2<",[["^ ","^1U",45,"^1V",250,"^M","obj"]],"^2:",[["^ ","^1U",49,"^1V",250,"^M","inner-writer"]],"^3H",[["^ ","^1U",62,"^1V",250,"^M","opts"]]],"~i118",["^ ","~i6",[["^ ","^1U",0,"^1V",252]],"^27",[["^ ","^1U",7,"^1V",252,"^M","writer"]],"^29",[["^ ","^1U",20,"^1V",252]],"^1Z",[["^ ","^1U",20,"^1V",252,"^M","devtools.formatters.printing/post-process-printed-output"]],"^2R",[["^ ","^1U",77,"^1V",252]],"^2V",[["^ ","^1U",77,"^1V",252,"^M","inner-writer"]],"~i76",[["^ ","^1U",102,"^1V",252,"^M","obj"]],"^38",[["^ ","^1U",106,"^1V",252,"^M","markup-db"]],"^3B",[["^ ","^1U",116,"^1V",252,"^M","circular?"]]],"~i122",["^ ","~i0",[["^ ","^1U",0,"^1V",255],["^ ","^1U",45,"^1V",255],["^ ","^1U",0,"^1V",256]],"~i6",[["^ ","^1U",0,"^1V",255,"^M","devtools.formatters.printing/managed-print"]],"^29",[["^ ","^1U",98,"^1V",255,"^M","tag"]],"^26",[["^ ","^1U",102,"^1V",255,"^M","markup-db"]],"^2E",[["^ ","^1U",112,"^1V",255,"^M","printer"]]],"~i123",["^ ","~i2",[["^ ","^1U",0,"^1V",256],["^ ","^1U",11,"^1V",257],["^ ","^1U",54,"^1V",257],["^ ","^1U",160,"^1V",257],["^ ","^1U",232,"^1V",257],["^ ","^1U",404,"^1V",257],["^ ","^1U",13,"^1V",258],["^ ","^1U",0,"^1V",260],["^ ","^1U",0,"^1V",263]],"~i8",[["^ ","^1U",4,"^1V",256,"^M","writer"]],"^1W",[["^ ","^1U",13,"^1V",256]],"^1[",[["^ ","^1U",13,"^1V",256,"^M","devtools.formatters.printing/make-template-writer"]],"^36",[["^ ","^1U",63,"^1V",256,"^M","markup-db"]]],"~i124",["^ ","~i8",[["^ ","^1U",4,"^1V",257,"^M","opts"]],"^2G",[["^ ","^1U",114,"^1V",257,"^M","devtools.formatters.printing/alt-printer-impl"]]],"~i125",["^ ","^2G",[["^ ","^1U",222,"^1V",257,"^M","markup-db"]]],"~i126",["^ ","^2G",[["^ ","^1U",301,"^1V",257],["^ ","^1U",321,"^1V",257]],"^2;",[["^ ","^1U",301,"^1V",257,"^M","devtools.prefs/pref"]]],"~i127",["^ ","^2G",[["^ ","^1U",470,"^1V",257],["^ ","^1U",490,"^1V",257]],"^2;",[["^ ","^1U",470,"^1V",257,"^M","devtools.prefs/pref"]]],"~i128",["^ ","~i8",[["^ ","^1U",4,"^1V",258,"^M","job-fn"]],"^1[",[["^ ","^1U",0,"^1V",260]],"^2I",[["^ ","^1U",8,"^1V",260,"^M","printer"],["^ ","^1U",48,"^1V",260,"^M","printer"],["^ ","^1U",101,"^1V",260,"^M","printer"]],"^26",[["^ ","^1U",86,"^1V",260,"^M","writer"],["^ ","^1U",119,"^1V",260,"^M","writer"]],"^2F",[["^ ","^1U",93,"^1V",260,"^M","opts"],["^ ","^1U",126,"^1V",260,"^M","opts"]]],"~i129",["^ ","~i4",[["^ ","^1U",0,"^1V",263],["^ ","^1U",4,"^1V",263,"^M","temp__5455__auto__"],["^ ","^1U",0,"^1V",264],["^ ","^1U",0,"^1V",264],["^ ","^1U",20,"^1V",264,"^M","temp__5455__auto__"],["^ ","^1U",0,"^1V",265],["^ ","^1U",32,"^1V",265,"^M","temp__5455__auto__"],["^ ","^1U",0,"^1V",266]],"^1X",[["^ ","^1U",4,"^1V",265,"^M","managed-print-level"]],"^2H",[["^ ","^1U",31,"^1V",263]],"^2Q",[["^ ","^1U",31,"^1V",263,"^M","devtools.formatters.state/get-managed-print-level"]]],"~i130",["^ ","~i6",[["^ ","^1U",0,"^1V",266],["^ ","^1U",4,"^1V",266,"^M","*print-level*28600"],["^ ","^1U",0,"^1V",267],["^ ","^1U",0,"^1V",267],["^ ","^1U",0,"^1V",269],["^ ","^1U",4,"^1V",269],["^ ","^1U",10,"^1V",276],["^ ","^1U",10,"^1V",276],["^ ","^1U",46,"^1V",276,"^M","*print-level*28600"]],"^1[",[["^ ","^1U",41,"^1V",266,"^M","cljs.core/*print-level*"],["^ ","^1U",0,"^1V",267,"^M","cljs.core/*print-level*"],["^ ","^1U",10,"^1V",276,"^M","cljs.core/*print-level*"]],"^21",[["^ ","^1U",36,"^1V",267,"^M","managed-print-level"]]],"~i131",["^ ","~i8",[["^ ","^1U",4,"^1V",269],["^ ","^1U",57,"^1V",269],["^ ","^1U",18,"^1V",270,"^M","p1__28599#"],["^ ","^1U",0,"^1V",271]],"~i9",[["^ ","^1U",4,"^1V",269,"^M","devtools.formatters.state/update-current-state!"]],"^2F",[["^ ","^1U",0,"^1V",271],["^ ","^1U",57,"^1V",271,"^M","p1__28599#"],["^ ","^1U",74,"^1V",271]],"^2H",[["^ ","^1U",7,"^1V",271,"^M","devtools.formatters.state/set-managed-print-level"]]],"~i132",["^ ","~i8",[["^ ","^1U",0,"^1V",275]],"~i9",[["^ ","^1U",0,"^1V",275,"^M","job-fn"]]],"~i133",["^ ","~i6",[["^ ","^1U",0,"^1V",278]],"~i7",[["^ ","^1U",0,"^1V",278,"^M","job-fn"]]],"~i134",["^ ","~i4",[["^ ","^1U",0,"^1V",281],["^ ","^1U",54,"^1V",281]],"~i5",[["^ ","^1U",7,"^1V",281,"^M","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"^1X",[["^ ","^1U",137,"^1V",281]],"^27",[["^ ","^1U",137,"^1V",281,"^M","devtools.prefs/pref"]],"^23",[["^ ","^1U",157,"^1V",281,"^M","tag"]],"^26",[["^ ","^1U",170,"^1V",281]],"^36",[["^ ","^1U",170,"^1V",281,"^M","writer"]]],"~i138",["^ ","~i0",[["^ ","^1U",0,"^1V",283],["^ ","^1U",56,"^1V",283],["^ ","^1U",0,"^1V",284]],"~i6",[["^ ","^1U",0,"^1V",283,"^M","devtools.formatters.printing/managed-print-via-writer"]],"^2F",[["^ ","^1U",120,"^1V",283,"^M","value"]],"^2A",[["^ ","^1U",126,"^1V",283,"^M","tag"]],"^33",[["^ ","^1U",130,"^1V",283,"^M","markup-db"]]],"~i139",["^ ","~i2",[["^ ","^1U",0,"^1V",284]],"~i3",[["^ ","^1U",7,"^1V",284,"^M","devtools.formatters.printing/managed-print"]],"^2I",[["^ ","^1U",50,"^1V",284,"^M","tag"]],"^29",[["^ ","^1U",54,"^1V",284,"^M","markup-db"]],"^2@",[["^ ","^1U",64,"^1V",284],["^ ","^1U",0,"^1V",285]],"^2J",[["^ ","^1U",75,"^1V",284,"^M","writer"]],"^2K",[["^ ","^1U",82,"^1V",284,"^M","opts"]]],"~i140",["^ ","^2H",[["^ ","^1U",0,"^1V",285],["^ ","^1U",31,"^1V",285]],"^2Q",[["^ ","^1U",7,"^1V",285,"^M","cljs.core/pr-seq-writer"]],"^2D",[["^ ","^1U",114,"^1V",285,"^M","value"]],"^2Y",[["^ ","^1U",128,"^1V",285,"^M","writer"]],"^34",[["^ ","^1U",135,"^1V",285,"^M","opts"]]],"~i142",["^ ","~i0",[["^ ","^1U",0,"^1V",288],["^ ","^1U",58,"^1V",288],["^ ","^1U",0,"^1V",289]],"~i6",[["^ ","^1U",0,"^1V",288,"^M","devtools.formatters.printing/managed-print-via-protocol"]],"^2Q",[["^ ","^1U",124,"^1V",288,"^M","value"]],"^3H",[["^ ","^1U",130,"^1V",288,"^M","tag"]],"^2L",[["^ ","^1U",134,"^1V",288,"^M","markup-db"]]],"~i143",["^ ","~i2",[["^ ","^1U",0,"^1V",289]],"~i3",[["^ ","^1U",7,"^1V",289,"^M","devtools.formatters.printing/managed-print"]],"^2I",[["^ ","^1U",50,"^1V",289,"^M","tag"]],"^29",[["^ ","^1U",54,"^1V",289,"^M","markup-db"]],"^2@",[["^ ","^1U",64,"^1V",289],["^ ","^1U",0,"^1V",290]],"^2J",[["^ ","^1U",75,"^1V",289,"^M","writer"]],"^2K",[["^ ","^1U",82,"^1V",289,"^M","opts"]]],"~i144",["^ ","^2H",[["^ ","^1U",0,"^1V",290]],"^2Q",[["^ ","^1U",7,"^1V",290,"^M","cljs.core/-pr-writer"]],"^2O",[["^ ","^1U",28,"^1V",290,"^M","value"]],"^2>",[["^ ","^1U",34,"^1V",290,"^M","writer"]],"^28",[["^ ","^1U",41,"^1V",290,"^M","opts"]]]],"~:cljc",false],"~:cache-keys",["~#cmap",[["~:macro","~$devtools.defaults"],[1513298911000],["^1L","devtools/formatters/printing.cljs"],[1513298911000,"^Y","^X","^S","^T","^U","^V","^W"],["^4F","^X"],[1535834828000],["^1L","devtools/formatters/helpers.cljs"],[1513298911000,"^Y","^X","^S","~$devtools.munging","^T","^U"],["^1L","goog/math/math.js"],[1505449243000,"^Y","~$goog.array","~$goog.asserts"],["^1L","goog/array/array.js"],[1505449243000,"^Y","^4J"],["^1L","goog/debug/error.js"],[1505449243000,"^Y"],["^1L","goog/dom/nodetype.js"],[1505449243000,"^Y"],["^1L","goog/object/object.js"],[1505449243000,"^Y"],"~:SHADOW-TIMESTAMP",[1535834828000,1535834828000],["^1L","goog/math/long.js"],[1505449243000,"^Y","^4J","~$goog.reflect"],["^1L","goog/functions/functions.js"],[1505449243000,"^Y"],["^1L","devtools/prefs.cljs"],[1513298911000,"^Y","^X","^4G"],["^1L","goog/structs/map.js"],[1505449243000,"^Y","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^4F","^J"],[1513298911000],["^1L","devtools/munging.cljs"],[1513298911000,"^Y","^X","~$clojure.string","~$devtools.context","^4O","~$goog.string.StringBuffer"],["^1L","goog/asserts/asserts.js"],[1505449243000,"^Y","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^1L","goog/uri/uri.js"],[1505449243000,"^Y","^4I","^4J","^4U","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1L","goog/base.js"],[1505449243000],["^1L","goog/structs/structs.js"],[1505449243000,"^Y","^4I","^4O"],["^1L","clojure/string.cljs"],[1535834828000,"^Y","^X","^4U","^4R"],["^1L","devtools/formatters/state.cljs"],[1513298911000,"^Y","^X"],["^1L","goog/string/string.js"],[1505449243000,"^Y"],["^4F","^4H"],[1513298911000],["^1L","goog/reflect/reflect.js"],[1505449243000,"^Y"],["^1L","goog/string/stringbuffer.js"],[1505449243000,"^Y"],["^1L","goog/iter/iter.js"],[1505449243000,"^Y","^4I","^4J","~$goog.functions","~$goog.math"],["^1L","devtools/defaults.cljs"],[1513298911000,"^Y","^X"],["^4F","^S"],[1513298911000],["^1L","cljs/core.cljs"],[1535834828000,"~$goog.math.Long","~$goog.math.Integer","^4U","^4O","^4I","~$goog.Uri","^4R"],["^1L","devtools/context.cljs"],[1513298911000,"^Y","^X"],["^1L","goog/math/integer.js"],[1505449243000,"^Y"],["^1L","devtools/format.cljs"],[1513298911000,"^Y","^X","^4Q"],["^1L","goog/uri/utils.js"],[1505449243000,"^Y","^4I","^4J","^4U"],["^1L","devtools/protocols.cljs"],[1513298911000,"^Y","^X"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",1,"^8",5,"^9",1,"^:",33],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",["^ ","^I","^J"],"^K",["^L",[]],"~:shadow/js-access-properties",["^L",["get-group","merge"]],"^M","^N","^Q",null,"^R",["^ ","^S","^S","^T","^T","^U","^U","^V","^V","^W","^W","^X","^X","^Y","^Y"],"^Z",["^L",["^[","^10"]],"~:shadow/js-access-global",["^L",["Error"]],"^11",["^ ","^12","^U","^13","^W","^14","^U","^15","^T","^16","^V","^17","^V","^18","^U","^19","^W","^1:","^V","^1;","^W","^1<","^S","^1=","^V","^1>","^V","^1?","^W","^1@","^U","^1A","^V","^1B","^W","^1C","^V"],"~:defs",["^ ","~$->TemplateWriter",["^ ","~:protocol-inline",null,"^5",["^ ","~:protocols",["^L",["~$cljs.core/IWriter","~$cljs.core/Object"]],"^6","devtools/formatters/printing.cljs","^:",24,"^8",10,"~:factory","~:positional","^7",31,"^9",31,"~:arglists",["^1E",["~$quote",["^1E",[["~$group","~$markup-db"]]]]],"~:skip-protocol-flag",["^L",["^5;"]],"~:doc","Positional factory function for devtools.formatters.printing/TemplateWriter."],"^5:",["^L",["^5;","^5<"]],"^M","~$devtools.formatters.printing/->TemplateWriter","~:variadic",false,"^6","devtools/formatters/printing.cljs","^:",24,"~:method-params",["^1E",[["^5A","^5B"]]],"~:protocol-impl",null,"~:arglists-meta",["^1E",[null,null]],"^8",1,"^5=","^5>","^7",31,"^9",31,"~:max-fixed-arity",2,"~:fn-var",true,"^5?",["^1E",["^5@",["^1E",[["^5A","^5B"]]]]],"^5C",["^L",["^5;"]],"^5D","Positional factory function for devtools.formatters.printing/TemplateWriter."],"~$alt-printer-impl",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",112,"^8",7,"^9",112,"^:",23,"^5?",["^1E",["^5@",["^1E",[["~$obj","~$writer","~$opts"]]]]]],"^M","~$devtools.formatters.printing/alt-printer-impl","^5F",false,"^6","devtools/formatters/printing.cljs","^:",23,"^5G",["^1E",[["^5M","^5N","^5O"]]],"^5H",null,"^5I",["^1E",[null,null]],"^8",1,"^7",112,"^9",112,"^5J",3,"^5K",true,"^5?",["^1E",["^5@",["^1E",[["^5M","^5N","^5O"]]]]]],"~$markup?",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",13,"^8",7,"^9",13,"^:",14,"^5?",["^1E",["^5@",["^1E",[["~$value"]]]]]],"^M","~$devtools.formatters.printing/markup?","^5F",false,"^6","devtools/formatters/printing.cljs","^:",14,"^5G",["^1E",[["^5R"]]],"^5H",null,"^5I",["^1E",[null,null]],"^8",1,"^7",13,"^9",13,"^5J",1,"^5K",true,"^5?",["^1E",["^5@",["^1E",[["^5R"]]]]]],"~$wrap-group-in-meta-if-needed",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",62,"^8",7,"^9",62,"^:",35,"^5?",["^1E",["^5@",["^1E",[["^5A","^5R","^5B"]]]]]],"^M","~$devtools.formatters.printing/wrap-group-in-meta-if-needed","^5F",false,"^6","devtools/formatters/printing.cljs","^:",35,"^5G",["^1E",[["^5A","^5R","^5B"]]],"^5H",null,"^5I",["^1E",[null,null]],"^8",1,"^7",62,"^9",62,"^5J",3,"^5K",true,"^5?",["^1E",["^5@",["^1E",[["^5A","^5R","^5B"]]]]]],"~$mark-as-markup",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",16,"^8",7,"^9",16,"^:",21,"^5?",["^1E",["^5@",["^1E",[["^5R"]]]]]],"^M","~$devtools.formatters.printing/mark-as-markup","^5F",false,"^6","devtools/formatters/printing.cljs","^:",21,"^5G",["^1E",[["^5R"]]],"^5H",null,"^5I",["^1E",[null,null]],"^8",1,"^7",16,"^9",16,"^5J",1,"^5K",true,"^5?",["^1E",["^5@",["^1E",[["^5R"]]]]]],"~$detect-edge-case-and-patch-it",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",78,"^8",7,"^9",78,"^:",36,"^5?",["^1E",["^5@",["^1E",[["^5A","^5M","^5B"]]]]]],"^M","~$devtools.formatters.printing/detect-edge-case-and-patch-it","^5F",false,"^6","devtools/formatters/printing.cljs","^:",36,"^5G",["^1E",[["^5A","^5M","^5B"]]],"^5H",null,"^5I",["^1E",[null,null]],"^8",1,"^7",78,"^9",78,"^5J",3,"^5K",true,"^5?",["^1E",["^5@",["^1E",[["^5A","^5M","^5B"]]]]]],"~$wrap-group-in-reference-if-needed",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",48,"^8",7,"^9",48,"^:",40,"^5?",["^1E",["^5@",["^1E",[["^5A","^5M","^5B"]]]]]],"^M","~$devtools.formatters.printing/wrap-group-in-reference-if-needed","^5F",false,"^6","devtools/formatters/printing.cljs","^:",40,"^5G",["^1E",[["^5A","^5M","^5B"]]],"^5H",null,"^5I",["^1E",[null,null]],"^8",1,"^7",48,"^9",48,"^5J",3,"^5K",true,"^5?",["^1E",["^5@",["^1E",[["^5A","^5M","^5B"]]]]]],"~$managed-print-via-writer",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",139,"^8",7,"^9",139,"^:",31,"^5?",["^1E",["^5@",["^1E",[["^5R","~$tag","^5B"]]]]]],"^M","~$devtools.formatters.printing/managed-print-via-writer","^5F",false,"^6","devtools/formatters/printing.cljs","^:",31,"^5G",["^1E",[["^5R","^61","^5B"]]],"^5H",null,"^5I",["^1E",[null,null]],"^8",1,"^7",139,"^9",139,"^5J",3,"^5K",true,"^5?",["^1E",["^5@",["^1E",[["^5R","^61","^5B"]]]]]],"~$already-reference?",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",44,"^8",7,"^9",44,"^:",25,"^5?",["^1E",["^5@",["^1E",[["^5A"]]]]]],"^M","~$devtools.formatters.printing/already-reference?","^5F",false,"^6","devtools/formatters/printing.cljs","^:",25,"^5G",["^1E",[["^5A"]]],"^5H",null,"^5I",["^1E",[null,null]],"^8",1,"^7",44,"^9",44,"^5J",1,"^5K",true,"^5?",["^1E",["^5@",["^1E",[["^5A"]]]]]],"~$TemplateWriter",["^ ","^M","~$devtools.formatters.printing/TemplateWriter","~:type",true,"~:tag","^66","~:num-fields",2,"~:record",false,"^6","devtools/formatters/printing.cljs","^7",31,"^8",10],"~$wrap-value-as-reference-if-needed",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",24,"^8",7,"^9",24,"^:",40,"^5?",["^1E",["^5@",["^1E",[["^5B","^5R"]]]]]],"^M","~$devtools.formatters.printing/wrap-value-as-reference-if-needed","^5F",false,"^6","devtools/formatters/printing.cljs","^:",40,"^5G",["^1E",[["^5B","^5R"]]],"^5H",null,"^5I",["^1E",[null,null]],"^8",1,"^7",24,"^9",24,"^5J",2,"^5K",true,"^5?",["^1E",["^5@",["^1E",[["^5B","^5R"]]]]]],"~$managed-print-via-protocol",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",143,"^8",7,"^9",143,"^:",33,"^5?",["^1E",["^5@",["^1E",[["^5R","^61","^5B"]]]]]],"^M","~$devtools.formatters.printing/managed-print-via-protocol","^5F",false,"^6","devtools/formatters/printing.cljs","^:",33,"^5G",["^1E",[["^5R","^61","^5B"]]],"^5H",null,"^5I",["^1E",[null,null]],"^8",1,"^7",143,"^9",143,"^5J",3,"^5K",true,"^5?",["^1E",["^5@",["^1E",[["^5R","^61","^5B"]]]]]],"~$alt-printer-job",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",100,"^8",7,"^9",100,"^:",22,"^5?",["^1E",["^5@",["^1E",[["^5M","^5N","^5O"]]]]]],"^M","~$devtools.formatters.printing/alt-printer-job","^5F",false,"^6","devtools/formatters/printing.cljs","^:",22,"^5G",["^1E",[["^5M","^5N","^5O"]]],"^5H",null,"^5I",["^1E",[null,null]],"^8",1,"^7",100,"^9",100,"^5J",3,"^5K",true,"^5?",["^1E",["^5@",["^1E",[["^5M","^5N","^5O"]]]]]],"~$make-template-writer",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",39,"^8",7,"^9",39,"^:",27,"^5?",["^1E",["^5@",["^1E",[["^5B"]]]]]],"^M","~$devtools.formatters.printing/make-template-writer","^5F",false,"^6","devtools/formatters/printing.cljs","^:",27,"^5G",["^1E",[["^5B"]]],"^5H",null,"^5I",["^1E",[null,null]],"^8",1,"^7",39,"^9",39,"^5J",1,"^5K",true,"^5?",["^1E",["^5@",["^1E",[["^5B"]]]]]],"~$wrap-group-in-circular-warning-if-needed",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",57,"^8",7,"^9",57,"^:",47,"^5?",["^1E",["^5@",["^1E",[["^5A","^5B","~$circular?"]]]]]],"^M","~$devtools.formatters.printing/wrap-group-in-circular-warning-if-needed","^5F",false,"^6","devtools/formatters/printing.cljs","^:",47,"^5G",["^1E",[["^5A","^5B","^6D"]]],"^5H",null,"^5I",["^1E",[null,null]],"^8",1,"^7",57,"^9",57,"^5J",3,"^5K",true,"^5?",["^1E",["^5@",["^1E",[["^5A","^5B","^6D"]]]]]],"~$managed-print",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",123,"^8",7,"^9",123,"^:",20,"^5?",["^1E",["^5@",["^1E",[["^61","^5B","~$printer"]]]]]],"^M","~$devtools.formatters.printing/managed-print","^5F",false,"^6","devtools/formatters/printing.cljs","^:",20,"^5G",["^1E",[["^61","^5B","^6G"]]],"^5H",null,"^5I",["^1E",[null,null]],"^8",1,"^7",123,"^9",123,"^5J",3,"^5K",true,"^5?",["^1E",["^5@",["^1E",[["^61","^5B","^6G"]]]]]],"~$build-markup",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",19,"^8",7,"^9",19,"^:",19,"^5?",["^1E",["^5@",["^1E",[["^5B","~$fn-key","~$&","~$args"]]]]],"~:top-fn",["^ ","^5F",true,"^5J",2,"^5G",[["^1E",["^5B","^6J","^6K"]]],"^5?",["^1E",[["^5B","^6J","~$&","^6K"]]],"^5I",["^1E",[null]]]],"^M","~$devtools.formatters.printing/build-markup","^5F",true,"^6","devtools/formatters/printing.cljs","^:",19,"^6L",["^ ","^5F",true,"^5J",2,"^5G",[["^1E",["^5B","^6J","^6K"]]],"^5?",["^1E",[["^5B","^6J","~$&","^6K"]]],"^5I",["^1E",[null]]],"^5G",[["^1E",["^5B","^6J","^6K"]]],"^5H",null,"^5I",["^1E",[null]],"^8",1,"^7",19,"^9",19,"^5J",2,"^5K",true,"^5?",["^1E",[["^5B","^6J","~$&","^6K"]]]],"~$post-process-printed-output",["^ ","^59",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",91,"^8",7,"^9",91,"^:",34,"^5?",["^1E",["^5@",["^1E",[["~$output-group","^5M","^5B","^6D"]]]]]],"^M","~$devtools.formatters.printing/post-process-printed-output","^5F",false,"^6","devtools/formatters/printing.cljs","^:",34,"^5G",["^1E",[["^6O","^5M","^5B","^6D"]]],"^5H",null,"^5I",["^1E",[null,null]],"^8",1,"^7",91,"^9",91,"^5J",4,"^5K",true,"^5?",["^1E",["^5@",["^1E",[["^6O","^5M","^5B","^6D"]]]]]]],"^10",["^ ","^J","^J","^X","^X","^S","^S"],"~:cljs.analyzer/constants",["^ ","^Z",["^L",["~:render-metas","~:else","~:max-header-elements","^5A","~:fallback-impl","~:meta-wrapper","~:raw-surrogate","~:native-reference","~:markup-db","~:reference-surrogate","~:more-marker","~:reference","~:print-length","^5B","~:circular-reference","~:expandable","~:target","~:mutable","~:alt-impl","~:atomic","~:devtools.formatters.printing/markup"]],"~:order",["^78","^6Z","^5A","^75","^5B","^73","^6W","^74","^70","^72","^6R","^6V","^6X","^6S","^6Y","^77","^6U","^71","^76","^6[","^6T"]],"^1H",["^ ","^10",["^L",[]],"^[",["^L",[]]],"^1I",["^ "],"^1J",["^Y","^X","^S","^T","^U","^V","^W"]],"^P","^N","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^4E",[["^7<","~:static-fns"],true,["^7<","~:elide-asserts"],false,["^7<","~:optimize-constants"],null,["^7<","~:external-config"],null,["^7<","~:tooling-config"],null,["^7<","~:emit-constants"],null,["^7<","~:infer-externs"],true,["^7<","^1Q"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7<","~:fn-invoke-direct"],null,["^7<","^1S"],"/dev/null"]]]