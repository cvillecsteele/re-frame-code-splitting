["^ ","~:output",["^ ","~:js","goog.provide('mranderson047.re_frame.v0v10v2.re_frame.core');\ngoog.require('cljs.core');\ngoog.require('mranderson047.re_frame.v0v10v2.re_frame.events');\ngoog.require('mranderson047.re_frame.v0v10v2.re_frame.subs');\ngoog.require('mranderson047.re_frame.v0v10v2.re_frame.interop');\ngoog.require('mranderson047.re_frame.v0v10v2.re_frame.db');\ngoog.require('mranderson047.re_frame.v0v10v2.re_frame.fx');\ngoog.require('mranderson047.re_frame.v0v10v2.re_frame.cofx');\ngoog.require('mranderson047.re_frame.v0v10v2.re_frame.router');\ngoog.require('mranderson047.re_frame.v0v10v2.re_frame.loggers');\ngoog.require('mranderson047.re_frame.v0v10v2.re_frame.registrar');\ngoog.require('mranderson047.re_frame.v0v10v2.re_frame.interceptor');\ngoog.require('mranderson047.re_frame.v0v10v2.re_frame.std_interceptors');\ngoog.require('clojure.set');\nmranderson047.re_frame.v0v10v2.re_frame.core.dispatch = mranderson047.re_frame.v0v10v2.re_frame.router.dispatch;\nmranderson047.re_frame.v0v10v2.re_frame.core.dispatch_sync = mranderson047.re_frame.v0v10v2.re_frame.router.dispatch_sync;\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_sub = mranderson047.re_frame.v0v10v2.re_frame.subs.reg_sub;\nmranderson047.re_frame.v0v10v2.re_frame.core.subscribe = mranderson047.re_frame.v0v10v2.re_frame.subs.subscribe;\nmranderson047.re_frame.v0v10v2.re_frame.core.clear_sub = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(mranderson047.re_frame.v0v10v2.re_frame.registrar.clear_handlers,mranderson047.re_frame.v0v10v2.re_frame.subs.kind);\nmranderson047.re_frame.v0v10v2.re_frame.core.clear_subscription_cache_BANG_ = mranderson047.re_frame.v0v10v2.re_frame.subs.clear_subscription_cache_BANG_;\n/**\n * This is a low level, advanced function.  You should probably be\n *   using reg-sub instead.\n *   Docs in https://github.com/Day8/re-frame/blob/master/docs/SubscriptionFlow.md\n */\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_sub_raw = (function mranderson047$re_frame$v0v10v2$re_frame$core$reg_sub_raw(query_id,handler_fn){\nreturn mranderson047.re_frame.v0v10v2.re_frame.registrar.register_handler(mranderson047.re_frame.v0v10v2.re_frame.subs.kind,query_id,handler_fn);\n});\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_fx = mranderson047.re_frame.v0v10v2.re_frame.fx.reg_fx;\nmranderson047.re_frame.v0v10v2.re_frame.core.clear_fx = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(mranderson047.re_frame.v0v10v2.re_frame.registrar.clear_handlers,mranderson047.re_frame.v0v10v2.re_frame.fx.kind);\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_cofx = mranderson047.re_frame.v0v10v2.re_frame.cofx.reg_cofx;\nmranderson047.re_frame.v0v10v2.re_frame.core.inject_cofx = mranderson047.re_frame.v0v10v2.re_frame.cofx.inject_cofx;\nmranderson047.re_frame.v0v10v2.re_frame.core.clear_cofx = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(mranderson047.re_frame.v0v10v2.re_frame.registrar.clear_handlers,mranderson047.re_frame.v0v10v2.re_frame.cofx.kind);\n/**\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\n *   an `interceptors` chain.\n *   `id` is typically a namespaced keyword  (but can be anything)\n *   `handler` is a function: (db event) -> db\n *   `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n *   `handler` is wrapped in its own interceptor and added to the end of the interceptor\n * chain, so that, in the end, only a chain is registered.\n * Special effects and coeffects interceptors are added to the front of this\n * chain.\n */\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_event_db = (function mranderson047$re_frame$v0v10v2$re_frame$core$reg_event_db(var_args){\nvar G__33374 = arguments.length;\nswitch (G__33374) {\ncase 2:\nreturn mranderson047.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn mranderson047.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\nreturn mranderson047.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3(id,null,handler);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\nreturn mranderson047.re_frame.v0v10v2.re_frame.events.register(id,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mranderson047.re_frame.v0v10v2.re_frame.cofx.inject_db,mranderson047.re_frame.v0v10v2.re_frame.fx.do_fx,interceptors,mranderson047.re_frame.v0v10v2.re_frame.std_interceptors.db_handler__GT_interceptor(handler)], null));\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$lang$maxFixedArity = 3;\n\n/**\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\n *   an `interceptors` chain.\n *   `id` is typically a namespaced keyword  (but can be anything)\n *   `handler` is a function: (coeffects-map event-vector) -> effects-map\n *   `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n *   `handler` is wrapped in its own interceptor and added to the end of the interceptor\n * chain, so that, in the end, only a chain is registered.\n * Special effects and coeffects interceptors are added to the front of the\n * interceptor chain.  These interceptors inject the value of app-db into coeffects,\n * and, later, action effects.\n */\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_event_fx = (function mranderson047$re_frame$v0v10v2$re_frame$core$reg_event_fx(var_args){\nvar G__33377 = arguments.length;\nswitch (G__33377) {\ncase 2:\nreturn mranderson047.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn mranderson047.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\nreturn mranderson047.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3(id,null,handler);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\nreturn mranderson047.re_frame.v0v10v2.re_frame.events.register(id,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mranderson047.re_frame.v0v10v2.re_frame.cofx.inject_db,mranderson047.re_frame.v0v10v2.re_frame.fx.do_fx,interceptors,mranderson047.re_frame.v0v10v2.re_frame.std_interceptors.fx_handler__GT_interceptor(handler)], null));\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$lang$maxFixedArity = 3;\n\n/**\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\n *   an `interceptors` chain.\n *   `id` is typically a namespaced keyword  (but can be anything)\n *   `handler` is a function: (context-map event-vector) -> context-map\n * \n *   This form of registration is almost never used. \n */\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_event_ctx = (function mranderson047$re_frame$v0v10v2$re_frame$core$reg_event_ctx(var_args){\nvar G__33380 = arguments.length;\nswitch (G__33380) {\ncase 2:\nreturn mranderson047.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn mranderson047.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\nreturn mranderson047.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3(id,null,handler);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\nreturn mranderson047.re_frame.v0v10v2.re_frame.events.register(id,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mranderson047.re_frame.v0v10v2.re_frame.cofx.inject_db,mranderson047.re_frame.v0v10v2.re_frame.fx.do_fx,interceptors,mranderson047.re_frame.v0v10v2.re_frame.std_interceptors.ctx_handler__GT_interceptor(handler)], null));\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$lang$maxFixedArity = 3;\n\nmranderson047.re_frame.v0v10v2.re_frame.core.clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(mranderson047.re_frame.v0v10v2.re_frame.registrar.clear_handlers,mranderson047.re_frame.v0v10v2.re_frame.events.kind);\nmranderson047.re_frame.v0v10v2.re_frame.core.debug = mranderson047.re_frame.v0v10v2.re_frame.std_interceptors.debug;\nmranderson047.re_frame.v0v10v2.re_frame.core.path = mranderson047.re_frame.v0v10v2.re_frame.std_interceptors.path;\nmranderson047.re_frame.v0v10v2.re_frame.core.enrich = mranderson047.re_frame.v0v10v2.re_frame.std_interceptors.enrich;\nmranderson047.re_frame.v0v10v2.re_frame.core.trim_v = mranderson047.re_frame.v0v10v2.re_frame.std_interceptors.trim_v;\nmranderson047.re_frame.v0v10v2.re_frame.core.after = mranderson047.re_frame.v0v10v2.re_frame.std_interceptors.after;\nmranderson047.re_frame.v0v10v2.re_frame.core.on_changes = mranderson047.re_frame.v0v10v2.re_frame.std_interceptors.on_changes;\nmranderson047.re_frame.v0v10v2.re_frame.core.__GT_interceptor = mranderson047.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor;\nmranderson047.re_frame.v0v10v2.re_frame.core.get_coeffect = mranderson047.re_frame.v0v10v2.re_frame.interceptor.get_coeffect;\nmranderson047.re_frame.v0v10v2.re_frame.core.assoc_coeffect = mranderson047.re_frame.v0v10v2.re_frame.interceptor.assoc_coeffect;\nmranderson047.re_frame.v0v10v2.re_frame.core.get_effect = mranderson047.re_frame.v0v10v2.re_frame.interceptor.get_effect;\nmranderson047.re_frame.v0v10v2.re_frame.core.assoc_effect = mranderson047.re_frame.v0v10v2.re_frame.interceptor.assoc_effect;\nmranderson047.re_frame.v0v10v2.re_frame.core.enqueue = mranderson047.re_frame.v0v10v2.re_frame.interceptor.enqueue;\nmranderson047.re_frame.v0v10v2.re_frame.core.set_loggers_BANG_ = mranderson047.re_frame.v0v10v2.re_frame.loggers.set_loggers_BANG_;\nmranderson047.re_frame.v0v10v2.re_frame.core.console = mranderson047.re_frame.v0v10v2.re_frame.loggers.console;\n/**\n * Checkpoints the state of mranderson047.re-frame.v0v10v2.re-frame and returns a function which, when\n *   later called, will restore mranderson047.re-frame.v0v10v2.re-frame to that checkpointed state.\n * \n *   Checkpoint includes app-db, all registered handlers and all subscriptions.\n *   \n */\nmranderson047.re_frame.v0v10v2.re_frame.core.make_restore_fn = (function mranderson047$re_frame$v0v10v2$re_frame$core$make_restore_fn(){\nvar handlers = cljs.core.deref(mranderson047.re_frame.v0v10v2.re_frame.registrar.kind__GT_id__GT_handler);\nvar app_db = cljs.core.deref(mranderson047.re_frame.v0v10v2.re_frame.db.app_db);\nvar subs_cache = cljs.core.deref(mranderson047.re_frame.v0v10v2.re_frame.subs.query__GT_reaction);\nreturn ((function (handlers,app_db,subs_cache){\nreturn (function (){\nvar original_subs_33404 = cljs.core.set(cljs.core.vals(subs_cache));\nvar current_subs_33405 = cljs.core.set(cljs.core.vals(cljs.core.deref(mranderson047.re_frame.v0v10v2.re_frame.subs.query__GT_reaction)));\nvar seq__33396_33406 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(current_subs_33405,original_subs_33404));\nvar chunk__33397_33407 = null;\nvar count__33398_33408 = (0);\nvar i__33399_33409 = (0);\nwhile(true){\nif((i__33399_33409 < count__33398_33408)){\nvar sub_33411 = chunk__33397_33407.cljs$core$IIndexed$_nth$arity$2(null,i__33399_33409);\nmranderson047.re_frame.v0v10v2.re_frame.interop.dispose_BANG_(sub_33411);\n\n\nvar G__33412 = seq__33396_33406;\nvar G__33413 = chunk__33397_33407;\nvar G__33414 = count__33398_33408;\nvar G__33415 = (i__33399_33409 + (1));\nseq__33396_33406 = G__33412;\nchunk__33397_33407 = G__33413;\ncount__33398_33408 = G__33414;\ni__33399_33409 = G__33415;\ncontinue;\n} else {\nvar temp__5457__auto___33420 = cljs.core.seq(seq__33396_33406);\nif(temp__5457__auto___33420){\nvar seq__33396_33422__$1 = temp__5457__auto___33420;\nif(cljs.core.chunked_seq_QMARK_(seq__33396_33422__$1)){\nvar c__4319__auto___33424 = cljs.core.chunk_first(seq__33396_33422__$1);\nvar G__33425 = cljs.core.chunk_rest(seq__33396_33422__$1);\nvar G__33426 = c__4319__auto___33424;\nvar G__33427 = cljs.core.count(c__4319__auto___33424);\nvar G__33428 = (0);\nseq__33396_33406 = G__33425;\nchunk__33397_33407 = G__33426;\ncount__33398_33408 = G__33427;\ni__33399_33409 = G__33428;\ncontinue;\n} else {\nvar sub_33430 = cljs.core.first(seq__33396_33422__$1);\nmranderson047.re_frame.v0v10v2.re_frame.interop.dispose_BANG_(sub_33430);\n\n\nvar G__33431 = cljs.core.next(seq__33396_33422__$1);\nvar G__33432 = null;\nvar G__33433 = (0);\nvar G__33434 = (0);\nseq__33396_33406 = G__33431;\nchunk__33397_33407 = G__33432;\ncount__33398_33408 = G__33433;\ni__33399_33409 = G__33434;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\ncljs.core.reset_BANG_(mranderson047.re_frame.v0v10v2.re_frame.registrar.kind__GT_id__GT_handler,handlers);\n\ncljs.core.reset_BANG_(mranderson047.re_frame.v0v10v2.re_frame.db.app_db,app_db);\n\nreturn null;\n});\n;})(handlers,app_db,subs_cache))\n});\n/**\n * Registers a function `f` to be called after each event is processed\n * `f` will be called with two arguments:\n *  - `event`: a vector. The event just processed.\n *  - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n * \n * This is useful in advanced cases like:\n *   - you are implementing a complex bootstrap pipeline\n *   - you want to create your own handling infrastructure, with perhaps multiple\n *     handlers for the one event, etc.  Hook in here.\n *   - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n * \n *   'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n *   be used at \"remove time\" to get rid of the right callback.\n *   \n */\nmranderson047.re_frame.v0v10v2.re_frame.core.add_post_event_callback = (function mranderson047$re_frame$v0v10v2$re_frame$core$add_post_event_callback(var_args){\nvar G__33436 = arguments.length;\nswitch (G__33436) {\ncase 1:\nreturn mranderson047.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn mranderson047.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$1 = (function (f){\nreturn mranderson047.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2(f,f);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2 = (function (id,f){\nreturn mranderson047.re_frame.v0v10v2.re_frame.router.add_post_event_callback(mranderson047.re_frame.v0v10v2.re_frame.router.event_queue,id,f);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$lang$maxFixedArity = 2;\n\nmranderson047.re_frame.v0v10v2.re_frame.core.remove_post_event_callback = (function mranderson047$re_frame$v0v10v2$re_frame$core$remove_post_event_callback(id){\nreturn mranderson047.re_frame.v0v10v2.re_frame.router.remove_post_event_callback(mranderson047.re_frame.v0v10v2.re_frame.router.event_queue,id);\n});\nmranderson047.re_frame.v0v10v2.re_frame.core.register_handler = (function mranderson047$re_frame$v0v10v2$re_frame$core$register_handler(var_args){\nvar args__4502__auto__ = [];\nvar len__4499__auto___33445 = arguments.length;\nvar i__4500__auto___33446 = (0);\nwhile(true){\nif((i__4500__auto___33446 < len__4499__auto___33445)){\nargs__4502__auto__.push((arguments[i__4500__auto___33446]));\n\nvar G__33447 = (i__4500__auto___33446 + (1));\ni__4500__auto___33446 = G__33447;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4503__auto__ = ((((0) < args__4502__auto__.length))?(new cljs.core.IndexedSeq(args__4502__auto__.slice((0)),(0),null)):null);\nreturn mranderson047.re_frame.v0v10v2.re_frame.core.register_handler.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.register_handler.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nvar G__33441_33448 = new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552);\nvar G__33442_33449 = \"re-frame:  \\\"register-handler\\\" has been renamed \\\"reg-event-db\\\" (look for registration of \";\nvar G__33443_33450 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(args))].join('');\nvar G__33444_33451 = \")\";\n(mranderson047.re_frame.v0v10v2.re_frame.core.console.cljs$core$IFn$_invoke$arity$4 ? mranderson047.re_frame.v0v10v2.re_frame.core.console.cljs$core$IFn$_invoke$arity$4(G__33441_33448,G__33442_33449,G__33443_33450,G__33444_33451) : mranderson047.re_frame.v0v10v2.re_frame.core.console.call(null,G__33441_33448,G__33442_33449,G__33443_33450,G__33444_33451));\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(mranderson047.re_frame.v0v10v2.re_frame.core.reg_event_db,args);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.register_handler.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\nmranderson047.re_frame.v0v10v2.re_frame.core.register_handler.cljs$lang$applyTo = (function (seq33439){\nvar self__4487__auto__ = this;\nreturn self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq33439));\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.register_sub = (function mranderson047$re_frame$v0v10v2$re_frame$core$register_sub(var_args){\nvar args__4502__auto__ = [];\nvar len__4499__auto___33459 = arguments.length;\nvar i__4500__auto___33460 = (0);\nwhile(true){\nif((i__4500__auto___33460 < len__4499__auto___33459)){\nargs__4502__auto__.push((arguments[i__4500__auto___33460]));\n\nvar G__33461 = (i__4500__auto___33460 + (1));\ni__4500__auto___33460 = G__33461;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4503__auto__ = ((((0) < args__4502__auto__.length))?(new cljs.core.IndexedSeq(args__4502__auto__.slice((0)),(0),null)):null);\nreturn mranderson047.re_frame.v0v10v2.re_frame.core.register_sub.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.register_sub.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nvar G__33454_33462 = new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552);\nvar G__33455_33463 = \"re-frame:  \\\"register-sub\\\" is deprecated. Use \\\"reg-sub-raw\\\" (look for registration of \";\nvar G__33456_33464 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(args))].join('');\nvar G__33457_33465 = \")\";\n(mranderson047.re_frame.v0v10v2.re_frame.core.console.cljs$core$IFn$_invoke$arity$4 ? mranderson047.re_frame.v0v10v2.re_frame.core.console.cljs$core$IFn$_invoke$arity$4(G__33454_33462,G__33455_33463,G__33456_33464,G__33457_33465) : mranderson047.re_frame.v0v10v2.re_frame.core.console.call(null,G__33454_33462,G__33455_33463,G__33456_33464,G__33457_33465));\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(mranderson047.re_frame.v0v10v2.re_frame.core.reg_sub_raw,args);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.core.register_sub.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\nmranderson047.re_frame.v0v10v2.re_frame.core.register_sub.cljs$lang$applyTo = (function (seq33453){\nvar self__4487__auto__ = this;\nreturn self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq33453));\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",49],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$mranderson047.re-frame.v0v10v2.re-frame.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$subs","~$mranderson047.re-frame.v0v10v2.re-frame.subs","~$set","~$clojure.set","~$cofx","~$mranderson047.re-frame.v0v10v2.re-frame.cofx","~$mranderson047.re-frame.v0v10v2.re-frame.router","^W","~$fx","~$mranderson047.re-frame.v0v10v2.re-frame.fx","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor","^Z","~$loggers","~$mranderson047.re-frame.v0v10v2.re-frame.loggers","^10","^10","~$cljs.core","^11","~$interceptor","^Z","~$goog","^13","~$router","^W","~$db","~$mranderson047.re-frame.v0v10v2.re-frame.db","~$registrar","~$mranderson047.re-frame.v0v10v2.re-frame.registrar","^18","^18","^T","^T","~$events","~$mranderson047.re-frame.v0v10v2.re-frame.events","~$mranderson047.re-frame.v0v10v2.re-frame.std-interceptors","^1;","~$mranderson047.re-frame.v0v10v2.re-frame.interop","^1<","^1:","^1:","^V","^V","~$interop","^1<","~$std-interceptors","^1;","^Y","^Y","^R","^R","^16","^16"],"~:seen",["^J",["~:require"]],"~:uses",["^ ","~$db-handler->interceptor","^1;","~$fx-handler->interceptor","^1;","~$ctx-handler->interceptor","^1;"],"~:require-macros",["^ ","^11","^11"],"~:form",["~#list",["~$ns","^L",["^1G",["^1@",["^1:","~:as","^19"],["^R","^1I","^Q"],["^1<","^1I","^1="],["^16","^1I","^15"],["^Y","^1I","^X"],["^V","^1I","^U"],["^W","^1I","^14"],["^10","^1I","^["],["^18","^1I","^17"],["^Z","^1I","^12"],["^1;","^1I","^1>","~:refer",["^1B","^1C","^1D"]],["^T","^1I","^S"]]]]],"~:flags",["^ ","^1@",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^13","^11","^1:","^R","^1<","^16","^Y","^V","^W","^10","^18","^Z","^1;","^T"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","mranderson047/re_frame/v0v10v2/re_frame/core.cljc"],"~:compiled-at",1535834867205,"~:resource-name","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","~:warnings",[],"~:source","(ns mranderson047.re-frame.v0v10v2.re-frame.core\n  (:require\n    [mranderson047.re-frame.v0v10v2.re-frame.events           :as events]\n    [mranderson047.re-frame.v0v10v2.re-frame.subs             :as subs]\n    [mranderson047.re-frame.v0v10v2.re-frame.interop          :as interop]\n    [mranderson047.re-frame.v0v10v2.re-frame.db               :as db]\n    [mranderson047.re-frame.v0v10v2.re-frame.fx               :as fx]\n    [mranderson047.re-frame.v0v10v2.re-frame.cofx             :as cofx]\n    [mranderson047.re-frame.v0v10v2.re-frame.router           :as router]\n    [mranderson047.re-frame.v0v10v2.re-frame.loggers          :as loggers]\n    [mranderson047.re-frame.v0v10v2.re-frame.registrar        :as registrar]\n    [mranderson047.re-frame.v0v10v2.re-frame.interceptor      :as interceptor]\n    [mranderson047.re-frame.v0v10v2.re-frame.std-interceptors :as std-interceptors :refer [db-handler->interceptor\n                                                             fx-handler->interceptor\n                                                             ctx-handler->interceptor]]\n    [clojure.set               :as set]))\n\n\n;; -- API ---------------------------------------------------------------------\n;;\n;; This namespace represents the mranderson047.re-frame.v0v10v2.re-frame API\n;;\n;; Below, you'll see we've used this technique:\n;;   (def  api-name-for-fn    deeper.namespace/where-the-defn-is)\n;;\n;; So, we promote a `defn` in a deeper namespace \"up\" to the API\n;; via a `def` in this namespace.\n;;\n;; Turns out, this approach makes it hard:\n;;   - to auto-generate API docs\n;;   - for IDEs to provide code completion on functions in the API\n;;\n;; Which is annoying. But there are pros and cons and we haven't\n;; yet revisited the decision.  To compensate, we've added more nudity\n;; to the docs.\n;;\n\n\n;; -- dispatch ----------------------------------------------------------------\n(def dispatch       router/dispatch)\n(def dispatch-sync  router/dispatch-sync)\n\n\n;; -- subscriptions -----------------------------------------------------------\n(def reg-sub        subs/reg-sub)\n(def subscribe      subs/subscribe)\n\n(def clear-sub (partial registrar/clear-handlers subs/kind))  ;; think unreg-sub\n(def clear-subscription-cache! subs/clear-subscription-cache!)\n\n(defn reg-sub-raw\n  \"This is a low level, advanced function.  You should probably be\n  using reg-sub instead.\n  Docs in https://github.com/Day8/re-frame/blob/master/docs/SubscriptionFlow.md\"\n  [query-id handler-fn]\n  (registrar/register-handler subs/kind query-id handler-fn))\n\n\n;; -- effects -----------------------------------------------------------------\n(def reg-fx      fx/reg-fx)\n(def clear-fx    (partial registrar/clear-handlers fx/kind))  ;; think unreg-fx\n\n;; -- coeffects ---------------------------------------------------------------\n(def reg-cofx    cofx/reg-cofx)\n(def inject-cofx cofx/inject-cofx)\n(def clear-cofx (partial registrar/clear-handlers cofx/kind)) ;; think unreg-cofx\n\n\n;; -- Events ------------------------------------------------------------------\n\n(defn reg-event-db\n  \"Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of this\n   chain.\"\n  ([id handler]\n    (reg-event-db id nil handler))\n  ([id interceptors handler]\n   (events/register id [cofx/inject-db fx/do-fx interceptors (db-handler->interceptor handler)])))\n\n\n(defn reg-event-fx\n  \"Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (coeffects-map event-vector) -> effects-map\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of the\n   interceptor chain.  These interceptors inject the value of app-db into coeffects,\n   and, later, action effects.\"\n  ([id handler]\n   (reg-event-fx id nil handler))\n  ([id interceptors handler]\n   (events/register id [cofx/inject-db fx/do-fx interceptors (fx-handler->interceptor handler)])))\n\n\n(defn reg-event-ctx\n  \"Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (context-map event-vector) -> context-map\n\n  This form of registration is almost never used. \"\n  ([id handler]\n   (reg-event-ctx id nil handler))\n  ([id interceptors handler]\n   (events/register id [cofx/inject-db fx/do-fx interceptors (ctx-handler->interceptor handler)])))\n\n(def clear-event (partial registrar/clear-handlers events/kind)) ;; think unreg-event-*\n\n;; -- interceptors ------------------------------------------------------------\n\n;; Standard interceptors.\n;; Detailed docs on each in std-interceptors.cljs\n(def debug       std-interceptors/debug)\n(def path        std-interceptors/path)\n(def enrich      std-interceptors/enrich)\n(def trim-v      std-interceptors/trim-v)\n(def after       std-interceptors/after)\n(def on-changes  std-interceptors/on-changes)\n\n\n;; Utility functions for creating your own interceptors\n;;\n;;  (def my-interceptor\n;;     (->interceptor                ;; used to create an interceptor\n;;       :id     :my-interceptor     ;; an id - decorative only\n;;       :before (fn [context]                         ;; you normally want to change :coeffects\n;;                  ... use get-coeffect  and assoc-coeffect\n;;                       )\n;;       :after  (fn [context]                         ;; you normally want to change :effects\n;;                 (let [db (get-effect context :db)]  ;; (get-in context [:effects :db])\n;;                   (assoc-effect context :http-ajax {...}])))))\n;;\n(def ->interceptor   interceptor/->interceptor)\n(def get-coeffect    interceptor/get-coeffect)\n(def assoc-coeffect  interceptor/assoc-coeffect)\n(def get-effect      interceptor/get-effect)\n(def assoc-effect    interceptor/assoc-effect)\n(def enqueue         interceptor/enqueue)\n\n\n;; --  logging ----------------------------------------------------------------\n;; Internally, mranderson047.re-frame.v0v10v2.re-frame uses the logging functions: warn, log, error, group and groupEnd\n;; By default, these functions map directly to the js/console implementations,\n;; but you can override with your own fns (set or subset).\n;; Example Usage:\n;;   (defn my-fn [& args]  (post-it-somewhere (apply str args)))  ;; here is my alternative\n;;   (mranderson047.re-frame.v0v10v2.re-frame.core/set-loggers!  {:warn my-fn :log my-fn})       ;; override the defaults with mine\n(def set-loggers! loggers/set-loggers!)\n\n;; If you are writing an extension to re-frame, like perhaps\n;; an effects handler, you may want to use mranderson047.re-frame.v0v10v2.re-frame logging.\n;;\n;; usage: (console :error \"Oh, dear God, it happened: \" a-var \" and \" another)\n;;        (console :warn \"Possible breach of containment wall at: \" dt)\n(def console loggers/console)\n\n\n;; -- unit testing ------------------------------------------------------------\n\n(defn make-restore-fn\n  \"Checkpoints the state of mranderson047.re-frame.v0v10v2.re-frame and returns a function which, when\n  later called, will restore mranderson047.re-frame.v0v10v2.re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  \"\n  []\n  (let [handlers @registrar/kind->id->handler\n        app-db   @db/app-db\n\t\t\t\tsubs-cache @subs/query->reaction]\n    (fn []\n\t\t\t;; call `dispose!` on all current subscriptions which\n\t\t\t;; didn't originally exist.\n      (let [original-subs (set (vals subs-cache))\n            current-subs  (set (vals @subs/query->reaction))]\n        (doseq [sub (set/difference current-subs original-subs)]\n          (interop/dispose! sub)))\n\n      ;; Reset the atoms\n      ;; We don't need to reset subs/query->reaction, as\n      ;; disposing of the subs removes them from the cache anyway\n      (reset! registrar/kind->id->handler handlers)\n      (reset! db/app-db app-db)\n      nil)))\n\n\n;; -- Event Processing Callbacks  ---------------------------------------------\n\n(defn add-post-event-callback\n  \"Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \\\"add time\\\" so it can subsequently\n  be used at \\\"remove time\\\" to get rid of the right callback.\n  \"\n  ([f]\n   (add-post-event-callback f f))   ;; use f as its own identifier\n  ([id f]\n   (router/add-post-event-callback mranderson047.re-frame.v0v10v2.re-frame.router/event-queue id f)))\n\n\n(defn remove-post-event-callback\n  [id]\n  (router/remove-post-event-callback mranderson047.re-frame.v0v10v2.re-frame.router/event-queue id))\n\n\n;; --  Deprecation ------------------------------------------------------------\n;; Assisting the v0.7.x ->  v0.8.x transition.\n(defn register-handler\n  [& args]\n  (console :warn  \"re-frame:  \\\"register-handler\\\" has been renamed \\\"reg-event-db\\\" (look for registration of \" (str (first args)) \")\")\n  (apply reg-event-db args))\n\n(defn register-sub\n  [& args]\n  (console :warn  \"re-frame:  \\\"register-sub\\\" is deprecated. Use \\\"reg-sub-raw\\\" (look for registration of \" (str (first args)) \")\")\n  (apply reg-sub-raw args))\n","~:reader-features",["^J",["~:cljs"]],"~:source-map",["^ ","~i39",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",14]],"~i5",[["^ ","^1X",0,"^1Y",14,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/dispatch"]],"~i20",[["^ ","^1X",56,"^1Y",14,"^K","mranderson047.re-frame.v0v10v2.re-frame.router/dispatch"]]],"~i40",["^ ","~i0",[["^ ","^1X",0,"^1Y",15]],"~i5",[["^ ","^1X",0,"^1Y",15,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/dispatch-sync"]],"^1Z",[["^ ","^1X",61,"^1Y",15,"^K","mranderson047.re-frame.v0v10v2.re-frame.router/dispatch-sync"]]],"~i44",["^ ","~i0",[["^ ","^1X",0,"^1Y",16]],"~i5",[["^ ","^1X",0,"^1Y",16,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-sub"]],"^1Z",[["^ ","^1X",55,"^1Y",16,"^K","mranderson047.re-frame.v0v10v2.re-frame.subs/reg-sub"]]],"~i45",["^ ","~i0",[["^ ","^1X",0,"^1Y",17]],"~i5",[["^ ","^1X",0,"^1Y",17,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/subscribe"]],"^1Z",[["^ ","^1X",57,"^1Y",17,"^K","mranderson047.re-frame.v0v10v2.re-frame.subs/subscribe"]]],"~i47",["^ ","~i0",[["^ ","^1X",0,"^1Y",18]],"~i5",[["^ ","^1X",0,"^1Y",18,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/clear-sub"]],"~i15",[["^ ","^1X",57,"^1Y",18]],"~i16",[["^ ","^1X",57,"^1Y",18,"^K","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"]],"~i24",[["^ ","^1X",105,"^1Y",18,"^K","mranderson047.re-frame.v0v10v2.re-frame.registrar/clear-handlers"]],"~i49",[["^ ","^1X",170,"^1Y",18,"^K","mranderson047.re-frame.v0v10v2.re-frame.subs/kind"]]],"~i48",["^ ","~i0",[["^ ","^1X",0,"^1Y",19]],"~i5",[["^ ","^1X",0,"^1Y",19,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/clear-subscription-cache!"]],"~i31",[["^ ","^1X",78,"^1Y",19,"^K","mranderson047.re-frame.v0v10v2.re-frame.subs/clear-subscription-cache!"]]],"~i50",["^ ","~i0",[["^ ","^1X",0,"^1Y",20],["^ ","^1X",59,"^1Y",25],["^ ","^1X",0,"^1Y",26]],"~i6",[["^ ","^1X",0,"^1Y",25,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-sub-raw"]]],"~i54",["^ ","~i3",[["^ ","^1X",126,"^1Y",25,"^K","query-id"]],"~i12",[["^ ","^1X",135,"^1Y",25,"^K","handler-fn"]]],"~i55",["^ ","~i2",[["^ ","^1X",0,"^1Y",26]],"~i3",[["^ ","^1X",7,"^1Y",26,"^K","mranderson047.re-frame.v0v10v2.re-frame.registrar/register-handler"]],"~i30",[["^ ","^1X",74,"^1Y",26,"^K","mranderson047.re-frame.v0v10v2.re-frame.subs/kind"]],"^1[",[["^ ","^1X",124,"^1Y",26,"^K","query-id"]],"^26",[["^ ","^1X",133,"^1Y",26,"^K","handler-fn"]]],"~i59",["^ ","~i0",[["^ ","^1X",0,"^1Y",28]],"~i5",[["^ ","^1X",0,"^1Y",28,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-fx"]],"~i17",[["^ ","^1X",54,"^1Y",28,"^K","mranderson047.re-frame.v0v10v2.re-frame.fx/reg-fx"]]],"~i60",["^ ","~i0",[["^ ","^1X",0,"^1Y",29]],"~i5",[["^ ","^1X",0,"^1Y",29,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/clear-fx"]],"^2?",[["^ ","^1X",56,"^1Y",29]],"~i18",[["^ ","^1X",56,"^1Y",29,"^K","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"]],"~i26",[["^ ","^1X",104,"^1Y",29,"^K","mranderson047.re-frame.v0v10v2.re-frame.registrar/clear-handlers"]],"~i51",[["^ ","^1X",169,"^1Y",29,"^K","mranderson047.re-frame.v0v10v2.re-frame.fx/kind"]]],"~i63",["^ ","~i0",[["^ ","^1X",0,"^1Y",30]],"~i5",[["^ ","^1X",0,"^1Y",30,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-cofx"]],"^2?",[["^ ","^1X",56,"^1Y",30,"^K","mranderson047.re-frame.v0v10v2.re-frame.cofx/reg-cofx"]]],"~i64",["^ ","~i0",[["^ ","^1X",0,"^1Y",31]],"~i5",[["^ ","^1X",0,"^1Y",31,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/inject-cofx"]],"^2?",[["^ ","^1X",59,"^1Y",31,"^K","mranderson047.re-frame.v0v10v2.re-frame.cofx/inject-cofx"]]],"~i65",["^ ","~i0",[["^ ","^1X",0,"^1Y",32]],"~i5",[["^ ","^1X",0,"^1Y",32,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/clear-cofx"]],"^24",[["^ ","^1X",58,"^1Y",32]],"^2?",[["^ ","^1X",58,"^1Y",32,"^K","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"]],"~i25",[["^ ","^1X",106,"^1Y",32,"^K","mranderson047.re-frame.v0v10v2.re-frame.registrar/clear-handlers"]],"^29",[["^ ","^1X",171,"^1Y",32,"^K","mranderson047.re-frame.v0v10v2.re-frame.cofx/kind"]]],"~i70",["^ ","~i0",[["^ ","^1X",0,"^1Y",33],["^ ","^1X",0,"^1Y",33],["^ ","^1X",60,"^1Y",44],["^ ","^1X",128,"^1Y",44,"^K","var_args"],["^ ","^1X",0,"^1Y",45],["^ ","^1X",0,"^1Y",45],["^ ","^1X",4,"^1Y",45,"^K","G__33374"],["^ ","^1X",15,"^1Y",45],["^ ","^1X",15,"^1Y",45],["^ ","^1X",0,"^1Y",46],["^ ","^1X",0,"^1Y",46],["^ ","^1X",8,"^1Y",46,"^K","G__33374"],["^ ","^1X",5,"^1Y",47],["^ ","^1X",0,"^1Y",48],["^ ","^1X",7,"^1Y",48,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-db"],["^ ","^1X",95,"^1Y",48],["^ ","^1X",96,"^1Y",48],["^ ","^1X",106,"^1Y",48],["^ ","^1X",112,"^1Y",48],["^ ","^1X",113,"^1Y",48],["^ ","^1X",123,"^1Y",48],["^ ","^1X",5,"^1Y",51],["^ ","^1X",0,"^1Y",52],["^ ","^1X",7,"^1Y",52,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-db"],["^ ","^1X",95,"^1Y",52],["^ ","^1X",96,"^1Y",52],["^ ","^1X",106,"^1Y",52],["^ ","^1X",112,"^1Y",52],["^ ","^1X",113,"^1Y",52],["^ ","^1X",123,"^1Y",52],["^ ","^1X",129,"^1Y",52],["^ ","^1X",130,"^1Y",52],["^ ","^1X",140,"^1Y",52],["^ ","^1X",0,"^1Y",56],["^ ","^1X",6,"^1Y",56],["^ ","^1X",11,"^1Y",56,"^K","js/Error"],["^ ","^1X",17,"^1Y",56],["^ ","^1X",18,"^1Y",56],["^ ","^1X",80,"^1Y",56],["^ ","^1X",80,"^1Y",56],["^ ","^1X",0,"^1Y",61],["^ ","^1X",0,"^1Y",61],["^ ","^1X",90,"^1Y",61],["^ ","^1X",0,"^1Y",62],["^ ","^1X",0,"^1Y",65],["^ ","^1X",0,"^1Y",65],["^ ","^1X",90,"^1Y",65],["^ ","^1X",0,"^1Y",66],["^ ","^1X",0,"^1Y",69],["^ ","^1X",0,"^1Y",69],["^ ","^1X",84,"^1Y",69],["^ ","^1X",0,"^1Y",71]],"~i6",[["^ ","^1X",0,"^1Y",44,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-db"],["^ ","^1X",0,"^1Y",61,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-db"],["^ ","^1X",0,"^1Y",65,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-db"],["^ ","^1X",0,"^1Y",69,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-db"]]],"~i80",["^ ","~i4",[["^ ","^1X",101,"^1Y",61,"^K","id"]],"~i7",[["^ ","^1X",104,"^1Y",61,"^K","handler"]]],"~i81",["^ ","~i4",[["^ ","^1X",0,"^1Y",62],["^ ","^1X",98,"^1Y",62]],"~i5",[["^ ","^1X",7,"^1Y",62,"^K","mranderson047.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3"]],"^2A",[["^ ","^1X",95,"^1Y",62,"^K","id"]],"^2G",[["^ ","^1X",103,"^1Y",62,"^K","handler"]]],"~i82",["^ ","~i4",[["^ ","^1X",101,"^1Y",65,"^K","id"]],"~i7",[["^ ","^1X",104,"^1Y",65,"^K","interceptors"]],"^1Z",[["^ ","^1X",117,"^1Y",65,"^K","handler"]]],"~i83",["^ ","~i3",[["^ ","^1X",0,"^1Y",66],["^ ","^1X",66,"^1Y",66]],"~i4",[["^ ","^1X",7,"^1Y",66,"^K","mranderson047.re-frame.v0v10v2.re-frame.events/register"]],"^1Z",[["^ ","^1X",63,"^1Y",66,"^K","id"]],"^25",[["^ ","^1X",149,"^1Y",66,"^K","mranderson047.re-frame.v0v10v2.re-frame.cofx/inject-db"]],"^1W",[["^ ","^1X",204,"^1Y",66,"^K","mranderson047.re-frame.v0v10v2.re-frame.fx/do-fx"]],"^27",[["^ ","^1X",253,"^1Y",66,"^K","interceptors"]],"~i61",[["^ ","^1X",266,"^1Y",66]],"~i62",[["^ ","^1X",266,"^1Y",66,"^K","mranderson047.re-frame.v0v10v2.re-frame.std-interceptors/db-handler->interceptor"]],"~i86",[["^ ","^1X",350,"^1Y",66,"^K","handler"]]],"^2O",["^ ","~i0",[["^ ","^1X",0,"^1Y",71],["^ ","^1X",0,"^1Y",71],["^ ","^1X",60,"^1Y",83],["^ ","^1X",128,"^1Y",83,"^K","var_args"],["^ ","^1X",0,"^1Y",84],["^ ","^1X",0,"^1Y",84],["^ ","^1X",4,"^1Y",84,"^K","G__33377"],["^ ","^1X",15,"^1Y",84],["^ ","^1X",15,"^1Y",84],["^ ","^1X",0,"^1Y",85],["^ ","^1X",0,"^1Y",85],["^ ","^1X",8,"^1Y",85,"^K","G__33377"],["^ ","^1X",5,"^1Y",86],["^ ","^1X",0,"^1Y",87],["^ ","^1X",7,"^1Y",87,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-fx"],["^ ","^1X",95,"^1Y",87],["^ ","^1X",96,"^1Y",87],["^ ","^1X",106,"^1Y",87],["^ ","^1X",112,"^1Y",87],["^ ","^1X",113,"^1Y",87],["^ ","^1X",123,"^1Y",87],["^ ","^1X",5,"^1Y",90],["^ ","^1X",0,"^1Y",91],["^ ","^1X",7,"^1Y",91,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-fx"],["^ ","^1X",95,"^1Y",91],["^ ","^1X",96,"^1Y",91],["^ ","^1X",106,"^1Y",91],["^ ","^1X",112,"^1Y",91],["^ ","^1X",113,"^1Y",91],["^ ","^1X",123,"^1Y",91],["^ ","^1X",129,"^1Y",91],["^ ","^1X",130,"^1Y",91],["^ ","^1X",140,"^1Y",91],["^ ","^1X",0,"^1Y",95],["^ ","^1X",6,"^1Y",95],["^ ","^1X",11,"^1Y",95,"^K","js/Error"],["^ ","^1X",17,"^1Y",95],["^ ","^1X",18,"^1Y",95],["^ ","^1X",80,"^1Y",95],["^ ","^1X",80,"^1Y",95],["^ ","^1X",0,"^1Y",100],["^ ","^1X",0,"^1Y",100],["^ ","^1X",90,"^1Y",100],["^ ","^1X",0,"^1Y",101],["^ ","^1X",0,"^1Y",104],["^ ","^1X",0,"^1Y",104],["^ ","^1X",90,"^1Y",104],["^ ","^1X",0,"^1Y",105],["^ ","^1X",0,"^1Y",108],["^ ","^1X",0,"^1Y",108],["^ ","^1X",84,"^1Y",108],["^ ","^1X",0,"^1Y",110]],"~i6",[["^ ","^1X",0,"^1Y",83,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-fx"],["^ ","^1X",0,"^1Y",100,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-fx"],["^ ","^1X",0,"^1Y",104,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-fx"],["^ ","^1X",0,"^1Y",108,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-fx"]]],"~i97",["^ ","~i4",[["^ ","^1X",101,"^1Y",100,"^K","id"]],"~i7",[["^ ","^1X",104,"^1Y",100,"^K","handler"]]],"~i98",["^ ","~i3",[["^ ","^1X",0,"^1Y",101],["^ ","^1X",98,"^1Y",101]],"~i4",[["^ ","^1X",7,"^1Y",101,"^K","mranderson047.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3"]],"^2?",[["^ ","^1X",95,"^1Y",101,"^K","id"]],"^25",[["^ ","^1X",103,"^1Y",101,"^K","handler"]]],"~i99",["^ ","~i4",[["^ ","^1X",101,"^1Y",104,"^K","id"]],"~i7",[["^ ","^1X",104,"^1Y",104,"^K","interceptors"]],"^1Z",[["^ ","^1X",117,"^1Y",104,"^K","handler"]]],"~i100",["^ ","~i3",[["^ ","^1X",0,"^1Y",105],["^ ","^1X",66,"^1Y",105]],"~i4",[["^ ","^1X",7,"^1Y",105,"^K","mranderson047.re-frame.v0v10v2.re-frame.events/register"]],"^1Z",[["^ ","^1X",63,"^1Y",105,"^K","id"]],"^25",[["^ ","^1X",149,"^1Y",105,"^K","mranderson047.re-frame.v0v10v2.re-frame.cofx/inject-db"]],"^1W",[["^ ","^1X",204,"^1Y",105,"^K","mranderson047.re-frame.v0v10v2.re-frame.fx/do-fx"]],"^27",[["^ ","^1X",253,"^1Y",105,"^K","interceptors"]],"^2M",[["^ ","^1X",266,"^1Y",105]],"^2N",[["^ ","^1X",266,"^1Y",105,"^K","mranderson047.re-frame.v0v10v2.re-frame.std-interceptors/fx-handler->interceptor"]],"^2O",[["^ ","^1X",350,"^1Y",105,"^K","handler"]]],"~i103",["^ ","~i0",[["^ ","^1X",0,"^1Y",110],["^ ","^1X",0,"^1Y",110],["^ ","^1X",61,"^1Y",118],["^ ","^1X",130,"^1Y",118,"^K","var_args"],["^ ","^1X",0,"^1Y",119],["^ ","^1X",0,"^1Y",119],["^ ","^1X",4,"^1Y",119,"^K","G__33380"],["^ ","^1X",15,"^1Y",119],["^ ","^1X",15,"^1Y",119],["^ ","^1X",0,"^1Y",120],["^ ","^1X",0,"^1Y",120],["^ ","^1X",8,"^1Y",120,"^K","G__33380"],["^ ","^1X",5,"^1Y",121],["^ ","^1X",0,"^1Y",122],["^ ","^1X",7,"^1Y",122,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-ctx"],["^ ","^1X",96,"^1Y",122],["^ ","^1X",97,"^1Y",122],["^ ","^1X",107,"^1Y",122],["^ ","^1X",113,"^1Y",122],["^ ","^1X",114,"^1Y",122],["^ ","^1X",124,"^1Y",122],["^ ","^1X",5,"^1Y",125],["^ ","^1X",0,"^1Y",126],["^ ","^1X",7,"^1Y",126,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-ctx"],["^ ","^1X",96,"^1Y",126],["^ ","^1X",97,"^1Y",126],["^ ","^1X",107,"^1Y",126],["^ ","^1X",113,"^1Y",126],["^ ","^1X",114,"^1Y",126],["^ ","^1X",124,"^1Y",126],["^ ","^1X",130,"^1Y",126],["^ ","^1X",131,"^1Y",126],["^ ","^1X",141,"^1Y",126],["^ ","^1X",0,"^1Y",130],["^ ","^1X",6,"^1Y",130],["^ ","^1X",11,"^1Y",130,"^K","js/Error"],["^ ","^1X",17,"^1Y",130],["^ ","^1X",18,"^1Y",130],["^ ","^1X",80,"^1Y",130],["^ ","^1X",80,"^1Y",130],["^ ","^1X",0,"^1Y",135],["^ ","^1X",0,"^1Y",135],["^ ","^1X",91,"^1Y",135],["^ ","^1X",0,"^1Y",136],["^ ","^1X",0,"^1Y",139],["^ ","^1X",0,"^1Y",139],["^ ","^1X",91,"^1Y",139],["^ ","^1X",0,"^1Y",140],["^ ","^1X",0,"^1Y",143],["^ ","^1X",0,"^1Y",143],["^ ","^1X",85,"^1Y",143],["^ ","^1X",0,"^1Y",145]],"~i6",[["^ ","^1X",0,"^1Y",118,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-ctx"],["^ ","^1X",0,"^1Y",135,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-ctx"],["^ ","^1X",0,"^1Y",139,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-ctx"],["^ ","^1X",0,"^1Y",143,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-ctx"]]],"~i110",["^ ","~i4",[["^ ","^1X",102,"^1Y",135,"^K","id"]],"~i7",[["^ ","^1X",105,"^1Y",135,"^K","handler"]]],"~i111",["^ ","~i3",[["^ ","^1X",0,"^1Y",136],["^ ","^1X",99,"^1Y",136]],"~i4",[["^ ","^1X",7,"^1Y",136,"^K","mranderson047.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3"]],"^2A",[["^ ","^1X",96,"^1Y",136,"^K","id"]],"^2G",[["^ ","^1X",104,"^1Y",136,"^K","handler"]]],"~i112",["^ ","~i4",[["^ ","^1X",102,"^1Y",139,"^K","id"]],"~i7",[["^ ","^1X",105,"^1Y",139,"^K","interceptors"]],"^1Z",[["^ ","^1X",118,"^1Y",139,"^K","handler"]]],"~i113",["^ ","~i3",[["^ ","^1X",0,"^1Y",140],["^ ","^1X",66,"^1Y",140]],"~i4",[["^ ","^1X",7,"^1Y",140,"^K","mranderson047.re-frame.v0v10v2.re-frame.events/register"]],"^1Z",[["^ ","^1X",63,"^1Y",140,"^K","id"]],"^25",[["^ ","^1X",149,"^1Y",140,"^K","mranderson047.re-frame.v0v10v2.re-frame.cofx/inject-db"]],"^1W",[["^ ","^1X",204,"^1Y",140,"^K","mranderson047.re-frame.v0v10v2.re-frame.fx/do-fx"]],"^27",[["^ ","^1X",253,"^1Y",140,"^K","interceptors"]],"^2M",[["^ ","^1X",266,"^1Y",140]],"^2N",[["^ ","^1X",266,"^1Y",140,"^K","mranderson047.re-frame.v0v10v2.re-frame.std-interceptors/ctx-handler->interceptor"]],"~i87",[["^ ","^1X",351,"^1Y",140,"^K","handler"]]],"~i115",["^ ","~i0",[["^ ","^1X",0,"^1Y",145]],"~i5",[["^ ","^1X",0,"^1Y",145,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/clear-event"]],"^2?",[["^ ","^1X",59,"^1Y",145]],"^2A",[["^ ","^1X",59,"^1Y",145,"^K","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"]],"^2B",[["^ ","^1X",107,"^1Y",145,"^K","mranderson047.re-frame.v0v10v2.re-frame.registrar/clear-handlers"]],"^2C",[["^ ","^1X",172,"^1Y",145,"^K","mranderson047.re-frame.v0v10v2.re-frame.events/kind"]]],"~i121",["^ ","~i0",[["^ ","^1X",0,"^1Y",146]],"~i5",[["^ ","^1X",0,"^1Y",146,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/debug"]],"^2?",[["^ ","^1X",53,"^1Y",146,"^K","mranderson047.re-frame.v0v10v2.re-frame.std-interceptors/debug"]]],"~i122",["^ ","~i0",[["^ ","^1X",0,"^1Y",147]],"~i5",[["^ ","^1X",0,"^1Y",147,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/path"]],"^2?",[["^ ","^1X",52,"^1Y",147,"^K","mranderson047.re-frame.v0v10v2.re-frame.std-interceptors/path"]]],"~i123",["^ ","~i0",[["^ ","^1X",0,"^1Y",148]],"~i5",[["^ ","^1X",0,"^1Y",148,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/enrich"]],"^2?",[["^ ","^1X",54,"^1Y",148,"^K","mranderson047.re-frame.v0v10v2.re-frame.std-interceptors/enrich"]]],"~i124",["^ ","~i0",[["^ ","^1X",0,"^1Y",149]],"~i5",[["^ ","^1X",0,"^1Y",149,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/trim-v"]],"^2?",[["^ ","^1X",54,"^1Y",149,"^K","mranderson047.re-frame.v0v10v2.re-frame.std-interceptors/trim-v"]]],"~i125",["^ ","~i0",[["^ ","^1X",0,"^1Y",150]],"~i5",[["^ ","^1X",0,"^1Y",150,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/after"]],"^2?",[["^ ","^1X",53,"^1Y",150,"^K","mranderson047.re-frame.v0v10v2.re-frame.std-interceptors/after"]]],"~i126",["^ ","~i0",[["^ ","^1X",0,"^1Y",151]],"~i5",[["^ ","^1X",0,"^1Y",151,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/on-changes"]],"^2?",[["^ ","^1X",58,"^1Y",151,"^K","mranderson047.re-frame.v0v10v2.re-frame.std-interceptors/on-changes"]]],"~i141",["^ ","~i0",[["^ ","^1X",0,"^1Y",152]],"~i5",[["^ ","^1X",0,"^1Y",152,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/->interceptor"]],"~i21",[["^ ","^1X",64,"^1Y",152,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/->interceptor"]]],"~i142",["^ ","~i0",[["^ ","^1X",0,"^1Y",153]],"~i5",[["^ ","^1X",0,"^1Y",153,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/get-coeffect"]],"^36",[["^ ","^1X",60,"^1Y",153,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"]]],"~i143",["^ ","~i0",[["^ ","^1X",0,"^1Y",154]],"~i5",[["^ ","^1X",0,"^1Y",154,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/assoc-coeffect"]],"^36",[["^ ","^1X",62,"^1Y",154,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/assoc-coeffect"]]],"~i144",["^ ","~i0",[["^ ","^1X",0,"^1Y",155]],"~i5",[["^ ","^1X",0,"^1Y",155,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/get-effect"]],"^36",[["^ ","^1X",58,"^1Y",155,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-effect"]]],"~i145",["^ ","~i0",[["^ ","^1X",0,"^1Y",156]],"~i5",[["^ ","^1X",0,"^1Y",156,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/assoc-effect"]],"^36",[["^ ","^1X",60,"^1Y",156,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/assoc-effect"]]],"~i146",["^ ","~i0",[["^ ","^1X",0,"^1Y",157]],"~i5",[["^ ","^1X",0,"^1Y",157,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/enqueue"]],"^36",[["^ ","^1X",55,"^1Y",157,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/enqueue"]]],"~i156",["^ ","~i0",[["^ ","^1X",0,"^1Y",158]],"~i5",[["^ ","^1X",0,"^1Y",158,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/set-loggers!"]],"^2A",[["^ ","^1X",65,"^1Y",158,"^K","mranderson047.re-frame.v0v10v2.re-frame.loggers/set-loggers!"]]],"~i163",["^ ","~i0",[["^ ","^1X",0,"^1Y",159]],"~i5",[["^ ","^1X",0,"^1Y",159,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/console"]],"~i13",[["^ ","^1X",55,"^1Y",159,"^K","mranderson047.re-frame.v0v10v2.re-frame.loggers/console"]]],"~i168",["^ ","~i0",[["^ ","^1X",0,"^1Y",160],["^ ","^1X",63,"^1Y",167],["^ ","^1X",0,"^1Y",168]],"~i6",[["^ ","^1X",0,"^1Y",167,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/make-restore-fn"]]],"~i175",["^ ","~i2",[["^ ","^1X",0,"^1Y",168],["^ ","^1X",15,"^1Y",168],["^ ","^1X",15,"^1Y",168,"^K","cljs.core/deref"],["^ ","^1X",13,"^1Y",169],["^ ","^1X",13,"^1Y",169,"^K","cljs.core/deref"],["^ ","^1X",17,"^1Y",170],["^ ","^1X",17,"^1Y",170,"^K","cljs.core/deref"],["^ ","^1X",0,"^1Y",171]],"~i8",[["^ ","^1X",4,"^1Y",168,"^K","handlers"]],"^2A",[["^ ","^1X",31,"^1Y",168,"^K","mranderson047.re-frame.v0v10v2.re-frame.registrar/kind->id->handler"]]],"~i176",["^ ","~i8",[["^ ","^1X",4,"^1Y",169,"^K","app-db"]],"^2A",[["^ ","^1X",29,"^1Y",169,"^K","mranderson047.re-frame.v0v10v2.re-frame.db/app-db"]]],"~i177",["^ ","~i4",[["^ ","^1X",4,"^1Y",170,"^K","subs-cache"]],"^24",[["^ ","^1X",33,"^1Y",170,"^K","mranderson047.re-frame.v0v10v2.re-frame.subs/query->reaction"]]],"~i178",["^ ","~i4",[["^ ","^1X",0,"^1Y",171],["^ ","^1X",0,"^1Y",173],["^ ","^1X",0,"^1Y",234]]],"~i181",["^ ","~i6",[["^ ","^1X",0,"^1Y",173],["^ ","^1X",0,"^1Y",175]],"^2;",[["^ ","^1X",4,"^1Y",173,"^K","original-subs"]],"^2B",[["^ ","^1X",26,"^1Y",173]],"~i27",[["^ ","^1X",26,"^1Y",173,"^K","cljs.core/set"]],"^28",[["^ ","^1X",40,"^1Y",173]],"~i32",[["^ ","^1X",40,"^1Y",173,"^K","cljs.core/vals"]],"~i37",[["^ ","^1X",55,"^1Y",173,"^K","subs-cache"]]],"~i182",["^ ","^2;",[["^ ","^1X",4,"^1Y",174,"^K","current-subs"]],"^2B",[["^ ","^1X",25,"^1Y",174]],"^3E",[["^ ","^1X",25,"^1Y",174,"^K","cljs.core/set"]],"^28",[["^ ","^1X",39,"^1Y",174],["^ ","^1X",54,"^1Y",174],["^ ","^1X",54,"^1Y",174,"^K","cljs.core/deref"]],"^3F",[["^ ","^1X",39,"^1Y",174,"^K","cljs.core/vals"]],"~i38",[["^ ","^1X",70,"^1Y",174,"^K","mranderson047.re-frame.v0v10v2.re-frame.subs/query->reaction"]]],"~i183",["^ ","~i8",[["^ ","^1X",0,"^1Y",175],["^ ","^1X",4,"^1Y",175,"^K","seq__33396"],["^ ","^1X",23,"^1Y",175],["^ ","^1X",23,"^1Y",175,"^K","cljs.core/seq"],["^ ","^1X",4,"^1Y",176,"^K","chunk__33397"],["^ ","^1X",25,"^1Y",176],["^ ","^1X",4,"^1Y",177,"^K","count__33398"],["^ ","^1X",25,"^1Y",177],["^ ","^1X",4,"^1Y",178,"^K","i__33399"],["^ ","^1X",21,"^1Y",178],["^ ","^1X",0,"^1Y",180],["^ ","^1X",0,"^1Y",180],["^ ","^1X",3,"^1Y",180],["^ ","^1X",3,"^1Y",180],["^ ","^1X",4,"^1Y",180,"^K","i__33399"],["^ ","^1X",21,"^1Y",180,"^K","count__33398"],["^ ","^1X",0,"^1Y",181],["^ ","^1X",16,"^1Y",181],["^ ","^1X",16,"^1Y",181,"^K","chunk__33397"],["^ ","^1X",72,"^1Y",181,"^K","i__33399"],["^ ","^1X",0,"^1Y",182],["^ ","^1X",0,"^1Y",182],["^ ","^1X",0,"^1Y",184],["^ ","^1X",0,"^1Y",185],["^ ","^1X",15,"^1Y",185,"^K","seq__33396"],["^ ","^1X",15,"^1Y",186,"^K","chunk__33397"],["^ ","^1X",15,"^1Y",187,"^K","count__33398"],["^ ","^1X",15,"^1Y",188],["^ ","^1X",16,"^1Y",188,"^K","i__33399"],["^ ","^1X",33,"^1Y",188],["^ ","^1X",0,"^1Y",195],["^ ","^1X",4,"^1Y",195,"^K","temp__5457__auto__"],["^ ","^1X",31,"^1Y",195],["^ ","^1X",31,"^1Y",195,"^K","cljs.core/seq"],["^ ","^1X",45,"^1Y",195,"^K","seq__33396"],["^ ","^1X",0,"^1Y",196],["^ ","^1X",0,"^1Y",196],["^ ","^1X",3,"^1Y",196,"^K","temp__5457__auto__"],["^ ","^1X",0,"^1Y",197],["^ ","^1X",0,"^1Y",197],["^ ","^1X",4,"^1Y",197,"^K","seq__33396"],["^ ","^1X",27,"^1Y",197,"^K","temp__5457__auto__"],["^ ","^1X",0,"^1Y",198],["^ ","^1X",0,"^1Y",198],["^ ","^1X",3,"^1Y",198],["^ ","^1X",3,"^1Y",198,"^K","cljs.core/chunked-seq?"],["^ ","^1X",32,"^1Y",198,"^K","seq__33396"],["^ ","^1X",0,"^1Y",199],["^ ","^1X",4,"^1Y",199,"^K","c__4319__auto__"],["^ ","^1X",28,"^1Y",199],["^ ","^1X",28,"^1Y",199,"^K","cljs.core/chunk-first"],["^ ","^1X",50,"^1Y",199,"^K","seq__33396"],["^ ","^1X",0,"^1Y",200],["^ ","^1X",0,"^1Y",200],["^ ","^1X",15,"^1Y",200],["^ ","^1X",15,"^1Y",200,"^K","cljs.core/chunk-rest"],["^ ","^1X",36,"^1Y",200,"^K","seq__33396"],["^ ","^1X",15,"^1Y",201,"^K","c__4319__auto__"],["^ ","^1X",15,"^1Y",202],["^ ","^1X",15,"^1Y",202,"^K","cljs.core/count"],["^ ","^1X",31,"^1Y",202,"^K","c__4319__auto__"],["^ ","^1X",15,"^1Y",203],["^ ","^1X",0,"^1Y",210],["^ ","^1X",16,"^1Y",210],["^ ","^1X",16,"^1Y",210,"^K","cljs.core/first"],["^ ","^1X",32,"^1Y",210,"^K","seq__33396"],["^ ","^1X",0,"^1Y",211],["^ ","^1X",0,"^1Y",211],["^ ","^1X",0,"^1Y",213],["^ ","^1X",0,"^1Y",214],["^ ","^1X",15,"^1Y",214],["^ ","^1X",15,"^1Y",214,"^K","cljs.core/next"],["^ ","^1X",30,"^1Y",214,"^K","seq__33396"],["^ ","^1X",15,"^1Y",215],["^ ","^1X",15,"^1Y",216],["^ ","^1X",15,"^1Y",217],["^ ","^1X",0,"^1Y",225]],"^24",[["^ ","^1X",4,"^1Y",181,"^K","sub"],["^ ","^1X",4,"^1Y",210,"^K","sub"]],"^1Z",[["^ ","^1X",37,"^1Y",175]],"^36",[["^ ","^1X",37,"^1Y",175,"^K","clojure.set.difference.cljs$core$IFn$_invoke$arity$2"]],"~i36",[["^ ","^1X",90,"^1Y",175,"^K","current-subs"]],"^26",[["^ ","^1X",109,"^1Y",175,"^K","original-subs"]]],"~i184",["^ ","~i10",[["^ ","^1X",0,"^1Y",182],["^ ","^1X",0,"^1Y",211]],"~i11",[["^ ","^1X",0,"^1Y",182,"^K","mranderson047.re-frame.v0v10v2.re-frame.interop/dispose!"],["^ ","^1X",0,"^1Y",211,"^K","mranderson047.re-frame.v0v10v2.re-frame.interop/dispose!"]],"~i28",[["^ ","^1X",62,"^1Y",182,"^K","sub"],["^ ","^1X",62,"^1Y",211,"^K","sub"]]],"~i189",["^ ","~i6",[["^ ","^1X",0,"^1Y",230]],"~i7",[["^ ","^1X",0,"^1Y",230,"^K","cljs.core/reset!"]],"~i14",[["^ ","^1X",22,"^1Y",230,"^K","mranderson047.re-frame.v0v10v2.re-frame.registrar/kind->id->handler"]],"~i42",[["^ ","^1X",96,"^1Y",230,"^K","handlers"]]],"~i190",["^ ","~i6",[["^ ","^1X",0,"^1Y",232]],"~i7",[["^ ","^1X",0,"^1Y",232,"^K","cljs.core/reset!"]],"^3Q",[["^ ","^1X",22,"^1Y",232,"^K","mranderson047.re-frame.v0v10v2.re-frame.db/app-db"]],"^25",[["^ ","^1X",72,"^1Y",232,"^K","app-db"]]],"~i196",["^ ","~i0",[["^ ","^1X",0,"^1Y",238],["^ ","^1X",0,"^1Y",238],["^ ","^1X",71,"^1Y",254],["^ ","^1X",150,"^1Y",254,"^K","var_args"],["^ ","^1X",0,"^1Y",255],["^ ","^1X",0,"^1Y",255],["^ ","^1X",4,"^1Y",255,"^K","G__33436"],["^ ","^1X",15,"^1Y",255],["^ ","^1X",15,"^1Y",255],["^ ","^1X",0,"^1Y",256],["^ ","^1X",0,"^1Y",256],["^ ","^1X",8,"^1Y",256,"^K","G__33436"],["^ ","^1X",5,"^1Y",257],["^ ","^1X",0,"^1Y",258],["^ ","^1X",7,"^1Y",258,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/add-post-event-callback"],["^ ","^1X",106,"^1Y",258],["^ ","^1X",107,"^1Y",258],["^ ","^1X",117,"^1Y",258],["^ ","^1X",5,"^1Y",261],["^ ","^1X",0,"^1Y",262],["^ ","^1X",7,"^1Y",262,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/add-post-event-callback"],["^ ","^1X",106,"^1Y",262],["^ ","^1X",107,"^1Y",262],["^ ","^1X",117,"^1Y",262],["^ ","^1X",123,"^1Y",262],["^ ","^1X",124,"^1Y",262],["^ ","^1X",134,"^1Y",262],["^ ","^1X",0,"^1Y",266],["^ ","^1X",6,"^1Y",266],["^ ","^1X",11,"^1Y",266,"^K","js/Error"],["^ ","^1X",17,"^1Y",266],["^ ","^1X",18,"^1Y",266],["^ ","^1X",80,"^1Y",266],["^ ","^1X",80,"^1Y",266],["^ ","^1X",0,"^1Y",271],["^ ","^1X",0,"^1Y",271],["^ ","^1X",101,"^1Y",271],["^ ","^1X",0,"^1Y",272],["^ ","^1X",0,"^1Y",275],["^ ","^1X",0,"^1Y",275],["^ ","^1X",101,"^1Y",275],["^ ","^1X",0,"^1Y",276],["^ ","^1X",0,"^1Y",279],["^ ","^1X",0,"^1Y",279],["^ ","^1X",95,"^1Y",279],["^ ","^1X",0,"^1Y",281]],"~i6",[["^ ","^1X",0,"^1Y",254,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/add-post-event-callback"],["^ ","^1X",0,"^1Y",271,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/add-post-event-callback"],["^ ","^1X",0,"^1Y",275,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/add-post-event-callback"],["^ ","^1X",0,"^1Y",279,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/add-post-event-callback"]]],"~i211",["^ ","~i4",[["^ ","^1X",112,"^1Y",271,"^K","f"]]],"~i212",["^ ","~i3",[["^ ","^1X",0,"^1Y",272]],"~i4",[["^ ","^1X",7,"^1Y",272,"^K","mranderson047.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2"]],"^3O",[["^ ","^1X",106,"^1Y",272,"^K","f"]],"^2=",[["^ ","^1X",108,"^1Y",272,"^K","f"]]],"~i213",["^ ","~i4",[["^ ","^1X",112,"^1Y",275,"^K","id"]],"~i7",[["^ ","^1X",115,"^1Y",275,"^K","f"]]],"~i214",["^ ","~i3",[["^ ","^1X",0,"^1Y",276]],"~i4",[["^ ","^1X",7,"^1Y",276,"^K","mranderson047.re-frame.v0v10v2.re-frame.router/add-post-event-callback"]],"~i35",[["^ ","^1X",78,"^1Y",276,"^K","mranderson047.re-frame.v0v10v2.re-frame.router/event-queue"]],"~i94",[["^ ","^1X",137,"^1Y",276,"^K","id"]],"^2P",[["^ ","^1X",140,"^1Y",276,"^K","f"]]],"~i217",["^ ","~i0",[["^ ","^1X",0,"^1Y",281],["^ ","^1X",74,"^1Y",281],["^ ","^1X",0,"^1Y",282]],"~i6",[["^ ","^1X",0,"^1Y",281,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/remove-post-event-callback"]]],"~i218",["^ ","~i3",[["^ ","^1X",156,"^1Y",281,"^K","id"]]],"~i219",["^ ","~i2",[["^ ","^1X",0,"^1Y",282]],"~i3",[["^ ","^1X",7,"^1Y",282,"^K","mranderson047.re-frame.v0v10v2.re-frame.router/remove-post-event-callback"]],"^3G",[["^ ","^1X",81,"^1Y",282,"^K","mranderson047.re-frame.v0v10v2.re-frame.router/event-queue"]],"~i96",[["^ ","^1X",140,"^1Y",282,"^K","id"]]],"~i224",["^ ","~i0",[["^ ","^1X",0,"^1Y",284],["^ ","^1X",0,"^1Y",284],["^ ","^1X",64,"^1Y",284],["^ ","^1X",136,"^1Y",284,"^K","var_args"],["^ ","^1X",0,"^1Y",285],["^ ","^1X",0,"^1Y",285],["^ ","^1X",4,"^1Y",285,"^K","args__4502__auto__"],["^ ","^1X",25,"^1Y",285],["^ ","^1X",0,"^1Y",286],["^ ","^1X",0,"^1Y",286],["^ ","^1X",4,"^1Y",286,"^K","len__4499__auto__"],["^ ","^1X",30,"^1Y",286],["^ ","^1X",30,"^1Y",286],["^ ","^1X",0,"^1Y",287],["^ ","^1X",0,"^1Y",287],["^ ","^1X",4,"^1Y",287,"^K","i__4500__auto__"],["^ ","^1X",28,"^1Y",287],["^ ","^1X",0,"^1Y",289],["^ ","^1X",0,"^1Y",289],["^ ","^1X",3,"^1Y",289],["^ ","^1X",4,"^1Y",289,"^K","i__4500__auto__"],["^ ","^1X",28,"^1Y",289,"^K","len__4499__auto__"],["^ ","^1X",0,"^1Y",290],["^ ","^1X",0,"^1Y",290],["^ ","^1X",0,"^1Y",290,"^K","args__4502__auto__"],["^ ","^1X",24,"^1Y",290],["^ ","^1X",25,"^1Y",290],["^ ","^1X",35,"^1Y",290,"^K","i__4500__auto__"],["^ ","^1X",0,"^1Y",292],["^ ","^1X",15,"^1Y",292],["^ ","^1X",16,"^1Y",292,"^K","i__4500__auto__"],["^ ","^1X",40,"^1Y",292],["^ ","^1X",0,"^1Y",296],["^ ","^1X",0,"^1Y",300],["^ ","^1X",4,"^1Y",300,"^K","argseq__4503__auto__"],["^ ","^1X",27,"^1Y",300],["^ ","^1X",29,"^1Y",300],["^ ","^1X",30,"^1Y",300],["^ ","^1X",36,"^1Y",300],["^ ","^1X",36,"^1Y",300,"^K","args__4502__auto__"],["^ ","^1X",64,"^1Y",300],["^ ","^1X",64,"^1Y",300],["^ ","^1X",69,"^1Y",300,"^K","cljs.core/IndexedSeq"],["^ ","^1X",90,"^1Y",300],["^ ","^1X",90,"^1Y",300,"^K","args__4502__auto__"],["^ ","^1X",115,"^1Y",300],["^ ","^1X",120,"^1Y",300],["^ ","^1X",124,"^1Y",300],["^ ","^1X",131,"^1Y",300],["^ ","^1X",0,"^1Y",301],["^ ","^1X",0,"^1Y",301],["^ ","^1X",7,"^1Y",301,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/register-handler"],["^ ","^1X",106,"^1Y",301,"^K","argseq__4503__auto__"],["^ ","^1X",0,"^1Y",304],["^ ","^1X",0,"^1Y",304],["^ ","^1X",0,"^1Y",304],["^ ","^1X",0,"^1Y",304,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/register-handler"],["^ ","^1X",101,"^1Y",304],["^ ","^1X",0,"^1Y",305],["^ ","^1X",0,"^1Y",314],["^ ","^1X",0,"^1Y",314],["^ ","^1X",0,"^1Y",314,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/register-handler"],["^ ","^1X",88,"^1Y",314],["^ ","^1X",0,"^1Y",316],["^ ","^1X",0,"^1Y",317],["^ ","^1X",0,"^1Y",317],["^ ","^1X",0,"^1Y",317,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/register-handler"],["^ ","^1X",82,"^1Y",317],["^ ","^1X",93,"^1Y",317,"^K","seq33439"],["^ ","^1X",0,"^1Y",318],["^ ","^1X",0,"^1Y",318],["^ ","^1X",4,"^1Y",318,"^K","self__4487__auto__"],["^ ","^1X",25,"^1Y",318],["^ ","^1X",0,"^1Y",319],["^ ","^1X",0,"^1Y",319],["^ ","^1X",7,"^1Y",319,"^K","self__4487__auto__"],["^ ","^1X",63,"^1Y",319],["^ ","^1X",63,"^1Y",319,"^K","cljs.core/seq"],["^ ","^1X",77,"^1Y",319,"^K","seq33439"],["^ ","^1X",0,"^1Y",322]],"~i6",[["^ ","^1X",0,"^1Y",284,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/register-handler"]]],"~i225",["^ ","~i5",[["^ ","^1X",112,"^1Y",304,"^K","args"]]],"~i226",["^ ","~i2",[["^ ","^1X",0,"^1Y",305],["^ ","^1X",4,"^1Y",305,"^K","G__33441"],["^ ","^1X",21,"^1Y",305],["^ ","^1X",4,"^1Y",306,"^K","G__33442"],["^ ","^1X",21,"^1Y",306],["^ ","^1X",4,"^1Y",307,"^K","G__33443"],["^ ","^1X",4,"^1Y",308,"^K","G__33444"],["^ ","^1X",21,"^1Y",308],["^ ","^1X",0,"^1Y",309],["^ ","^1X",0,"^1Y",309],["^ ","^1X",169,"^1Y",309,"^K","G__33441"],["^ ","^1X",184,"^1Y",309,"^K","G__33442"],["^ ","^1X",199,"^1Y",309,"^K","G__33443"],["^ ","^1X",214,"^1Y",309,"^K","G__33444"],["^ ","^1X",295,"^1Y",309,"^K","G__33441"],["^ ","^1X",310,"^1Y",309,"^K","G__33442"],["^ ","^1X",325,"^1Y",309,"^K","G__33443"],["^ ","^1X",340,"^1Y",309,"^K","G__33444"]],"~i3",[["^ ","^1X",1,"^1Y",309,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/console"],["^ ","^1X",86,"^1Y",309,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/console"],["^ ","^1X",232,"^1Y",309,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/console"]],"^2X",[["^ ","^1X",21,"^1Y",307]],"~i118",[["^ ","^1X",66,"^1Y",307]],"~i119",[["^ ","^1X",66,"^1Y",307,"^K","cljs.core/first"]],"^33",[["^ ","^1X",82,"^1Y",307,"^K","args"]]],"~i227",["^ ","~i2",[["^ ","^1X",0,"^1Y",311]],"~i3",[["^ ","^1X",7,"^1Y",311,"^K","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"~i9",[["^ ","^1X",53,"^1Y",311,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-db"]],"~i22",[["^ ","^1X",111,"^1Y",311,"^K","args"]]],"~i229",["^ ","~i0",[["^ ","^1X",0,"^1Y",322],["^ ","^1X",0,"^1Y",322],["^ ","^1X",60,"^1Y",322],["^ ","^1X",128,"^1Y",322,"^K","var_args"],["^ ","^1X",0,"^1Y",323],["^ ","^1X",0,"^1Y",323],["^ ","^1X",4,"^1Y",323,"^K","args__4502__auto__"],["^ ","^1X",25,"^1Y",323],["^ ","^1X",0,"^1Y",324],["^ ","^1X",0,"^1Y",324],["^ ","^1X",4,"^1Y",324,"^K","len__4499__auto__"],["^ ","^1X",30,"^1Y",324],["^ ","^1X",30,"^1Y",324],["^ ","^1X",0,"^1Y",325],["^ ","^1X",0,"^1Y",325],["^ ","^1X",4,"^1Y",325,"^K","i__4500__auto__"],["^ ","^1X",28,"^1Y",325],["^ ","^1X",0,"^1Y",327],["^ ","^1X",0,"^1Y",327],["^ ","^1X",3,"^1Y",327],["^ ","^1X",4,"^1Y",327,"^K","i__4500__auto__"],["^ ","^1X",28,"^1Y",327,"^K","len__4499__auto__"],["^ ","^1X",0,"^1Y",328],["^ ","^1X",0,"^1Y",328],["^ ","^1X",0,"^1Y",328,"^K","args__4502__auto__"],["^ ","^1X",24,"^1Y",328],["^ ","^1X",25,"^1Y",328],["^ ","^1X",35,"^1Y",328,"^K","i__4500__auto__"],["^ ","^1X",0,"^1Y",330],["^ ","^1X",15,"^1Y",330],["^ ","^1X",16,"^1Y",330,"^K","i__4500__auto__"],["^ ","^1X",40,"^1Y",330],["^ ","^1X",0,"^1Y",334],["^ ","^1X",0,"^1Y",338],["^ ","^1X",4,"^1Y",338,"^K","argseq__4503__auto__"],["^ ","^1X",27,"^1Y",338],["^ ","^1X",29,"^1Y",338],["^ ","^1X",30,"^1Y",338],["^ ","^1X",36,"^1Y",338],["^ ","^1X",36,"^1Y",338,"^K","args__4502__auto__"],["^ ","^1X",64,"^1Y",338],["^ ","^1X",64,"^1Y",338],["^ ","^1X",69,"^1Y",338,"^K","cljs.core/IndexedSeq"],["^ ","^1X",90,"^1Y",338],["^ ","^1X",90,"^1Y",338,"^K","args__4502__auto__"],["^ ","^1X",115,"^1Y",338],["^ ","^1X",120,"^1Y",338],["^ ","^1X",124,"^1Y",338],["^ ","^1X",131,"^1Y",338],["^ ","^1X",0,"^1Y",339],["^ ","^1X",0,"^1Y",339],["^ ","^1X",7,"^1Y",339,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/register-sub"],["^ ","^1X",102,"^1Y",339,"^K","argseq__4503__auto__"],["^ ","^1X",0,"^1Y",342],["^ ","^1X",0,"^1Y",342],["^ ","^1X",0,"^1Y",342],["^ ","^1X",0,"^1Y",342,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/register-sub"],["^ ","^1X",97,"^1Y",342],["^ ","^1X",0,"^1Y",343],["^ ","^1X",0,"^1Y",352],["^ ","^1X",0,"^1Y",352],["^ ","^1X",0,"^1Y",352,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/register-sub"],["^ ","^1X",84,"^1Y",352],["^ ","^1X",0,"^1Y",354],["^ ","^1X",0,"^1Y",355],["^ ","^1X",0,"^1Y",355],["^ ","^1X",0,"^1Y",355,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/register-sub"],["^ ","^1X",78,"^1Y",355],["^ ","^1X",89,"^1Y",355,"^K","seq33453"],["^ ","^1X",0,"^1Y",356],["^ ","^1X",0,"^1Y",356],["^ ","^1X",4,"^1Y",356,"^K","self__4487__auto__"],["^ ","^1X",25,"^1Y",356],["^ ","^1X",0,"^1Y",357],["^ ","^1X",0,"^1Y",357],["^ ","^1X",7,"^1Y",357,"^K","self__4487__auto__"],["^ ","^1X",63,"^1Y",357],["^ ","^1X",63,"^1Y",357,"^K","cljs.core/seq"],["^ ","^1X",77,"^1Y",357,"^K","seq33453"],["^ ","^1X",0,"^1Y",360]],"~i6",[["^ ","^1X",0,"^1Y",322,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/register-sub"]]],"~i230",["^ ","~i5",[["^ ","^1X",108,"^1Y",342,"^K","args"]]],"~i231",["^ ","~i2",[["^ ","^1X",0,"^1Y",343],["^ ","^1X",4,"^1Y",343,"^K","G__33454"],["^ ","^1X",21,"^1Y",343],["^ ","^1X",4,"^1Y",344,"^K","G__33455"],["^ ","^1X",21,"^1Y",344],["^ ","^1X",4,"^1Y",345,"^K","G__33456"],["^ ","^1X",4,"^1Y",346,"^K","G__33457"],["^ ","^1X",21,"^1Y",346],["^ ","^1X",0,"^1Y",347],["^ ","^1X",0,"^1Y",347],["^ ","^1X",169,"^1Y",347,"^K","G__33454"],["^ ","^1X",184,"^1Y",347,"^K","G__33455"],["^ ","^1X",199,"^1Y",347,"^K","G__33456"],["^ ","^1X",214,"^1Y",347,"^K","G__33457"],["^ ","^1X",295,"^1Y",347,"^K","G__33454"],["^ ","^1X",310,"^1Y",347,"^K","G__33455"],["^ ","^1X",325,"^1Y",347,"^K","G__33456"],["^ ","^1X",340,"^1Y",347,"^K","G__33457"]],"~i3",[["^ ","^1X",1,"^1Y",347,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/console"],["^ ","^1X",86,"^1Y",347,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/console"],["^ ","^1X",232,"^1Y",347,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/console"]],"^2U",[["^ ","^1X",21,"^1Y",345]],"^2Z",[["^ ","^1X",66,"^1Y",345]],"~i116",[["^ ","^1X",66,"^1Y",345,"^K","cljs.core/first"]],"^30",[["^ ","^1X",82,"^1Y",345,"^K","args"]]],"~i232",["^ ","~i2",[["^ ","^1X",0,"^1Y",349]],"~i3",[["^ ","^1X",7,"^1Y",349,"^K","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"~i9",[["^ ","^1X",53,"^1Y",349,"^K","mranderson047.re-frame.v0v10v2.re-frame.core/reg-sub-raw"]],"^36",[["^ ","^1X",110,"^1Y",349,"^K","args"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1535834828000,1535834828000,0,"~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"],["^1O","goog/dom/tagname.js"],[1505449243000,"^13","~$goog.dom.HtmlElement"],["^4B","node_modules/fbjs/lib/camelize.js"],[1535834828000,1535834828000,1506381453000,"^4C"],["^1O","mranderson047/re_frame/v0v10v2/re_frame/registrar.cljc"],[1535834828000,"^13","^11","^1<","^10"],["~:macro","^11"],[1535834828000],["^1O","mranderson047/re_frame/v0v10v2/re_frame/trace.cljc"],[1535834828000,"^13","^11","^1<","^10"],["^1O","goog/math/math.js"],[1505449243000,"^13","~$goog.array","~$goog.asserts"],["^1O","mranderson047/re_frame/v0v10v2/re_frame/subs.cljc"],[1535834828000,"^13","^11","^16","^1<","^10","~$mranderson047.re-frame.v0v10v2.re-frame.utils","^18","~$mranderson047.re-frame.v0v10v2.re-frame.trace"],["^1O","mranderson047/reagent/v0v8v0_alpha2/reagent/impl/component.cljs"],[1535834828000,"^13","^11","^?","^=","~$mranderson047.reagent.v0v8v0-alpha2.reagent.impl.util","~$mranderson047.reagent.v0v8v0-alpha2.reagent.impl.batching","~$mranderson047.reagent.v0v8v0-alpha2.reagent.ratom","~$mranderson047.reagent.v0v8v0-alpha2.reagent.interop","~$mranderson047.reagent.v0v8v0-alpha2.reagent.debug"],["^1O","goog/labs/useragent/browser.js"],[1505449243000,"^13","^4H","~$goog.labs.userAgent.util","~$goog.object","~$goog.string"],["^4G","^4O"],[1535834828000],["^1O","goog/array/array.js"],[1505449243000,"^13","^4I"],["^4B","node_modules/prop-types/checkPropTypes.js"],[1535834828000,1535834828000,1519255688000,"^4C","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"],["^4G","~$net.cgrand.macrovich"],[1511234491000],["^4B","node_modules/fbjs/lib/emptyFunction.js"],[1535834828000,1535834828000,1506381453000,"^4C"],["^1O","goog/debug/error.js"],[1505449243000,"^13"],["^1O","mranderson047/reagent/v0v8v0_alpha2/reagent/dom.cljs"],[1535834828000,"^13","^11","^A","^4L","~$mranderson047.reagent.v0v8v0-alpha2.reagent.impl.template","^4M","^4N","^4P","^4O"],["^1O","mranderson047/re_frame/v0v10v2/re_frame/fx.cljc"],[1535834828000,"^13","^11","^W","^16","^Z","^1<","^1:","^18","^10"],["^4B","node_modules/fbjs/lib/emptyObject.js"],[1535834828000,1535834828000,1506381454000,"^4C"],["^1O","mranderson047/re_frame/v0v10v2/re_frame/interop.cljs"],[1535834828000,"^13","^11","~$goog.async.nextTick","~$mranderson047.reagent.v0v8v0-alpha2.reagent.core","^4N"],["^1O","goog/dom/nodetype.js"],[1505449243000,"^13"],["^4B","node_modules/fbjs/lib/shallowEqual.js"],[1535834828000,1535834828000,1506381454000,"^4C"],["^1O","mranderson047/reagent/v0v8v0_alpha2/reagent/impl/template.cljs"],[1535834828000,"^13","^11","^=","~$clojure.string","~$clojure.walk","^4L","~$mranderson047.reagent.v0v8v0-alpha2.reagent.impl.component","^4M","^4N","^4O","^4P"],["^1O","mranderson047/reagent/v0v8v0_alpha2/reagent/impl/batching.cljs"],[1535834828000,"^13","^11","^4P","^4O","^4L","^4["],["^4B","node_modules/fbjs/lib/hyphenate.js"],[1535834828000,1535834828000,1506381454000,"^4C"],["^4B","node_modules/create-react-class/factory.js"],[1535834828000,1535834828000,1517346959000,"^4C","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","^4T","^4U"],["^4B","node_modules/react/index.js"],[1535834828000,1535834828000,0,"^4C","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"],["^1O","shadow/js.js"],[1535834828000,"^13"],["^1O","goog/object/object.js"],[1505449243000,"^13"],["^4B","node_modules/react-dom/cjs/react-dom.production.min.js"],[1535834828000,1535834828000,0,"^4C","^4T","^=","~$module$node_modules$fbjs$lib$ExecutionEnvironment","^52","~$module$node_modules$fbjs$lib$emptyFunction","~$module$node_modules$fbjs$lib$getActiveElement","~$module$node_modules$fbjs$lib$shallowEqual","~$module$node_modules$fbjs$lib$containsNode","^53"],"~:SHADOW-TIMESTAMP",[1535834828000,1535834828000],["^4B","node_modules/react/cjs/react.development.js"],[1535834828000,1535834828000,0,"^4C","^52","^4T","^53","^4U","^57","~$module$node_modules$prop_types$checkPropTypes"],["^1O","mranderson047/re_frame/v0v10v2/re_frame/db.cljc"],[1535834828000,"^13","^11","^1<"],["^4B","node_modules/fbjs/lib/isNode.js"],[1535834828000,1535834828000,1506381456000,"^4C"],["^1O","goog/math/long.js"],[1505449243000,"^13","^4I","~$goog.reflect"],["^1O","mranderson047/re_frame/v0v10v2/re_frame/core.cljc"],[1535834828000,"^13","^11","^1:","^R","^1<","^16","^Y","^V","^W","^10","^18","^Z","^1;","^T"],["^4G","^4Z"],[1535834828000],["^4B","node_modules/fbjs/lib/warning.js"],[1535834828000,1535834828000,1506381455000,"^4C","^57"],["^1O","goog/functions/functions.js"],[1505449243000,"^13"],["^1O","clojure/walk.cljs"],[1535834828000,"^13","^11"],["^1O","goog/structs/map.js"],[1505449243000,"^13","~$goog.iter.Iterator","~$goog.iter.StopIteration","^4R"],["^1O","mranderson047/re_frame/v0v10v2/re_frame/cofx.cljc"],[1535834828000,"^13","^11","^16","^Z","^18","^10"],["^1O","goog/labs/useragent/engine.js"],[1505449243000,"^13","^4H","^4Q","^4S"],["^1O","goog/asserts/asserts.js"],[1505449243000,"^13","~$goog.debug.Error","~$goog.dom.NodeType","^4S"],["^1O","mranderson047/re_frame/v0v10v2/re_frame/router.cljc"],[1535834828000,"^13","^11","^1:","^1<","^10","^4K"],["^1O","goog/uri/uri.js"],[1505449243000,"^13","^4H","^4I","^4S","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1O","mranderson047/reagent/v0v8v0_alpha2/reagent/core.cljs"],[1535834828000,"^13","^11","^=","^4X","^51","^4L","^4M","^4N","^4P","^4O","~$mranderson047.reagent.v0v8v0-alpha2.reagent.dom"],["^4G","^4P"],[1535834828000],["^4B","node_modules/object-assign/index.js"],[1535834828000,1535834828000,1484580833000,"^4C"],["^4B","node_modules/fbjs/lib/containsNode.js"],[1535834828000,1535834828000,1506381456000,"^4C","~$module$node_modules$fbjs$lib$isTextNode"],["^4B","node_modules/fbjs/lib/hyphenateStyleName.js"],[1535834828000,1535834828000,1506381454000,"^4C","~$module$node_modules$fbjs$lib$hyphenate"],["^1O","mranderson047/re_frame/v0v10v2/re_frame/utils.cljc"],[1535834828000,"^13","^11","^10"],["^1O","mranderson047/re_frame/v0v10v2/re_frame/std_interceptors.cljc"],[1535834828000,"^13","^11","^Z","^10","^18","^16","~$clojure.data","^V","^4J"],["^1O","mranderson047/re_frame/v0v10v2/re_frame/events.cljc"],[1535834828000,"^13","^11","^16","^4J","^1<","^18","^10","^Z","^4K"],["^1O","goog/base.js"],[1505449243000],["^1O","goog/structs/structs.js"],[1505449243000,"^13","^4H","^4R"],["^1O","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc"],[1535834828000,"^13","^11","^10","^1<","^T"],["^1O","mranderson047/reagent/v0v8v0_alpha2/reagent/interop.cljs"],[1535834828000,"^13","^11"],["^1O","mranderson047/reagent/v0v8v0_alpha2/reagent/ratom.cljs"],[1535834828000,"^13","^11","^4L","^4P","^4M","^T"],["^1O","clojure/string.cljs"],[1535834828000,"^13","^11","^4S","~$goog.string.StringBuffer"],["^4B","node_modules/fbjs/lib/ExecutionEnvironment.js"],[1535834828000,1535834828000,1506381453000,"^4C"],["^4B","node_modules/create-react-class/index.js"],[1535834828000,1535834828000,1517346956000,"^4C","^=","~$module$node_modules$create_react_class$factory"],["^4B","node_modules/react/cjs/react.production.min.js"],[1535834828000,1535834828000,0,"^4C","^52","^4T","^53","^57"],["^1O","goog/debug/entrypointregistry.js"],[1505449243000,"^13","^4I"],["^1O","goog/string/string.js"],[1505449243000,"^13"],["^4G","^4K"],[1535834828000],["^1O","clojure/data.cljs"],[1535834828000,"^13","^11","^T"],["^1O","goog/reflect/reflect.js"],[1505449243000,"^13"],["^1O","goog/labs/useragent/util.js"],[1505449243000,"^13","^4S"],["^1O","goog/string/stringbuffer.js"],[1505449243000,"^13"],["^1O","mranderson047/reagent/v0v8v0_alpha2/reagent/impl/util.cljs"],[1535834828000,"^13","^11","^4P","^4O","^4["],["^1O","goog/iter/iter.js"],[1505449243000,"^13","^4H","^4I","~$goog.functions","~$goog.math"],["^1O","goog/async/nexttick.js"],[1505449243000,"^13","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^5M","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"],["^4B","node_modules/fbjs/lib/getActiveElement.js"],[1535834828000,1535834828000,1506381456000,"^4C"],["^4B","node_modules/fbjs/lib/camelizeStyleName.js"],[1535834828000,1535834828000,1506381453000,"^4C","~$module$node_modules$fbjs$lib$camelize"],["^4B","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1535834828000,1535834828000,1519255688000,"^4C"],["^1O","goog/dom/htmlelement.js"],[1505449243000,"^13"],["^1O","cljs/core.cljs"],[1535834828000,"~$goog.math.Long","~$goog.math.Integer","^4S","^4R","^4H","~$goog.Uri","^5K"],["^4G","^4N"],[1535834828000],["^1O","goog/math/integer.js"],[1505449243000,"^13"],["^1O","mranderson047/reagent/v0v8v0_alpha2/reagent/debug.cljs"],[1535834828000,"^13","^11"],["^4B","node_modules/react-dom/cjs/react-dom.development.js"],[1535834828000,1535834828000,0,"^4C","^4T","^=","^4U","^56","^52","^57","^5<","^58","^59","^5:","^53","~$module$node_modules$fbjs$lib$hyphenateStyleName","~$module$node_modules$fbjs$lib$camelizeStyleName"],["^1O","clojure/set.cljs"],[1535834828000,"^13","^11"],["^1O","goog/uri/utils.js"],[1505449243000,"^13","^4H","^4I","^4S"],["^1O","mranderson047/re_frame/v0v10v2/re_frame/loggers.cljc"],[1535834828000,"^13","^11","^T"],["^4B","node_modules/fbjs/lib/isTextNode.js"],[1535834828000,1535834828000,1506381456000,"^4C","~$module$node_modules$fbjs$lib$isNode"],["^4B","node_modules/fbjs/lib/invariant.js"],[1535834828000,1535834828000,1506381455000,"^4C"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",1,"^8",5,"^9",1,"^:",49],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^Q","^R","^S","^T","^U","^V","^W","^W","^X","^Y","^Z","^Z","^[","^10","^10","^10","^11","^11","^12","^Z","^13","^13","^14","^W","^15","^16","^17","^18","^18","^18","^T","^T","^19","^1:","^1;","^1;","^1<","^1<","^1:","^1:","^V","^V","^1=","^1<","^1>","^1;","^Y","^Y","^R","^R","^16","^16"],"^1?",["^J",["^1@"]],"~:shadow/js-access-global",["^J",["Error"]],"^1A",["^ ","^1B","^1;","^1C","^1;","^1D","^1;"],"~:defs",["^ ","~$console",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/console","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",164,"^8",1,"^9",164,"^:",13,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",164,"^8",6,"^9",164,"^:",13]],"~$on-changes",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/on-changes","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",127,"^8",1,"^9",127,"^:",16,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",127,"^8",6,"^9",127,"^:",16]],"~$enrich",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/enrich","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",124,"^8",1,"^9",124,"^:",12,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",124,"^8",6,"^9",124,"^:",12]],"~$reg-sub-raw",["^ ","~:protocol-inline",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",51,"^8",7,"^9",51,"^:",18,"~:arglists",["^1G",["~$quote",["^1G",[["~$query-id","~$handler-fn"]]]]],"~:doc","This is a low level, advanced function.  You should probably be\n  using reg-sub instead.\n  Docs in https://github.com/Day8/re-frame/blob/master/docs/SubscriptionFlow.md"],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/reg-sub-raw","~:variadic",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^:",18,"~:method-params",["^1G",[["^6;","^6<"]]],"~:protocol-impl",null,"~:arglists-meta",["^1G",[null,null]],"^8",1,"^7",51,"^9",51,"~:max-fixed-arity",2,"~:fn-var",true,"^69",["^1G",["^6:",["^1G",[["^6;","^6<"]]]]],"^6=","This is a low level, advanced function.  You should probably be\n  using reg-sub instead.\n  Docs in https://github.com/Day8/re-frame/blob/master/docs/SubscriptionFlow.md"],"~$subscribe",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/subscribe","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",46,"^8",1,"^9",46,"^:",15,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",46,"^8",6,"^9",46,"^:",15]],"~$assoc-coeffect",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/assoc-coeffect","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",144,"^8",1,"^9",144,"^:",20,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",144,"^8",6,"^9",144,"^:",20]],"~$register-sub",["^ ","^68",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",230,"^8",7,"^9",230,"^:",19,"^69",["^1G",["^6:",["^1G",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^6?",true,"^6C",0,"^6@",[["^1G",["^6J"]]],"^69",["^1G",[["~$&","^6J"]]],"^6B",["^1G",[null]]]],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/register-sub","^6?",true,"^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^:",19,"^6K",["^ ","^6?",true,"^6C",0,"^6@",[["^1G",["^6J"]]],"^69",["^1G",[["~$&","^6J"]]],"^6B",["^1G",[null]]],"^6@",[["^1G",["^6J"]]],"^6A",null,"^6B",["^1G",[null]],"^8",1,"^7",230,"^9",230,"^6C",0,"^6D",true,"^69",["^1G",[["~$&","^6J"]]]],"~$remove-post-event-callback",["^ ","^68",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",218,"^8",7,"^9",218,"^:",33,"^69",["^1G",["^6:",["^1G",[["~$id"]]]]]],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/remove-post-event-callback","^6?",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^:",33,"^6@",["^1G",[["^6N"]]],"^6A",null,"^6B",["^1G",[null,null]],"^8",1,"^7",218,"^9",218,"^6C",1,"^6D",true,"^69",["^1G",["^6:",["^1G",[["^6N"]]]]]],"~$path",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/path","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",123,"^8",1,"^9",123,"^:",10,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",123,"^8",6,"^9",123,"^:",10]],"~$reg-sub",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/reg-sub","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",45,"^8",1,"^9",45,"^:",13,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",45,"^8",6,"^9",45,"^:",13]],"~$make-restore-fn",["^ ","^68",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",169,"^8",7,"^9",169,"^:",22,"^69",["^1G",["^6:",["^1G",[[]]]]],"^6=","Checkpoints the state of mranderson047.re-frame.v0v10v2.re-frame and returns a function which, when\n  later called, will restore mranderson047.re-frame.v0v10v2.re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  "],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/make-restore-fn","^6?",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^:",22,"^6@",["^1G",[[]]],"^6A",null,"^6B",["^1G",[null,null]],"^8",1,"^7",169,"^9",169,"^6C",0,"^6D",true,"^69",["^1G",["^6:",["^1G",[[]]]]],"^6=","Checkpoints the state of mranderson047.re-frame.v0v10v2.re-frame and returns a function which, when\n  later called, will restore mranderson047.re-frame.v0v10v2.re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  "],"~$clear-fx",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/clear-fx","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",61,"^8",1,"^9",61,"^:",14,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",61,"^8",6,"^9",61,"^:",14],"~:tag","~$any"],"~$get-effect",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/get-effect","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",145,"^8",1,"^9",145,"^:",16,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",145,"^8",6,"^9",145,"^:",16]],"~$reg-event-db",["^ ","^68",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",71,"^8",7,"^9",71,"^:",19,"^69",["^1G",["^6:",["^1G",[["^6N","~$handler"],["^6N","~$interceptors","^71"]]]]],"^6=","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of this\n   chain.","^6K",["^ ","^6?",false,"^6C",3,"^6@",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^69",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^6B",["^1G",[null,null]]]],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-db","^6?",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^:",19,"^6K",["^ ","^6?",false,"^6C",3,"^6@",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^69",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^6B",["^1G",[null,null]]],"^6@",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^6A",null,"^6B",["^1G",[null,null]],"^8",1,"^7",71,"^9",71,"^6C",3,"^6D",true,"^69",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^6=","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of this\n   chain."],"~$dispatch-sync",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/dispatch-sync","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",41,"^8",1,"^9",41,"^:",19,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",41,"^8",6,"^9",41,"^:",19]],"~$clear-event",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/clear-event","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",116,"^8",1,"^9",116,"^:",17,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",116,"^8",6,"^9",116,"^:",17],"^6X","^6Y"],"~$->interceptor",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/->interceptor","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",142,"^8",1,"^9",142,"^:",19,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",142,"^8",6,"^9",142,"^:",19]],"~$set-loggers!",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/set-loggers!","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",157,"^8",1,"^9",157,"^:",18,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",157,"^8",6,"^9",157,"^:",18]],"~$inject-cofx",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/inject-cofx","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",65,"^8",1,"^9",65,"^:",17,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",65,"^8",6,"^9",65,"^:",17]],"~$get-coeffect",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/get-coeffect","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",143,"^8",1,"^9",143,"^:",18,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",143,"^8",6,"^9",143,"^:",18]],"~$debug",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/debug","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",122,"^8",1,"^9",122,"^:",11,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",122,"^8",6,"^9",122,"^:",11],"^6X","^6Y"],"~$assoc-effect",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/assoc-effect","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",146,"^8",1,"^9",146,"^:",18,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",146,"^8",6,"^9",146,"^:",18]],"~$enqueue",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/enqueue","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",147,"^8",1,"^9",147,"^:",13,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",147,"^8",6,"^9",147,"^:",13]],"~$clear-cofx",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/clear-cofx","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",66,"^8",1,"^9",66,"^:",16,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",66,"^8",6,"^9",66,"^:",16],"^6X","^6Y"],"~$reg-event-ctx",["^ ","^68",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",104,"^8",7,"^9",104,"^:",20,"^69",["^1G",["^6:",["^1G",[["^6N","^71"],["^6N","^72","^71"]]]]],"^6=","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (context-map event-vector) -> context-map\n\n  This form of registration is almost never used. ","^6K",["^ ","^6?",false,"^6C",3,"^6@",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^69",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^6B",["^1G",[null,null]]]],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-ctx","^6?",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^:",20,"^6K",["^ ","^6?",false,"^6C",3,"^6@",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^69",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^6B",["^1G",[null,null]]],"^6@",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^6A",null,"^6B",["^1G",[null,null]],"^8",1,"^7",104,"^9",104,"^6C",3,"^6D",true,"^69",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^6=","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (context-map event-vector) -> context-map\n\n  This form of registration is almost never used. "],"~$reg-fx",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/reg-fx","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",60,"^8",1,"^9",60,"^:",12,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",60,"^8",6,"^9",60,"^:",12]],"~$trim-v",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/trim-v","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",125,"^8",1,"^9",125,"^:",12,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",125,"^8",6,"^9",125,"^:",12],"^6X","^6Y"],"~$clear-sub",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/clear-sub","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",48,"^8",1,"^9",48,"^:",15,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",48,"^8",6,"^9",48,"^:",15],"^6X","^6Y"],"~$dispatch",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/dispatch","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",40,"^8",1,"^9",40,"^:",14,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",40,"^8",6,"^9",40,"^:",14]],"~$after",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/after","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",126,"^8",1,"^9",126,"^:",11,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",126,"^8",6,"^9",126,"^:",11]],"~$add-post-event-callback",["^ ","^68",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",197,"^8",7,"^9",197,"^:",30,"^69",["^1G",["^6:",["^1G",[["~$f"],["^6N","~$f"]]]]],"^6=","Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n  be used at \"remove time\" to get rid of the right callback.\n  ","^6K",["^ ","^6?",false,"^6C",2,"^6@",["^1G",[["~$f"],["^6N","~$f"]]],"^69",["^1G",[["~$f"],["^6N","~$f"]]],"^6B",["^1G",[null,null]]]],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/add-post-event-callback","^6?",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^:",30,"^6K",["^ ","^6?",false,"^6C",2,"^6@",["^1G",[["~$f"],["^6N","~$f"]]],"^69",["^1G",[["~$f"],["^6N","~$f"]]],"^6B",["^1G",[null,null]]],"^6@",["^1G",[["~$f"],["^6N","~$f"]]],"^6A",null,"^6B",["^1G",[null,null]],"^8",1,"^7",197,"^9",197,"^6C",2,"^6D",true,"^69",["^1G",[["~$f"],["^6N","~$f"]]],"^6=","Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n  be used at \"remove time\" to get rid of the right callback.\n  "],"~$reg-cofx",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/reg-cofx","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",64,"^8",1,"^9",64,"^:",14,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",64,"^8",6,"^9",64,"^:",14]],"~$reg-event-fx",["^ ","^68",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",87,"^8",7,"^9",87,"^:",19,"^69",["^1G",["^6:",["^1G",[["^6N","^71"],["^6N","^72","^71"]]]]],"^6=","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (coeffects-map event-vector) -> effects-map\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of the\n   interceptor chain.  These interceptors inject the value of app-db into coeffects,\n   and, later, action effects.","^6K",["^ ","^6?",false,"^6C",3,"^6@",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^69",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^6B",["^1G",[null,null]]]],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/reg-event-fx","^6?",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^:",19,"^6K",["^ ","^6?",false,"^6C",3,"^6@",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^69",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^6B",["^1G",[null,null]]],"^6@",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^6A",null,"^6B",["^1G",[null,null]],"^8",1,"^7",87,"^9",87,"^6C",3,"^6D",true,"^69",["^1G",[["^6N","^71"],["^6N","^72","^71"]]],"^6=","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (coeffects-map event-vector) -> effects-map\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of the\n   interceptor chain.  These interceptors inject the value of app-db into coeffects,\n   and, later, action effects."],"~$register-handler",["^ ","^68",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",225,"^8",7,"^9",225,"^:",23,"^69",["^1G",["^6:",["^1G",[["~$&","^6J"]]]]],"^6K",["^ ","^6?",true,"^6C",0,"^6@",[["^1G",["^6J"]]],"^69",["^1G",[["~$&","^6J"]]],"^6B",["^1G",[null]]]],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/register-handler","^6?",true,"^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^:",23,"^6K",["^ ","^6?",true,"^6C",0,"^6@",[["^1G",["^6J"]]],"^69",["^1G",[["~$&","^6J"]]],"^6B",["^1G",[null]]],"^6@",[["^1G",["^6J"]]],"^6A",null,"^6B",["^1G",[null]],"^8",1,"^7",225,"^9",225,"^6C",0,"^6D",true,"^69",["^1G",[["~$&","^6J"]]]],"~$clear-subscription-cache!",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.core/clear-subscription-cache!","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",49,"^8",1,"^9",49,"^:",31,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/core.cljc","^7",49,"^8",6,"^9",49,"^:",31]]],"^1E",["^ ","^11","^11"],"~:cljs.analyzer/constants",["^ ","^1?",["^J",["~:warn"]],"~:order",["^83"]],"^1K",["^ ","^1@",["^J",[]]],"^1L",["^ "],"^1M",["^13","^11","^1:","^R","^1<","^16","^Y","^V","^W","^10","^18","^Z","^1;","^T"]],"^N","^L","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^4A",[["^87","~:static-fns"],true,["^87","~:elide-asserts"],false,["^87","~:optimize-constants"],null,["^87","~:external-config"],null,["^87","~:tooling-config"],null,["^87","~:emit-constants"],null,["^87","~:infer-externs"],true,["^87","^1T"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^87","~:fn-invoke-direct"],null,["^87","^1V"],"/dev/null"]]]