["^ ","~:output",["^ ","~:js","goog.provide('mranderson047.re_frame.v0v10v2.re_frame.utils');\ngoog.require('cljs.core');\ngoog.require('mranderson047.re_frame.v0v10v2.re_frame.loggers');\n/**\n * Dissociates an entry from a nested associative structure returning a new\n *   nested structure. keys is a sequence of keys. Any empty maps that result\n *   will not be present in the new structure.\n *   The key thing is that 'm' remains identical? to istelf if the path was never present\n */\nmranderson047.re_frame.v0v10v2.re_frame.utils.dissoc_in = (function mranderson047$re_frame$v0v10v2$re_frame$utils$dissoc_in(m,p__32453){\nvar vec__32454 = p__32453;\nvar seq__32455 = cljs.core.seq(vec__32454);\nvar first__32456 = cljs.core.first(seq__32455);\nvar seq__32455__$1 = cljs.core.next(seq__32455);\nvar k = first__32456;\nvar ks = seq__32455__$1;\nvar keys = vec__32454;\nif(ks){\nvar temp__5455__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\nif(cljs.core.truth_(temp__5455__auto__)){\nvar nextmap = temp__5455__auto__;\nvar newmap = (mranderson047.re_frame.v0v10v2.re_frame.utils.dissoc_in.cljs$core$IFn$_invoke$arity$2 ? mranderson047.re_frame.v0v10v2.re_frame.utils.dissoc_in.cljs$core$IFn$_invoke$arity$2(nextmap,ks) : mranderson047.re_frame.v0v10v2.re_frame.utils.dissoc_in.call(null,nextmap,ks));\nif(cljs.core.seq(newmap)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,newmap);\n} else {\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,k);\n}\n} else {\nreturn m;\n}\n} else {\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,k);\n}\n});\nmranderson047.re_frame.v0v10v2.re_frame.utils.first_in_vector = (function mranderson047$re_frame$v0v10v2$re_frame$utils$first_in_vector(v){\nif(cljs.core.vector_QMARK_(v)){\nreturn cljs.core.first(v);\n} else {\nreturn mranderson047.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: expected a vector, but got:\",v], 0));\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","mranderson047/re_frame/v0v10v2/re_frame/utils.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",50],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$mranderson047.re-frame.v0v10v2.re-frame.utils","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$mranderson047.re-frame.v0v10v2.re-frame.loggers","^Q","~$cljs.core","^R","~$goog","^S"],"~:seen",["^J",["~:require"]],"~:uses",["^ ","~$console","^Q"],"~:require-macros",["^ ","^R","^R"],"~:form",["~#list",["~$ns","^L",["^Z",["^U",["^Q","~:refer",["^W"]]]]]],"~:flags",["^ ","^U",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^S","^R","^Q"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","mranderson047/re_frame/v0v10v2/re_frame/utils.cljc"],"~:compiled-at",1535834866656,"~:resource-name","mranderson047/re_frame/v0v10v2/re_frame/utils.cljc","~:warnings",[],"~:source","(ns mranderson047.re-frame.v0v10v2.re-frame.utils\n  (:require\n    [mranderson047.re-frame.v0v10v2.re-frame.loggers :refer [console]]))\n\n(defn dissoc-in\n  \"Dissociates an entry from a nested associative structure returning a new\n  nested structure. keys is a sequence of keys. Any empty maps that result\n  will not be present in the new structure.\n  The key thing is that 'm' remains identical? to istelf if the path was never present\"\n  [m [k & ks :as keys]]\n  (if ks\n    (if-let [nextmap (get m k)]\n      (let [newmap (dissoc-in nextmap ks)]\n        (if (seq newmap)\n          (assoc m k newmap)\n          (dissoc m k)))\n      m)\n    (dissoc m k)))\n\n(defn first-in-vector\n  [v]\n  (if (vector? v)\n    (first v)\n    (console :error \"re-frame: expected a vector, but got:\" v)))\n","~:reader-features",["^J",["~:cljs"]],"~:source-map",["^ ","~i4",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",3],["^ ","^1=",58,"^1>",9],["^ ","^1=",126,"^1>",9,"^K","p__32453"],["^ ","^1=",0,"^1>",10],["^ ","^1=",0,"^1>",10],["^ ","^1=",4,"^1>",10,"^K","vec__32454"],["^ ","^1=",17,"^1>",10,"^K","p__32453"],["^ ","^1=",4,"^1>",11,"^K","seq__32455"],["^ ","^1=",17,"^1>",11],["^ ","^1=",17,"^1>",11,"^K","cljs.core/seq"],["^ ","^1=",31,"^1>",11,"^K","vec__32454"],["^ ","^1=",4,"^1>",12,"^K","first__32456"],["^ ","^1=",19,"^1>",12],["^ ","^1=",19,"^1>",12,"^K","cljs.core/first"],["^ ","^1=",35,"^1>",12,"^K","seq__32455"],["^ ","^1=",4,"^1>",13,"^K","seq__32455"],["^ ","^1=",21,"^1>",13],["^ ","^1=",21,"^1>",13,"^K","cljs.core/next"],["^ ","^1=",36,"^1>",13,"^K","seq__32455"],["^ ","^1=",8,"^1>",14,"^K","first__32456"],["^ ","^1=",9,"^1>",15,"^K","seq__32455"],["^ ","^1=",11,"^1>",16,"^K","vec__32454"],["^ ","^1=",0,"^1>",17]],"~i6",[["^ ","^1=",0,"^1>",9,"^K","mranderson047.re-frame.v0v10v2.re-frame.utils/dissoc-in"]]],"~i9",["^ ","~i3",[["^ ","^1=",124,"^1>",9,"^K","m"]],"~i6",[["^ ","^1=",4,"^1>",14,"^K","k"]],"~i10",[["^ ","^1=",4,"^1>",15,"^K","ks"]],"~i17",[["^ ","^1=",4,"^1>",16,"^K","keys"]]],"^1?",["^ ","~i2",[["^ ","^1=",0,"^1>",17]],"~i6",[["^ ","^1=",3,"^1>",17,"^K","ks"]]],"~i11",["^ ","~i4",[["^ ","^1=",0,"^1>",18],["^ ","^1=",4,"^1>",18,"^K","temp__5455__auto__"],["^ ","^1=",0,"^1>",19],["^ ","^1=",0,"^1>",19],["^ ","^1=",20,"^1>",19,"^K","temp__5455__auto__"],["^ ","^1=",0,"^1>",20],["^ ","^1=",14,"^1>",20,"^K","temp__5455__auto__"],["^ ","^1=",0,"^1>",21]],"~i13",[["^ ","^1=",4,"^1>",20,"^K","nextmap"]],"~i21",[["^ ","^1=",25,"^1>",18]],"~i22",[["^ ","^1=",25,"^1>",18,"^K","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"~i26",[["^ ","^1=",69,"^1>",18,"^K","m"]],"~i28",[["^ ","^1=",71,"^1>",18,"^K","k"]]],"~i12",["^ ","~i6",[["^ ","^1=",0,"^1>",21],["^ ","^1=",0,"^1>",22]],"^1G",[["^ ","^1=",4,"^1>",21,"^K","newmap"]],"~i19",[["^ ","^1=",13,"^1>",21]],"~i20",[["^ ","^1=",14,"^1>",21,"^K","mranderson047.re-frame.v0v10v2.re-frame.utils/dissoc-in"],["^ ","^1=",102,"^1>",21,"^K","mranderson047.re-frame.v0v10v2.re-frame.utils/dissoc-in"],["^ ","^1=",202,"^1>",21,"^K","mranderson047.re-frame.v0v10v2.re-frame.utils/dissoc-in"]],"~i30",[["^ ","^1=",188,"^1>",21,"^K","nextmap"],["^ ","^1=",268,"^1>",21,"^K","nextmap"]],"~i38",[["^ ","^1=",196,"^1>",21,"^K","ks"],["^ ","^1=",276,"^1>",21,"^K","ks"]]],"^1B",["^ ","~i8",[["^ ","^1=",0,"^1>",22]],"^1G",[["^ ","^1=",3,"^1>",22]],"^1B",[["^ ","^1=",3,"^1>",22,"^K","cljs.core/seq"]],"^1@",[["^ ","^1=",17,"^1>",22,"^K","newmap"]]],"~i14",["^ ","^1?",[["^ ","^1=",0,"^1>",23]],"^1A",[["^ ","^1=",7,"^1>",23,"^K","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^1@",[["^ ","^1=",53,"^1>",23,"^K","m"]],"^1H",[["^ ","^1=",55,"^1>",23,"^K","k"]],"^1C",[["^ ","^1=",57,"^1>",23,"^K","newmap"]]],"~i15",["^ ","^1?",[["^ ","^1=",0,"^1>",25]],"^1A",[["^ ","^1=",7,"^1>",25,"^K","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"]],"~i18",[["^ ","^1=",54,"^1>",25,"^K","m"]],"^1I",[["^ ","^1=",56,"^1>",25,"^K","k"]]],"~i16",["^ ","~i6",[["^ ","^1=",0,"^1>",28,"^K","m"]]],"^1@",["^ ","~i4",[["^ ","^1=",0,"^1>",31]],"~i5",[["^ ","^1=",7,"^1>",31,"^K","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"]],"^1G",[["^ ","^1=",54,"^1>",31,"^K","m"]],"^1L",[["^ ","^1=",56,"^1>",31,"^K","k"]]],"^1H",["^ ","~i0",[["^ ","^1=",0,"^1>",34],["^ ","^1=",64,"^1>",34],["^ ","^1=",0,"^1>",35]],"~i6",[["^ ","^1=",0,"^1>",34,"^K","mranderson047.re-frame.v0v10v2.re-frame.utils/first-in-vector"]]],"^1I",["^ ","~i3",[["^ ","^1=",136,"^1>",34,"^K","v"]]],"^1C",["^ ","~i2",[["^ ","^1=",0,"^1>",35]],"~i6",[["^ ","^1=",3,"^1>",35]],"~i7",[["^ ","^1=",3,"^1>",35,"^K","cljs.core/vector?"]],"^1M",[["^ ","^1=",27,"^1>",35,"^K","v"]]],"^1D",["^ ","~i4",[["^ ","^1=",0,"^1>",36]],"~i5",[["^ ","^1=",7,"^1>",36,"^K","cljs.core/first"]],"^1A",[["^ ","^1=",23,"^1>",36,"^K","v"]]],"~i23",["^ ","~i4",[["^ ","^1=",0,"^1>",38],["^ ","^1=",100,"^1>",38],["^ ","^1=",205,"^1>",38]],"~i5",[["^ ","^1=",7,"^1>",38,"^K","mranderson047.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic"]],"~i60",[["^ ","^1=",245,"^1>",38,"^K","v"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^R"],[1535834828000],["^15","goog/math/math.js"],[1505449243000,"^S","~$goog.array","~$goog.asserts"],["^15","goog/array/array.js"],[1505449243000,"^S","^1W"],["^15","goog/debug/error.js"],[1505449243000,"^S"],["^15","goog/dom/nodetype.js"],[1505449243000,"^S"],["^15","goog/object/object.js"],[1505449243000,"^S"],"~:SHADOW-TIMESTAMP",[1535834828000,1535834828000],["^15","goog/math/long.js"],[1505449243000,"^S","^1W","~$goog.reflect"],["^15","goog/functions/functions.js"],[1505449243000,"^S"],["^15","goog/structs/map.js"],[1505449243000,"^S","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^15","goog/asserts/asserts.js"],[1505449243000,"^S","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^15","goog/uri/uri.js"],[1505449243000,"^S","^1V","^1W","^23","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^15","mranderson047/re_frame/v0v10v2/re_frame/utils.cljc"],[1535834828000,"^S","^R","^Q"],["^15","goog/base.js"],[1505449243000],["^15","goog/structs/structs.js"],[1505449243000,"^S","^1V","^20"],["^15","goog/string/string.js"],[1505449243000,"^S"],["^15","goog/reflect/reflect.js"],[1505449243000,"^S"],["^15","goog/string/stringbuffer.js"],[1505449243000,"^S"],["^15","goog/iter/iter.js"],[1505449243000,"^S","^1V","^1W","~$goog.functions","~$goog.math"],["^15","cljs/core.cljs"],[1535834828000,"~$goog.math.Long","~$goog.math.Integer","^23","^20","^1V","~$goog.Uri","~$goog.string.StringBuffer"],["^15","goog/math/integer.js"],[1505449243000,"^S"],["^15","clojure/set.cljs"],[1535834828000,"^S","^R"],["^15","goog/uri/utils.js"],[1505449243000,"^S","^1V","^1W","^23"],["^15","mranderson047/re_frame/v0v10v2/re_frame/loggers.cljc"],[1535834828000,"^S","^R","~$clojure.set"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/utils.cljc","^7",1,"^8",5,"^9",1,"^:",50],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^R","^S","^S"],"^T",["^J",["^U"]],"^V",["^ ","^W","^Q"],"~:defs",["^ ","~$dissoc-in",["^ ","~:protocol-inline",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/utils.cljc","^7",5,"^8",7,"^9",5,"^:",16,"~:arglists",["^Z",["~$quote",["^Z",[["~$m",["~$k","~$&","~$ks","~:as","~$keys"]]]]]],"~:doc","Dissociates an entry from a nested associative structure returning a new\n  nested structure. keys is a sequence of keys. Any empty maps that result\n  will not be present in the new structure.\n  The key thing is that 'm' remains identical? to istelf if the path was never present"],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.utils/dissoc-in","~:variadic",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/utils.cljc","^:",16,"~:method-params",["^Z",[["~$m","~$p__32453"]]],"~:protocol-impl",null,"~:arglists-meta",["^Z",[null,null]],"^8",1,"^7",5,"^9",5,"~:max-fixed-arity",2,"~:fn-var",true,"^2D",["^Z",["^2E",["^Z",[["~$m",["~$k","~$&","^2F","^2G","^2H"]]]]]],"^2I","Dissociates an entry from a nested associative structure returning a new\n  nested structure. keys is a sequence of keys. Any empty maps that result\n  will not be present in the new structure.\n  The key thing is that 'm' remains identical? to istelf if the path was never present"],"~$first-in-vector",["^ ","^2C",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/utils.cljc","^7",20,"^8",7,"^9",20,"^:",22,"^2D",["^Z",["^2E",["^Z",[["~$v"]]]]]],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.utils/first-in-vector","^2K",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/utils.cljc","^:",22,"^2L",["^Z",[["~$v"]]],"^2N",null,"^2O",["^Z",[null,null]],"^8",1,"^7",20,"^9",20,"^2P",1,"^2Q",true,"^2D",["^Z",["^2E",["^Z",[["~$v"]]]]]]],"^X",["^ ","^R","^R"],"~:cljs.analyzer/constants",["^ ","^T",["^J",["~:error"]],"~:order",["^2U"]],"^11",["^ ","^U",["^J",[]]],"^12",["^ "],"^13",["^S","^R","^Q"]],"^N","^L","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1T",[["^2Y","~:static-fns"],true,["^2Y","~:elide-asserts"],false,["^2Y","~:optimize-constants"],null,["^2Y","~:external-config"],null,["^2Y","~:tooling-config"],null,["^2Y","~:emit-constants"],null,["^2Y","~:infer-externs"],true,["^2Y","^1:"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^2Y","~:fn-invoke-direct"],null,["^2Y","^1<"],"/dev/null"]]]