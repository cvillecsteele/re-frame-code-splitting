["^ ","~:output",["^ ","~:js","goog.provide('mranderson047.re_frame.v0v10v2.re_frame.interceptor');\ngoog.require('cljs.core');\ngoog.require('mranderson047.re_frame.v0v10v2.re_frame.loggers');\ngoog.require('mranderson047.re_frame.v0v10v2.re_frame.interop');\ngoog.require('clojure.set');\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.mandatory_interceptor_keys = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"after\",\"after\",594996914),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),null], null), null);\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.interceptor_QMARK_ = (function mranderson047$re_frame$v0v10v2$re_frame$interceptor$interceptor_QMARK_(m){\nreturn ((cljs.core.map_QMARK_(m)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(mranderson047.re_frame.v0v10v2.re_frame.interceptor.mandatory_interceptor_keys,cljs.core.set(cljs.core.keys(m)))));\n});\n/**\n * Create an interceptor from named arguments\n */\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor = (function mranderson047$re_frame$v0v10v2$re_frame$interceptor$__GT_interceptor(var_args){\nvar args__4502__auto__ = [];\nvar len__4499__auto___32470 = arguments.length;\nvar i__4500__auto___32471 = (0);\nwhile(true){\nif((i__4500__auto___32471 < len__4499__auto___32470)){\nargs__4502__auto__.push((arguments[i__4500__auto___32471]));\n\nvar G__32472 = (i__4500__auto___32471 + (1));\ni__4500__auto___32471 = G__32472;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4503__auto__ = ((((0) < args__4502__auto__.length))?(new cljs.core.IndexedSeq(args__4502__auto__.slice((0)),(0),null)):null);\nreturn mranderson047.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic = (function (p__32460){\nvar map__32463 = p__32460;\nvar map__32463__$1 = ((((!((map__32463 == null)))?(((((map__32463.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__32463.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__32463):map__32463);\nvar m = map__32463__$1;\nvar id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32463__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092));\nvar before = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32463__$1,new cljs.core.Keyword(null,\"before\",\"before\",-1633692388));\nvar after = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32463__$1,new cljs.core.Keyword(null,\"after\",\"after\",594996914));\nif(mranderson047.re_frame.v0v10v2.re_frame.interop.debug_enabled_QMARK_){\nvar temp__5455__auto___32477 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(m)),mranderson047.re_frame.v0v10v2.re_frame.interceptor.mandatory_interceptor_keys));\nif(temp__5455__auto___32477){\nvar unknown_keys_32478 = temp__5455__auto___32477;\nmranderson047.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ->interceptor \",m,\" has unknown keys:\",unknown_keys_32478], 0));\n} else {\n}\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),(function (){var or__3922__auto__ = id;\nif(cljs.core.truth_(or__3922__auto__)){\nreturn or__3922__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"unnamed\",\"unnamed\",-26044928);\n}\n})(),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),before,new cljs.core.Keyword(null,\"after\",\"after\",594996914),after], null);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor.cljs$lang$applyTo = (function (seq32457){\nvar self__4487__auto__ = this;\nreturn self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq32457));\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.get_effect = (function mranderson047$re_frame$v0v10v2$re_frame$interceptor$get_effect(var_args){\nvar G__32483 = arguments.length;\nswitch (G__32483) {\ncase 1:\nreturn mranderson047.re_frame.v0v10v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn mranderson047.re_frame.v0v10v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn mranderson047.re_frame.v0v10v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1 = (function (context){\nreturn new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2 = (function (context,key){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null));\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3 = (function (context,key,not_found){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null),not_found);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.get_effect.cljs$lang$maxFixedArity = 3;\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.assoc_effect = (function mranderson047$re_frame$v0v10v2$re_frame$interceptor$assoc_effect(context,key,value){\nreturn cljs.core.assoc_in(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null),value);\n});\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.get_coeffect = (function mranderson047$re_frame$v0v10v2$re_frame$interceptor$get_coeffect(var_args){\nvar G__32500 = arguments.length;\nswitch (G__32500) {\ncase 1:\nreturn mranderson047.re_frame.v0v10v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn mranderson047.re_frame.v0v10v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn mranderson047.re_frame.v0v10v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1 = (function (context){\nreturn new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985).cljs$core$IFn$_invoke$arity$1(context);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2 = (function (context,key){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null));\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$3 = (function (context,key,not_found){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null),not_found);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.get_coeffect.cljs$lang$maxFixedArity = 3;\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.assoc_coeffect = (function mranderson047$re_frame$v0v10v2$re_frame$interceptor$assoc_coeffect(context,key,value){\nreturn cljs.core.assoc_in(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null),value);\n});\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.update_coeffect = (function mranderson047$re_frame$v0v10v2$re_frame$interceptor$update_coeffect(var_args){\nvar args__4502__auto__ = [];\nvar len__4499__auto___32536 = arguments.length;\nvar i__4500__auto___32538 = (0);\nwhile(true){\nif((i__4500__auto___32538 < len__4499__auto___32536)){\nargs__4502__auto__.push((arguments[i__4500__auto___32538]));\n\nvar G__32540 = (i__4500__auto___32538 + (1));\ni__4500__auto___32538 = G__32540;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4503__auto__ = ((((3) < args__4502__auto__.length))?(new cljs.core.IndexedSeq(args__4502__auto__.slice((3)),(0),null)):null);\nreturn mranderson047.re_frame.v0v10v2.re_frame.interceptor.update_coeffect.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4503__auto__);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.update_coeffect.cljs$core$IFn$_invoke$arity$variadic = (function (context,key,f,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.update_in,context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null),f,args);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.update_coeffect.cljs$lang$maxFixedArity = (3);\n\n/** @this {Function} */\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.update_coeffect.cljs$lang$applyTo = (function (seq32528){\nvar G__32529 = cljs.core.first(seq32528);\nvar seq32528__$1 = cljs.core.next(seq32528);\nvar G__32530 = cljs.core.first(seq32528__$1);\nvar seq32528__$2 = cljs.core.next(seq32528__$1);\nvar G__32531 = cljs.core.first(seq32528__$2);\nvar seq32528__$3 = cljs.core.next(seq32528__$2);\nvar self__4486__auto__ = this;\nreturn self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__32529,G__32530,G__32531,seq32528__$3);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.invoke_interceptor_fn = (function mranderson047$re_frame$v0v10v2$re_frame$interceptor$invoke_interceptor_fn(context,interceptor,direction){\nvar temp__5455__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(interceptor,direction);\nif(cljs.core.truth_(temp__5455__auto__)){\nvar f = temp__5455__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(context) : f.call(null,context));\n} else {\nreturn context;\n}\n});\n/**\n * Loop over all interceptors, calling `direction` function on each,\n *   threading the value of `context` through every call.\n * \n *   `direction` is one of `:before` or `:after`.\n * \n *   Each iteration, the next interceptor to process is obtained from\n *   context's `:queue`. After they are processed, interceptors are popped\n *   from `:queue` and added to `:stack`.\n * \n *   After sufficient iteration, `:queue` will be empty, and `:stack` will\n *   contain all interceptors processed.\n * \n *   Returns updated `context`. Ie. the `context` which has been threaded\n *   through all interceptor functions.\n * \n *   Generally speaking, an interceptor's `:before` function will (if present)\n *   add to a `context's` `:coeffects`, while it's `:after` function\n *   will modify the `context`'s `:effects`.  Very approximately.\n * \n *   But because all interceptor functions are given `context`, and can\n *   return a modified version of it, the way is clear for an interceptor\n *   to introspect the stack or queue, or even modify the queue\n *   (add new interceptors via `enqueue`?). This is a very fluid arrangement.\n */\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.invoke_interceptors = (function mranderson047$re_frame$v0v10v2$re_frame$interceptor$invoke_interceptors(context,direction){\nvar context__$1 = context;\nwhile(true){\nvar queue = new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879).cljs$core$IFn$_invoke$arity$1(context__$1);\nif(cljs.core.empty_QMARK_(queue)){\nreturn context__$1;\n} else {\nvar interceptor = cljs.core.peek(queue);\nvar stack = new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930).cljs$core$IFn$_invoke$arity$1(context__$1);\nvar G__32553 = mranderson047.re_frame.v0v10v2.re_frame.interceptor.invoke_interceptor_fn(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(context__$1,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),cljs.core.pop(queue),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,interceptor)], 0)),interceptor,direction);\ncontext__$1 = G__32553;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Add a collection of `interceptors` to the end of `context's` execution `:queue`.\n *   Returns the updated `context`.\n * \n *   In an advanced case, this function could allow an interceptor to add new\n *   interceptors to the `:queue` of a context.\n */\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.enqueue = (function mranderson047$re_frame$v0v10v2$re_frame$interceptor$enqueue(context,interceptors){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,mranderson047.re_frame.v0v10v2.re_frame.interop.empty_queue),interceptors);\n});\n/**\n * Create a fresh context\n */\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.context = (function mranderson047$re_frame$v0v10v2$re_frame$interceptor$context(var_args){\nvar G__32565 = arguments.length;\nswitch (G__32565) {\ncase 2:\nreturn mranderson047.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn mranderson047.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2 = (function (event,interceptors){\nreturn mranderson047.re_frame.v0v10v2.re_frame.interceptor.enqueue(mranderson047.re_frame.v0v10v2.re_frame.interceptor.assoc_coeffect(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"event\",\"event\",301435442),event),interceptors);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$3 = (function (event,interceptors,db){\nreturn mranderson047.re_frame.v0v10v2.re_frame.interceptor.assoc_coeffect(mranderson047.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2(event,interceptors),new cljs.core.Keyword(null,\"db\",\"db\",993250759),db);\n});\n\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.context.cljs$lang$maxFixedArity = 3;\n\n/**\n * Called on completion of `:before` processing, this function prepares/modifies\n * `context` for the backwards sweep of processing in which an interceptor\n * chain's `:after` fns are called.\n * \n *   At this point in processing, the `:queue` is empty and `:stack` holds all\n *   the previously run interceptors. So this function enables the backwards walk\n *   by priming `:queue` with what's currently in `:stack`\n */\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.change_direction = (function mranderson047$re_frame$v0v10v2$re_frame$interceptor$change_direction(context){\nreturn mranderson047.re_frame.v0v10v2.re_frame.interceptor.enqueue(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879)),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930).cljs$core$IFn$_invoke$arity$1(context));\n});\n/**\n * Executes the given chain (coll) of interceptors.\n * \n * Each interceptor has this form:\n *     {:before  (fn [context] ...)     ;; returns possibly modified context\n *      :after   (fn [context] ...)}    ;; `identity` would be a noop\n * \n * Walks the queue of iterceptors from beginning to end, calling the\n * `:before` fn on each, then reverse direction and walk backwards,\n * calling the `:after` fn on each.\n * \n * The last interceptor in the chain presumably wraps an event\n * handler fn. So the overall goal of the process is to \"handle\n * the given event\".\n * \n * Thread a `context` through all calls. `context` has this form:\n * \n *   {:coeffects {:event [:a-query-id :some-param]\n *                :db    <original contents of app-db>}\n *    :effects   {:db    <new value for app-db>\n *                :dispatch  [:an-event-id :param1]}\n *    :queue     <a collection of further interceptors>\n *    :stack     <a collection of interceptors already walked>}\n * \n * `context` has `:coeffects` and `:effects` which, if this was a web\n * server, would be somewhat anologous to `request` and `response`\n * respectively.\n * \n * `coeffects` will contain data like `event` and the initial\n * state of `db` -  the inputs required by the event handler\n * (sitting presumably on the end of the chain), while handler-returned\n * side effects are put into `:effects` including, but not limited to,\n * new values for `db`.\n * \n * The first few interceptors in a chain will likely have `:before`\n * functions which \"prime\" the `context` by adding the event, and\n * the current state of app-db into `:coeffects`. But interceptors can\n * add whatever they want to `:coeffects` - perhaps the event handler needs\n * some information from localstore, or a random number, or access to\n * a DataScript connection.\n * \n * Equally, some interceptors in the chain will have `:after` fn\n * which can process the side effects accumulated into `:effects`\n * including but, not limited to, updates to app-db.\n * \n * Through both stages (before and after), `context` contains a `:queue`\n * of interceptors yet to be processed, and a `:stack` of interceptors\n * already done.  In advanced cases, these values can be modified by the\n * functions through which the context is threaded.\n */\nmranderson047.re_frame.v0v10v2.re_frame.interceptor.execute = (function mranderson047$re_frame$v0v10v2$re_frame$interceptor$execute(event_v,interceptors){\nreturn mranderson047.re_frame.v0v10v2.re_frame.interceptor.invoke_interceptors(mranderson047.re_frame.v0v10v2.re_frame.interceptor.change_direction(mranderson047.re_frame.v0v10v2.re_frame.interceptor.invoke_interceptors(mranderson047.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2(event_v,interceptors),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388))),new cljs.core.Keyword(null,\"after\",\"after\",594996914));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",56],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$mranderson047.re-frame.v0v10v2.re-frame.loggers","^Q","~$mranderson047.re-frame.v0v10v2.re-frame.interop","^R","~$clojure.set","^S","~$set","^S","~$cljs.core","^U","~$goog","^V"],"~:seen",["^J",["~:require"]],"~:uses",["^ ","~$console","^Q","~$empty-queue","^R","~$debug-enabled?","^R"],"~:require-macros",["^ ","^U","^U"],"~:form",["~#list",["~$ns","^L",["^13",["^X",["^Q","~:refer",["^Z"]],["^R","^15",["^[","^10"]],["^S","~:as","^T"]]]]],"~:flags",["^ ","^X",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^V","^U","^Q","^R","^S"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc"],"~:compiled-at",1535834866708,"~:resource-name","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","~:warnings",[],"~:source","(ns mranderson047.re-frame.v0v10v2.re-frame.interceptor\n  (:require\n    [mranderson047.re-frame.v0v10v2.re-frame.loggers :refer [console]]\n    [mranderson047.re-frame.v0v10v2.re-frame.interop :refer [empty-queue debug-enabled?]]\n    [clojure.set :as set]))\n\n\n(def mandatory-interceptor-keys #{:id :after :before})\n\n(defn interceptor?\n  [m]\n  (and (map? m)\n       (= mandatory-interceptor-keys (-> m keys set))))\n\n\n(defn ->interceptor\n  \"Create an interceptor from named arguments\"\n  [& {:as m :keys [id before after]}]\n  (when debug-enabled?\n    (if-let [unknown-keys (seq (set/difference\n                                (-> m keys set)\n                                mandatory-interceptor-keys))]\n      (console :error \"re-frame: ->interceptor \" m \" has unknown keys:\" unknown-keys)))\n  {:id     (or id :unnamed)\n   :before before\n   :after  after })\n\n;; -- Effect Helpers  -----------------------------------------------------------------------------\n\n(defn get-effect\n  ([context]\n   (:effects context))\n  ([context key]\n   (get-in context [:effects key]))\n  ([context key not-found]\n   (get-in context [:effects key] not-found)))\n\n\n(defn assoc-effect\n  [context key value]\n  (assoc-in context [:effects key] value))\n\n;; -- CoEffect Helpers  ---------------------------------------------------------------------------\n\n(defn get-coeffect\n  ([context]\n   (:coeffects context))\n  ([context key]\n   (get-in context [:coeffects key]))\n  ([context key not-found]\n   (get-in context [:coeffects key] not-found)))\n\n(defn assoc-coeffect\n  [context key value]\n  (assoc-in context [:coeffects key] value))\n\n(defn update-coeffect\n  [context key f & args]\n  (apply update-in context [:coeffects key] f args))\n\n;; -- Execute Interceptor Chain  ------------------------------------------------------------------\n\n\n(defn- invoke-interceptor-fn\n  [context interceptor direction]\n  (if-let [f (get interceptor direction)]\n    (f context)\n    context))\n\n\n(defn- invoke-interceptors\n  \"Loop over all interceptors, calling `direction` function on each,\n  threading the value of `context` through every call.\n\n  `direction` is one of `:before` or `:after`.\n\n  Each iteration, the next interceptor to process is obtained from\n  context's `:queue`. After they are processed, interceptors are popped\n  from `:queue` and added to `:stack`.\n\n  After sufficient iteration, `:queue` will be empty, and `:stack` will\n  contain all interceptors processed.\n\n  Returns updated `context`. Ie. the `context` which has been threaded\n  through all interceptor functions.\n\n  Generally speaking, an interceptor's `:before` function will (if present)\n  add to a `context's` `:coeffects`, while it's `:after` function\n  will modify the `context`'s `:effects`.  Very approximately.\n\n  But because all interceptor functions are given `context`, and can\n  return a modified version of it, the way is clear for an interceptor\n  to introspect the stack or queue, or even modify the queue\n  (add new interceptors via `enqueue`?). This is a very fluid arrangement.\"\n  ([context direction]\n   (loop [context context]\n     (let [queue (:queue context)]        ;; future interceptors\n       (if (empty? queue)\n         context\n         (let [interceptor (peek queue)   ;; next interceptor to call\n               stack (:stack context)]    ;; already completed interceptors\n           (recur (-> context\n                      (assoc :queue (pop queue)\n                             :stack (conj stack interceptor))\n                      (invoke-interceptor-fn interceptor direction)))))))))\n\n\n(defn enqueue\n  \"Add a collection of `interceptors` to the end of `context's` execution `:queue`.\n  Returns the updated `context`.\n\n  In an advanced case, this function could allow an interceptor to add new\n  interceptors to the `:queue` of a context.\"\n  [context interceptors]\n  (update context :queue\n          (fnil into empty-queue)\n          interceptors))\n\n\n(defn- context\n  \"Create a fresh context\"\n  ([event interceptors]\n  (-> {}\n      (assoc-coeffect :event event)\n      (enqueue interceptors)))\n  ([event interceptors db]      ;; only used in tests, probably a hack, remove ?  XXX\n   (-> (context event interceptors)\n       (assoc-coeffect :db db))))\n\n\n(defn- change-direction\n  \"Called on completion of `:before` processing, this function prepares/modifies\n   `context` for the backwards sweep of processing in which an interceptor\n   chain's `:after` fns are called.\n\n  At this point in processing, the `:queue` is empty and `:stack` holds all\n  the previously run interceptors. So this function enables the backwards walk\n  by priming `:queue` with what's currently in `:stack`\"\n  [context]\n  (-> context\n      (dissoc :queue)\n      (enqueue (:stack context))))\n\n\n(defn execute\n  \"Executes the given chain (coll) of interceptors.\n\n   Each interceptor has this form:\n       {:before  (fn [context] ...)     ;; returns possibly modified context\n        :after   (fn [context] ...)}    ;; `identity` would be a noop\n\n   Walks the queue of iterceptors from beginning to end, calling the\n   `:before` fn on each, then reverse direction and walk backwards,\n   calling the `:after` fn on each.\n\n   The last interceptor in the chain presumably wraps an event\n   handler fn. So the overall goal of the process is to \\\"handle\n   the given event\\\".\n\n   Thread a `context` through all calls. `context` has this form:\n\n     {:coeffects {:event [:a-query-id :some-param]\n                  :db    <original contents of app-db>}\n      :effects   {:db    <new value for app-db>\n                  :dispatch  [:an-event-id :param1]}\n      :queue     <a collection of further interceptors>\n      :stack     <a collection of interceptors already walked>}\n\n   `context` has `:coeffects` and `:effects` which, if this was a web\n   server, would be somewhat anologous to `request` and `response`\n   respectively.\n\n   `coeffects` will contain data like `event` and the initial\n   state of `db` -  the inputs required by the event handler\n   (sitting presumably on the end of the chain), while handler-returned\n   side effects are put into `:effects` including, but not limited to,\n   new values for `db`.\n\n   The first few interceptors in a chain will likely have `:before`\n   functions which \\\"prime\\\" the `context` by adding the event, and\n   the current state of app-db into `:coeffects`. But interceptors can\n   add whatever they want to `:coeffects` - perhaps the event handler needs\n   some information from localstore, or a random number, or access to\n   a DataScript connection.\n\n   Equally, some interceptors in the chain will have `:after` fn\n   which can process the side effects accumulated into `:effects`\n   including but, not limited to, updates to app-db.\n\n   Through both stages (before and after), `context` contains a `:queue`\n   of interceptors yet to be processed, and a `:stack` of interceptors\n   already done.  In advanced cases, these values can be modified by the\n   functions through which the context is threaded.\"\n  [event-v interceptors]\n  (-> (context event-v interceptors)\n      (invoke-interceptors :before)\n      change-direction\n      (invoke-interceptors :after)))\n","~:reader-features",["^J",["~:cljs"]],"~:source-map",["^ ","~i7",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",5],["^ ","^1C",81,"^1D",5],["^ ","^1C",162,"^1D",5],["^ ","^1C",221,"^1D",5],["^ ","^1C",276,"^1D",5]],"~i5",[["^ ","^1C",0,"^1D",5,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/mandatory-interceptor-keys"]]],"~i9",["^ ","~i0",[["^ ","^1C",0,"^1D",6],["^ ","^1C",73,"^1D",6],["^ ","^1C",0,"^1D",7]],"~i6",[["^ ","^1C",0,"^1D",6,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/interceptor?"]]],"~i10",["^ ","~i3",[["^ ","^1C",154,"^1D",6,"^K","m"]]],"~i11",["^ ","~i2",[["^ ","^1C",0,"^1D",7]],"~i7",[["^ ","^1C",9,"^1D",7]],"~i8",[["^ ","^1C",9,"^1D",7,"^K","cljs.core/map?"]],"~i13",[["^ ","^1C",30,"^1D",7,"^K","m"]]],"~i12",["^ ","~i7",[["^ ","^1C",38,"^1D",7]],"~i8",[["^ ","^1C",38,"^1D",7,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1E",[["^ ","^1C",83,"^1D",7,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/mandatory-interceptor-keys"]],"~i37",[["^ ","^1C",162,"^1D",7],["^ ","^1C",176,"^1D",7]],"~i41",[["^ ","^1C",191,"^1D",7,"^K","m"]],"~i43",[["^ ","^1C",176,"^1D",7,"^K","cljs.core/keys"]],"~i48",[["^ ","^1C",162,"^1D",7,"^K","cljs.core/set"]]],"~i15",["^ ","~i0",[["^ ","^1C",0,"^1D",9],["^ ","^1C",0,"^1D",9],["^ ","^1C",71,"^1D",12],["^ ","^1C",150,"^1D",12,"^K","var_args"],["^ ","^1C",0,"^1D",13],["^ ","^1C",0,"^1D",13],["^ ","^1C",4,"^1D",13,"^K","args__4502__auto__"],["^ ","^1C",25,"^1D",13],["^ ","^1C",0,"^1D",14],["^ ","^1C",0,"^1D",14],["^ ","^1C",4,"^1D",14,"^K","len__4499__auto__"],["^ ","^1C",30,"^1D",14],["^ ","^1C",30,"^1D",14],["^ ","^1C",0,"^1D",15],["^ ","^1C",0,"^1D",15],["^ ","^1C",4,"^1D",15,"^K","i__4500__auto__"],["^ ","^1C",28,"^1D",15],["^ ","^1C",0,"^1D",17],["^ ","^1C",0,"^1D",17],["^ ","^1C",3,"^1D",17],["^ ","^1C",4,"^1D",17,"^K","i__4500__auto__"],["^ ","^1C",28,"^1D",17,"^K","len__4499__auto__"],["^ ","^1C",0,"^1D",18],["^ ","^1C",0,"^1D",18],["^ ","^1C",0,"^1D",18,"^K","args__4502__auto__"],["^ ","^1C",24,"^1D",18],["^ ","^1C",25,"^1D",18],["^ ","^1C",35,"^1D",18,"^K","i__4500__auto__"],["^ ","^1C",0,"^1D",20],["^ ","^1C",15,"^1D",20],["^ ","^1C",16,"^1D",20,"^K","i__4500__auto__"],["^ ","^1C",40,"^1D",20],["^ ","^1C",0,"^1D",24],["^ ","^1C",0,"^1D",28],["^ ","^1C",4,"^1D",28,"^K","argseq__4503__auto__"],["^ ","^1C",27,"^1D",28],["^ ","^1C",29,"^1D",28],["^ ","^1C",30,"^1D",28],["^ ","^1C",36,"^1D",28],["^ ","^1C",36,"^1D",28,"^K","args__4502__auto__"],["^ ","^1C",64,"^1D",28],["^ ","^1C",64,"^1D",28],["^ ","^1C",69,"^1D",28,"^K","cljs.core/IndexedSeq"],["^ ","^1C",90,"^1D",28],["^ ","^1C",90,"^1D",28,"^K","args__4502__auto__"],["^ ","^1C",115,"^1D",28],["^ ","^1C",120,"^1D",28],["^ ","^1C",124,"^1D",28],["^ ","^1C",131,"^1D",28],["^ ","^1C",0,"^1D",29],["^ ","^1C",0,"^1D",29],["^ ","^1C",7,"^1D",29,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/->interceptor"],["^ ","^1C",113,"^1D",29,"^K","argseq__4503__auto__"],["^ ","^1C",0,"^1D",32],["^ ","^1C",0,"^1D",32],["^ ","^1C",0,"^1D",32],["^ ","^1C",0,"^1D",32,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/->interceptor"],["^ ","^1C",108,"^1D",32],["^ ","^1C",119,"^1D",32,"^K","p__32460"],["^ ","^1C",0,"^1D",33],["^ ","^1C",0,"^1D",33],["^ ","^1C",4,"^1D",33,"^K","map__32463"],["^ ","^1C",17,"^1D",33,"^K","p__32460"],["^ ","^1C",4,"^1D",34,"^K","map__32463"],["^ ","^1C",21,"^1D",34],["^ ","^1C",23,"^1D",34],["^ ","^1C",25,"^1D",34],["^ ","^1C",27,"^1D",34],["^ ","^1C",28,"^1D",34,"^K","map__32463"],["^ ","^1C",42,"^1D",34],["^ ","^1C",50,"^1D",34],["^ ","^1C",52,"^1D",34],["^ ","^1C",54,"^1D",34],["^ ","^1C",55,"^1D",34],["^ ","^1C",55,"^1D",34,"^K","map__32463"],["^ ","^1C",104,"^1D",34],["^ ","^1C",115,"^1D",34],["^ ","^1C",116,"^1D",34,"^K","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1C",148,"^1D",34],["^ ","^1C",148,"^1D",34,"^K","map__32463"],["^ ","^1C",179,"^1D",34],["^ ","^1C",184,"^1D",34],["^ ","^1C",191,"^1D",34],["^ ","^1C",199,"^1D",34],["^ ","^1C",199,"^1D",34,"^K","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1C",245,"^1D",34,"^K","cljs.core/hash-map"],["^ ","^1C",264,"^1D",34,"^K","map__32463"],["^ ","^1C",276,"^1D",34,"^K","map__32463"],["^ ","^1C",8,"^1D",35,"^K","map__32463"],["^ ","^1C",9,"^1D",36],["^ ","^1C",9,"^1D",36,"^K","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1C",53,"^1D",36,"^K","map__32463"],["^ ","^1C",68,"^1D",36],["^ ","^1C",13,"^1D",37],["^ ","^1C",13,"^1D",37,"^K","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1C",57,"^1D",37,"^K","map__32463"],["^ ","^1C",72,"^1D",37],["^ ","^1C",12,"^1D",38],["^ ","^1C",12,"^1D",38,"^K","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1C",56,"^1D",38,"^K","map__32463"],["^ ","^1C",71,"^1D",38],["^ ","^1C",0,"^1D",39],["^ ","^1C",0,"^1D",49],["^ ","^1C",50,"^1D",49],["^ ","^1C",5,"^1D",55],["^ ","^1C",70,"^1D",55],["^ ","^1C",0,"^1D",58],["^ ","^1C",0,"^1D",58],["^ ","^1C",0,"^1D",58,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/->interceptor"],["^ ","^1C",95,"^1D",58],["^ ","^1C",0,"^1D",60],["^ ","^1C",0,"^1D",61],["^ ","^1C",0,"^1D",61],["^ ","^1C",0,"^1D",61,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/->interceptor"],["^ ","^1C",89,"^1D",61],["^ ","^1C",100,"^1D",61,"^K","seq32457"],["^ ","^1C",0,"^1D",62],["^ ","^1C",0,"^1D",62],["^ ","^1C",4,"^1D",62,"^K","self__4487__auto__"],["^ ","^1C",25,"^1D",62],["^ ","^1C",0,"^1D",63],["^ ","^1C",0,"^1D",63],["^ ","^1C",7,"^1D",63,"^K","self__4487__auto__"],["^ ","^1C",63,"^1D",63],["^ ","^1C",63,"^1D",63,"^K","cljs.core/seq"],["^ ","^1C",77,"^1D",63,"^K","seq32457"],["^ ","^1C",0,"^1D",66]],"~i6",[["^ ","^1C",0,"^1D",12,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/->interceptor"]]],"~i17",["^ ","^1E",[["^ ","^1C",4,"^1D",35,"^K","m"]],"~i19",[["^ ","^1C",4,"^1D",36,"^K","id"]],"~i22",[["^ ","^1C",4,"^1D",37,"^K","before"]],"~i29",[["^ ","^1C",4,"^1D",38,"^K","after"]]],"~i18",["^ ","~i2",[["^ ","^1C",0,"^1D",39],["^ ","^1C",0,"^1D",40],["^ ","^1C",0,"^1D",47]],"~i8",[["^ ","^1C",3,"^1D",39,"^K","mranderson047.re-frame.v0v10v2.re-frame.interop/debug-enabled?"]]],"^1O",["^ ","~i4",[["^ ","^1C",0,"^1D",40],["^ ","^1C",4,"^1D",40,"^K","temp__5455__auto__"],["^ ","^1C",0,"^1D",41],["^ ","^1C",0,"^1D",41],["^ ","^1C",3,"^1D",41,"^K","temp__5455__auto__"],["^ ","^1C",0,"^1D",42],["^ ","^1C",25,"^1D",42,"^K","temp__5455__auto__"],["^ ","^1C",0,"^1D",43],["^ ","^1C",0,"^1D",45]],"^1G",[["^ ","^1C",4,"^1D",42,"^K","unknown-keys"]],"~i26",[["^ ","^1C",31,"^1D",40]],"~i27",[["^ ","^1C",31,"^1D",40,"^K","cljs.core/seq"]],"~i31",[["^ ","^1C",45,"^1D",40]],"~i32",[["^ ","^1C",45,"^1D",40,"^K","clojure.set.difference.cljs$core$IFn$_invoke$arity$2"]]],"~i20",["^ ","^1V",[["^ ","^1C",98,"^1D",40],["^ ","^1C",112,"^1D",40]],"~i36",[["^ ","^1C",127,"^1D",40,"^K","m"]],"~i38",[["^ ","^1C",112,"^1D",40,"^K","cljs.core/keys"]],"^1K",[["^ ","^1C",98,"^1D",40,"^K","cljs.core/set"]]],"~i21",["^ ","^1V",[["^ ","^1C",131,"^1D",40,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/mandatory-interceptor-keys"]]],"^1P",["^ ","~i6",[["^ ","^1C",0,"^1D",43],["^ ","^1C",93,"^1D",43],["^ ","^1C",198,"^1D",43],["^ ","^1C",227,"^1D",43]],"~i7",[["^ ","^1C",0,"^1D",43,"^K","mranderson047.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic"]],"~i49",[["^ ","^1C",225,"^1D",43,"^K","m"]],"~i72",[["^ ","^1C",248,"^1D",43,"^K","unknown-keys"]]],"~i23",["^ ","^1F",[["^ ","^1C",100,"^1D",49],["^ ","^1C",117,"^1D",49,"^K","or__3922__auto__"],["^ ","^1C",0,"^1D",50],["^ ","^1C",0,"^1D",50],["^ ","^1C",20,"^1D",50,"^K","or__3922__auto__"],["^ ","^1C",0,"^1D",51,"^K","or__3922__auto__"],["^ ","^1C",0,"^1D",53]],"^1M",[["^ ","^1C",136,"^1D",49,"^K","id"]]],"~i24",["^ ","^1F",[["^ ","^1C",63,"^1D",55,"^K","before"]]],"~i25",["^ ","^1F",[["^ ","^1C",124,"^1D",55,"^K","after"]]],"^1Q",["^ ","~i0",[["^ ","^1C",0,"^1D",66],["^ ","^1C",0,"^1D",66],["^ ","^1C",65,"^1D",66],["^ ","^1C",138,"^1D",66,"^K","var_args"],["^ ","^1C",0,"^1D",67],["^ ","^1C",0,"^1D",67],["^ ","^1C",4,"^1D",67,"^K","G__32483"],["^ ","^1C",15,"^1D",67],["^ ","^1C",15,"^1D",67],["^ ","^1C",0,"^1D",68],["^ ","^1C",0,"^1D",68],["^ ","^1C",8,"^1D",68,"^K","G__32483"],["^ ","^1C",5,"^1D",69],["^ ","^1C",0,"^1D",70],["^ ","^1C",7,"^1D",70,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-effect"],["^ ","^1C",100,"^1D",70],["^ ","^1C",101,"^1D",70],["^ ","^1C",111,"^1D",70],["^ ","^1C",5,"^1D",73],["^ ","^1C",0,"^1D",74],["^ ","^1C",7,"^1D",74,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-effect"],["^ ","^1C",100,"^1D",74],["^ ","^1C",101,"^1D",74],["^ ","^1C",111,"^1D",74],["^ ","^1C",117,"^1D",74],["^ ","^1C",118,"^1D",74],["^ ","^1C",128,"^1D",74],["^ ","^1C",5,"^1D",77],["^ ","^1C",0,"^1D",78],["^ ","^1C",7,"^1D",78,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-effect"],["^ ","^1C",100,"^1D",78],["^ ","^1C",101,"^1D",78],["^ ","^1C",111,"^1D",78],["^ ","^1C",117,"^1D",78],["^ ","^1C",118,"^1D",78],["^ ","^1C",128,"^1D",78],["^ ","^1C",134,"^1D",78],["^ ","^1C",135,"^1D",78],["^ ","^1C",145,"^1D",78],["^ ","^1C",0,"^1D",82],["^ ","^1C",6,"^1D",82],["^ ","^1C",11,"^1D",82,"^K","js/Error"],["^ ","^1C",17,"^1D",82],["^ ","^1C",18,"^1D",82],["^ ","^1C",80,"^1D",82],["^ ","^1C",80,"^1D",82],["^ ","^1C",0,"^1D",87],["^ ","^1C",0,"^1D",87],["^ ","^1C",95,"^1D",87],["^ ","^1C",0,"^1D",88],["^ ","^1C",0,"^1D",91],["^ ","^1C",0,"^1D",91],["^ ","^1C",95,"^1D",91],["^ ","^1C",0,"^1D",92],["^ ","^1C",0,"^1D",95],["^ ","^1C",0,"^1D",95],["^ ","^1C",95,"^1D",95],["^ ","^1C",0,"^1D",96],["^ ","^1C",0,"^1D",99],["^ ","^1C",0,"^1D",99],["^ ","^1C",89,"^1D",99],["^ ","^1C",0,"^1D",101]],"~i6",[["^ ","^1C",0,"^1D",66,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-effect"],["^ ","^1C",0,"^1D",87,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-effect"],["^ ","^1C",0,"^1D",91,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-effect"],["^ ","^1C",0,"^1D",95,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-effect"],["^ ","^1C",0,"^1D",99,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-effect"]]],"~i30",["^ ","~i4",[["^ ","^1C",106,"^1D",87,"^K","context"]]],"^1U",["^ ","~i3",[["^ ","^1C",0,"^1D",88],["^ ","^1C",7,"^1D",88]],"^1G",[["^ ","^1C",96,"^1D",88,"^K","context"]]],"^1V",["^ ","~i4",[["^ ","^1C",106,"^1D",91,"^K","context"]],"^1H",[["^ ","^1C",114,"^1D",91,"^K","key"]]],"~i33",["^ ","~i3",[["^ ","^1C",0,"^1D",92],["^ ","^1C",62,"^1D",92],["^ ","^1C",145,"^1D",92]],"~i4",[["^ ","^1C",7,"^1D",92,"^K","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1F",[["^ ","^1C",54,"^1D",92,"^K","context"]],"^1Q",[["^ ","^1C",204,"^1D",92,"^K","key"]]],"~i34",["^ ","~i4",[["^ ","^1C",106,"^1D",95,"^K","context"]],"^1H",[["^ ","^1C",114,"^1D",95,"^K","key"]],"~i16",[["^ ","^1C",118,"^1D",95,"^K","not-found"]]],"~i35",["^ ","~i3",[["^ ","^1C",0,"^1D",96],["^ ","^1C",62,"^1D",96],["^ ","^1C",145,"^1D",96]],"~i4",[["^ ","^1C",7,"^1D",96,"^K","cljs.core.get_in.cljs$core$IFn$_invoke$arity$3"]],"^1F",[["^ ","^1C",54,"^1D",96,"^K","context"]],"^1Q",[["^ ","^1C",204,"^1D",96,"^K","key"]],"^26",[["^ ","^1C",216,"^1D",96,"^K","not-found"]]],"^1Y",["^ ","~i0",[["^ ","^1C",0,"^1D",101],["^ ","^1C",67,"^1D",101],["^ ","^1C",0,"^1D",102]],"~i6",[["^ ","^1C",0,"^1D",101,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/assoc-effect"]]],"~i39",["^ ","~i3",[["^ ","^1C",142,"^1D",101,"^K","context"]],"^1F",[["^ ","^1C",150,"^1D",101,"^K","key"]],"^1M",[["^ ","^1C",154,"^1D",101,"^K","value"]]],"~i40",["^ ","~i2",[["^ ","^1C",0,"^1D",102],["^ ","^1C",34,"^1D",102],["^ ","^1C",117,"^1D",102]],"~i3",[["^ ","^1C",7,"^1D",102,"^K","cljs.core/assoc-in"]],"^1H",[["^ ","^1C",26,"^1D",102,"^K","context"]],"^24",[["^ ","^1C",176,"^1D",102,"^K","key"]],"^28",[["^ ","^1C",188,"^1D",102,"^K","value"]]],"~i44",["^ ","~i0",[["^ ","^1C",0,"^1D",104],["^ ","^1C",0,"^1D",104],["^ ","^1C",67,"^1D",104],["^ ","^1C",142,"^1D",104,"^K","var_args"],["^ ","^1C",0,"^1D",105],["^ ","^1C",0,"^1D",105],["^ ","^1C",4,"^1D",105,"^K","G__32500"],["^ ","^1C",15,"^1D",105],["^ ","^1C",15,"^1D",105],["^ ","^1C",0,"^1D",106],["^ ","^1C",0,"^1D",106],["^ ","^1C",8,"^1D",106,"^K","G__32500"],["^ ","^1C",5,"^1D",107],["^ ","^1C",0,"^1D",108],["^ ","^1C",7,"^1D",108,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"],["^ ","^1C",102,"^1D",108],["^ ","^1C",103,"^1D",108],["^ ","^1C",113,"^1D",108],["^ ","^1C",5,"^1D",111],["^ ","^1C",0,"^1D",112],["^ ","^1C",7,"^1D",112,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"],["^ ","^1C",102,"^1D",112],["^ ","^1C",103,"^1D",112],["^ ","^1C",113,"^1D",112],["^ ","^1C",119,"^1D",112],["^ ","^1C",120,"^1D",112],["^ ","^1C",130,"^1D",112],["^ ","^1C",5,"^1D",115],["^ ","^1C",0,"^1D",116],["^ ","^1C",7,"^1D",116,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"],["^ ","^1C",102,"^1D",116],["^ ","^1C",103,"^1D",116],["^ ","^1C",113,"^1D",116],["^ ","^1C",119,"^1D",116],["^ ","^1C",120,"^1D",116],["^ ","^1C",130,"^1D",116],["^ ","^1C",136,"^1D",116],["^ ","^1C",137,"^1D",116],["^ ","^1C",147,"^1D",116],["^ ","^1C",0,"^1D",120],["^ ","^1C",6,"^1D",120],["^ ","^1C",11,"^1D",120,"^K","js/Error"],["^ ","^1C",17,"^1D",120],["^ ","^1C",18,"^1D",120],["^ ","^1C",80,"^1D",120],["^ ","^1C",80,"^1D",120],["^ ","^1C",0,"^1D",125],["^ ","^1C",0,"^1D",125],["^ ","^1C",97,"^1D",125],["^ ","^1C",0,"^1D",126],["^ ","^1C",0,"^1D",129],["^ ","^1C",0,"^1D",129],["^ ","^1C",97,"^1D",129],["^ ","^1C",0,"^1D",130],["^ ","^1C",0,"^1D",133],["^ ","^1C",0,"^1D",133],["^ ","^1C",97,"^1D",133],["^ ","^1C",0,"^1D",134],["^ ","^1C",0,"^1D",137],["^ ","^1C",0,"^1D",137],["^ ","^1C",91,"^1D",137],["^ ","^1C",0,"^1D",139]],"~i6",[["^ ","^1C",0,"^1D",104,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"],["^ ","^1C",0,"^1D",125,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"],["^ ","^1C",0,"^1D",129,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"],["^ ","^1C",0,"^1D",133,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"],["^ ","^1C",0,"^1D",137,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"]]],"~i45",["^ ","~i4",[["^ ","^1C",108,"^1D",125,"^K","context"]]],"~i46",["^ ","~i3",[["^ ","^1C",0,"^1D",126],["^ ","^1C",7,"^1D",126]],"^1M",[["^ ","^1C",99,"^1D",126,"^K","context"]]],"~i47",["^ ","~i4",[["^ ","^1C",108,"^1D",129,"^K","context"]],"^1H",[["^ ","^1C",116,"^1D",129,"^K","key"]]],"^1L",["^ ","~i3",[["^ ","^1C",0,"^1D",130],["^ ","^1C",62,"^1D",130],["^ ","^1C",145,"^1D",130]],"~i4",[["^ ","^1C",7,"^1D",130,"^K","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1F",[["^ ","^1C",54,"^1D",130,"^K","context"]],"^1U",[["^ ","^1C",207,"^1D",130,"^K","key"]]],"^1[",["^ ","~i4",[["^ ","^1C",108,"^1D",133,"^K","context"]],"^1H",[["^ ","^1C",116,"^1D",133,"^K","key"]],"^27",[["^ ","^1C",120,"^1D",133,"^K","not-found"]]],"~i50",["^ ","~i3",[["^ ","^1C",0,"^1D",134],["^ ","^1C",62,"^1D",134],["^ ","^1C",145,"^1D",134]],"~i4",[["^ ","^1C",7,"^1D",134,"^K","cljs.core.get_in.cljs$core$IFn$_invoke$arity$3"]],"^1F",[["^ ","^1C",54,"^1D",134,"^K","context"]],"^1U",[["^ ","^1C",207,"^1D",134,"^K","key"]],"^1X",[["^ ","^1C",219,"^1D",134,"^K","not-found"]]],"~i52",["^ ","~i0",[["^ ","^1C",0,"^1D",139],["^ ","^1C",69,"^1D",139],["^ ","^1C",0,"^1D",140]],"~i6",[["^ ","^1C",0,"^1D",139,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/assoc-coeffect"]]],"~i53",["^ ","~i3",[["^ ","^1C",146,"^1D",139,"^K","context"]],"^1F",[["^ ","^1C",154,"^1D",139,"^K","key"]],"^1M",[["^ ","^1C",158,"^1D",139,"^K","value"]]],"~i54",["^ ","~i2",[["^ ","^1C",0,"^1D",140],["^ ","^1C",34,"^1D",140],["^ ","^1C",117,"^1D",140]],"~i3",[["^ ","^1C",7,"^1D",140,"^K","cljs.core/assoc-in"]],"^1H",[["^ ","^1C",26,"^1D",140,"^K","context"]],"^1V",[["^ ","^1C",179,"^1D",140,"^K","key"]],"^1I",[["^ ","^1C",191,"^1D",140,"^K","value"]]],"~i56",["^ ","~i0",[["^ ","^1C",0,"^1D",142],["^ ","^1C",0,"^1D",142],["^ ","^1C",70,"^1D",142],["^ ","^1C",148,"^1D",142,"^K","var_args"],["^ ","^1C",0,"^1D",143],["^ ","^1C",0,"^1D",143],["^ ","^1C",4,"^1D",143,"^K","args__4502__auto__"],["^ ","^1C",25,"^1D",143],["^ ","^1C",0,"^1D",144],["^ ","^1C",0,"^1D",144],["^ ","^1C",4,"^1D",144,"^K","len__4499__auto__"],["^ ","^1C",30,"^1D",144],["^ ","^1C",30,"^1D",144],["^ ","^1C",0,"^1D",145],["^ ","^1C",0,"^1D",145],["^ ","^1C",4,"^1D",145,"^K","i__4500__auto__"],["^ ","^1C",28,"^1D",145],["^ ","^1C",0,"^1D",147],["^ ","^1C",0,"^1D",147],["^ ","^1C",3,"^1D",147],["^ ","^1C",4,"^1D",147,"^K","i__4500__auto__"],["^ ","^1C",28,"^1D",147,"^K","len__4499__auto__"],["^ ","^1C",0,"^1D",148],["^ ","^1C",0,"^1D",148],["^ ","^1C",0,"^1D",148,"^K","args__4502__auto__"],["^ ","^1C",24,"^1D",148],["^ ","^1C",25,"^1D",148],["^ ","^1C",35,"^1D",148,"^K","i__4500__auto__"],["^ ","^1C",0,"^1D",150],["^ ","^1C",15,"^1D",150],["^ ","^1C",16,"^1D",150,"^K","i__4500__auto__"],["^ ","^1C",40,"^1D",150],["^ ","^1C",0,"^1D",154],["^ ","^1C",0,"^1D",158],["^ ","^1C",4,"^1D",158,"^K","argseq__4503__auto__"],["^ ","^1C",27,"^1D",158],["^ ","^1C",29,"^1D",158],["^ ","^1C",30,"^1D",158],["^ ","^1C",36,"^1D",158],["^ ","^1C",36,"^1D",158,"^K","args__4502__auto__"],["^ ","^1C",64,"^1D",158],["^ ","^1C",64,"^1D",158],["^ ","^1C",69,"^1D",158,"^K","cljs.core/IndexedSeq"],["^ ","^1C",90,"^1D",158],["^ ","^1C",90,"^1D",158,"^K","args__4502__auto__"],["^ ","^1C",115,"^1D",158],["^ ","^1C",120,"^1D",158],["^ ","^1C",124,"^1D",158],["^ ","^1C",131,"^1D",158],["^ ","^1C",0,"^1D",159],["^ ","^1C",0,"^1D",159],["^ ","^1C",7,"^1D",159,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/update-coeffect"],["^ ","^1C",112,"^1D",159],["^ ","^1C",113,"^1D",159],["^ ","^1C",123,"^1D",159],["^ ","^1C",129,"^1D",159],["^ ","^1C",130,"^1D",159],["^ ","^1C",140,"^1D",159],["^ ","^1C",146,"^1D",159],["^ ","^1C",147,"^1D",159],["^ ","^1C",157,"^1D",159],["^ ","^1C",163,"^1D",159,"^K","argseq__4503__auto__"],["^ ","^1C",0,"^1D",162],["^ ","^1C",0,"^1D",162],["^ ","^1C",0,"^1D",162],["^ ","^1C",0,"^1D",162,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/update-coeffect"],["^ ","^1C",107,"^1D",162],["^ ","^1C",0,"^1D",163],["^ ","^1C",0,"^1D",166],["^ ","^1C",0,"^1D",166],["^ ","^1C",0,"^1D",166,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/update-coeffect"],["^ ","^1C",94,"^1D",166],["^ ","^1C",0,"^1D",168],["^ ","^1C",0,"^1D",169],["^ ","^1C",0,"^1D",169],["^ ","^1C",0,"^1D",169,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/update-coeffect"],["^ ","^1C",88,"^1D",169],["^ ","^1C",99,"^1D",169,"^K","seq32528"],["^ ","^1C",0,"^1D",170],["^ ","^1C",0,"^1D",170],["^ ","^1C",4,"^1D",170,"^K","G__32529"],["^ ","^1C",15,"^1D",170],["^ ","^1C",15,"^1D",170,"^K","cljs.core/first"],["^ ","^1C",31,"^1D",170,"^K","seq32528"],["^ ","^1C",4,"^1D",171,"^K","seq32528"],["^ ","^1C",19,"^1D",171],["^ ","^1C",19,"^1D",171,"^K","cljs.core/next"],["^ ","^1C",34,"^1D",171,"^K","seq32528"],["^ ","^1C",4,"^1D",172,"^K","G__32530"],["^ ","^1C",15,"^1D",172],["^ ","^1C",15,"^1D",172,"^K","cljs.core/first"],["^ ","^1C",31,"^1D",172,"^K","seq32528"],["^ ","^1C",4,"^1D",173,"^K","seq32528"],["^ ","^1C",19,"^1D",173],["^ ","^1C",19,"^1D",173,"^K","cljs.core/next"],["^ ","^1C",34,"^1D",173,"^K","seq32528"],["^ ","^1C",4,"^1D",174,"^K","G__32531"],["^ ","^1C",15,"^1D",174],["^ ","^1C",15,"^1D",174,"^K","cljs.core/first"],["^ ","^1C",31,"^1D",174,"^K","seq32528"],["^ ","^1C",4,"^1D",175,"^K","seq32528"],["^ ","^1C",19,"^1D",175],["^ ","^1C",19,"^1D",175,"^K","cljs.core/next"],["^ ","^1C",34,"^1D",175,"^K","seq32528"],["^ ","^1C",0,"^1D",176],["^ ","^1C",0,"^1D",176],["^ ","^1C",4,"^1D",176,"^K","self__4486__auto__"],["^ ","^1C",25,"^1D",176],["^ ","^1C",0,"^1D",177],["^ ","^1C",0,"^1D",177],["^ ","^1C",7,"^1D",177,"^K","self__4486__auto__"],["^ ","^1C",63,"^1D",177,"^K","G__32529"],["^ ","^1C",72,"^1D",177,"^K","G__32530"],["^ ","^1C",81,"^1D",177,"^K","G__32531"],["^ ","^1C",90,"^1D",177,"^K","seq32528"],["^ ","^1C",0,"^1D",180]],"~i6",[["^ ","^1C",0,"^1D",142,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/update-coeffect"]]],"~i57",["^ ","~i3",[["^ ","^1C",118,"^1D",162,"^K","context"]],"^1F",[["^ ","^1C",126,"^1D",162,"^K","key"]],"^1M",[["^ ","^1C",130,"^1D",162,"^K","f"]],"^1O",[["^ ","^1C",132,"^1D",162,"^K","args"]]],"~i58",["^ ","~i2",[["^ ","^1C",0,"^1D",163],["^ ","^1C",81,"^1D",163],["^ ","^1C",164,"^1D",163]],"~i3",[["^ ","^1C",7,"^1D",163,"^K","cljs.core.apply.cljs$core$IFn$_invoke$arity$5"]],"~i9",[["^ ","^1C",53,"^1D",163,"^K","cljs.core/update-in"]],"^1O",[["^ ","^1C",73,"^1D",163,"^K","context"]],"^29",[["^ ","^1C",226,"^1D",163,"^K","key"]],"^2;",[["^ ","^1C",238,"^1D",163,"^K","f"]],"^2=",[["^ ","^1C",240,"^1D",163,"^K","args"]]],"~i63",["^ ","~i0",[["^ ","^1C",0,"^1D",180],["^ ","^1C",76,"^1D",180],["^ ","^1C",0,"^1D",181]],"~i7",[["^ ","^1C",0,"^1D",180,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/invoke-interceptor-fn"]]],"~i64",["^ ","~i3",[["^ ","^1C",160,"^1D",180,"^K","context"]],"^1F",[["^ ","^1C",168,"^1D",180,"^K","interceptor"]],"^21",[["^ ","^1C",180,"^1D",180,"^K","direction"]]],"~i65",["^ ","~i2",[["^ ","^1C",0,"^1D",181],["^ ","^1C",4,"^1D",181,"^K","temp__5455__auto__"],["^ ","^1C",0,"^1D",182],["^ ","^1C",0,"^1D",182],["^ ","^1C",20,"^1D",182,"^K","temp__5455__auto__"],["^ ","^1C",0,"^1D",183],["^ ","^1C",8,"^1D",183,"^K","temp__5455__auto__"],["^ ","^1C",0,"^1D",184]],"^1F",[["^ ","^1C",4,"^1D",183,"^K","f"]],"^1G",[["^ ","^1C",25,"^1D",181]],"~i14",[["^ ","^1C",25,"^1D",181,"^K","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^1R",[["^ ","^1C",69,"^1D",181,"^K","interceptor"]],"^24",[["^ ","^1C",81,"^1D",181,"^K","direction"]]],"~i66",["^ ","~i4",[["^ ","^1C",0,"^1D",184]],"~i5",[["^ ","^1C",8,"^1D",184,"^K","f"],["^ ","^1C",42,"^1D",184,"^K","f"],["^ ","^1C",85,"^1D",184,"^K","f"]],"~i7",[["^ ","^1C",74,"^1D",184,"^K","context"],["^ ","^1C",97,"^1D",184,"^K","context"]]],"~i67",["^ ","~i4",[["^ ","^1C",0,"^1D",186,"^K","context"]]],"~i70",["^ ","~i0",[["^ ","^1C",0,"^1D",189],["^ ","^1C",74,"^1D",214],["^ ","^1C",0,"^1D",215]],"~i7",[["^ ","^1C",0,"^1D",214,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/invoke-interceptors"]]],"~i94",["^ ","~i4",[["^ ","^1C",156,"^1D",214,"^K","context"]],"^1H",[["^ ","^1C",164,"^1D",214,"^K","direction"]]],"~i95",["^ ","~i3",[["^ ","^1C",0,"^1D",215],["^ ","^1C",0,"^1D",217]],"^1E",[["^ ","^1C",4,"^1D",215,"^K","context"]],"^1R",[["^ ","^1C",18,"^1D",215,"^K","context"]]],"~i96",["^ ","~i5",[["^ ","^1C",0,"^1D",217],["^ ","^1C",0,"^1D",218]],"^1F",[["^ ","^1C",4,"^1D",217,"^K","queue"]],"^1N",[["^ ","^1C",12,"^1D",217],["^ ","^1C",12,"^1D",217]],"^23",[["^ ","^1C",97,"^1D",217,"^K","context"]]],"~i97",["^ ","~i7",[["^ ","^1C",0,"^1D",218]],"^1F",[["^ ","^1C",3,"^1D",218]],"^1H",[["^ ","^1C",3,"^1D",218,"^K","cljs.core/empty?"]],"^1O",[["^ ","^1C",26,"^1D",218,"^K","queue"]]],"~i98",["^ ","~i9",[["^ ","^1C",0,"^1D",219,"^K","context"]]],"~i99",["^ ","~i9",[["^ ","^1C",0,"^1D",221],["^ ","^1C",0,"^1D",223]],"^1M",[["^ ","^1C",4,"^1D",221,"^K","interceptor"]],"^1T",[["^ ","^1C",18,"^1D",221]],"~i28",[["^ ","^1C",18,"^1D",221,"^K","cljs.core/peek"]],"^25",[["^ ","^1C",33,"^1D",221,"^K","queue"]]],"~i100",["^ ","^1M",[["^ ","^1C",4,"^1D",222,"^K","stack"]],"^1Z",[["^ ","^1C",12,"^1D",222],["^ ","^1C",12,"^1D",222]],"^1Q",[["^ ","^1C",97,"^1D",222,"^K","context"]]],"~i101",["^ ","^1F",[["^ ","^1C",0,"^1D",223]],"^1P",[["^ ","^1C",142,"^1D",223,"^K","context"]]],"~i102",["^ ","^1P",[["^ ","^1C",89,"^1D",223],["^ ","^1C",154,"^1D",223],["^ ","^1C",280,"^1D",223]],"^21",[["^ ","^1C",89,"^1D",223,"^K","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic"]],"^1X",[["^ ","^1C",209,"^1D",223]],"^1I",[["^ ","^1C",209,"^1D",223,"^K","cljs.core/pop"]],"^1J",[["^ ","^1C",223,"^1D",223,"^K","queue"]]],"~i103",["^ ","^1X",[["^ ","^1C",335,"^1D",223]],"^1I",[["^ ","^1C",335,"^1D",223,"^K","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"~i42",[["^ ","^1C",380,"^1D",223,"^K","stack"]],"^1L",[["^ ","^1C",386,"^1D",223,"^K","interceptor"]]],"~i104",["^ ","^1P",[["^ ","^1C",15,"^1D",223]],"^21",[["^ ","^1C",15,"^1D",223,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/invoke-interceptor-fn"]],"^2<",[["^ ","^1C",405,"^1D",223,"^K","interceptor"]],"^2D",[["^ ","^1C",417,"^1D",223,"^K","direction"]]],"~i107",["^ ","~i0",[["^ ","^1C",0,"^1D",230],["^ ","^1C",62,"^1D",237],["^ ","^1C",0,"^1D",238]],"~i6",[["^ ","^1C",0,"^1D",237,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/enqueue"]]],"~i113",["^ ","~i3",[["^ ","^1C",132,"^1D",237,"^K","context"]],"^1F",[["^ ","^1C",140,"^1D",237,"^K","interceptors"]]],"~i114",["^ ","~i2",[["^ ","^1C",0,"^1D",238],["^ ","^1C",62,"^1D",238]],"~i3",[["^ ","^1C",7,"^1D",238,"^K","cljs.core.update.cljs$core$IFn$_invoke$arity$4"]],"^1E",[["^ ","^1C",54,"^1D",238,"^K","context"]]],"~i115",["^ ","^1E",[["^ ","^1C",117,"^1D",238]],"^1F",[["^ ","^1C",117,"^1D",238,"^K","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2"]],"^27",[["^ ","^1C",162,"^1D",238,"^K","cljs.core/into"]],"^1Z",[["^ ","^1C",177,"^1D",238,"^K","mranderson047.re-frame.v0v10v2.re-frame.interop/empty-queue"]]],"~i116",["^ ","^1E",[["^ ","^1C",238,"^1D",238,"^K","interceptors"]]],"~i119",["^ ","~i0",[["^ ","^1C",0,"^1D",240],["^ ","^1C",0,"^1D",240],["^ ","^1C",62,"^1D",243],["^ ","^1C",132,"^1D",243,"^K","var_args"],["^ ","^1C",0,"^1D",244],["^ ","^1C",0,"^1D",244],["^ ","^1C",4,"^1D",244,"^K","G__32565"],["^ ","^1C",15,"^1D",244],["^ ","^1C",15,"^1D",244],["^ ","^1C",0,"^1D",245],["^ ","^1C",0,"^1D",245],["^ ","^1C",8,"^1D",245,"^K","G__32565"],["^ ","^1C",5,"^1D",246],["^ ","^1C",0,"^1D",247],["^ ","^1C",7,"^1D",247,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/context"],["^ ","^1C",97,"^1D",247],["^ ","^1C",98,"^1D",247],["^ ","^1C",108,"^1D",247],["^ ","^1C",114,"^1D",247],["^ ","^1C",115,"^1D",247],["^ ","^1C",125,"^1D",247],["^ ","^1C",5,"^1D",250],["^ ","^1C",0,"^1D",251],["^ ","^1C",7,"^1D",251,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/context"],["^ ","^1C",97,"^1D",251],["^ ","^1C",98,"^1D",251],["^ ","^1C",108,"^1D",251],["^ ","^1C",114,"^1D",251],["^ ","^1C",115,"^1D",251],["^ ","^1C",125,"^1D",251],["^ ","^1C",131,"^1D",251],["^ ","^1C",132,"^1D",251],["^ ","^1C",142,"^1D",251],["^ ","^1C",0,"^1D",255],["^ ","^1C",6,"^1D",255],["^ ","^1C",11,"^1D",255,"^K","js/Error"],["^ ","^1C",17,"^1D",255],["^ ","^1C",18,"^1D",255],["^ ","^1C",80,"^1D",255],["^ ","^1C",80,"^1D",255],["^ ","^1C",0,"^1D",260],["^ ","^1C",0,"^1D",260],["^ ","^1C",92,"^1D",260],["^ ","^1C",0,"^1D",261],["^ ","^1C",0,"^1D",264],["^ ","^1C",0,"^1D",264],["^ ","^1C",92,"^1D",264],["^ ","^1C",0,"^1D",265],["^ ","^1C",0,"^1D",268],["^ ","^1C",0,"^1D",268],["^ ","^1C",86,"^1D",268],["^ ","^1C",0,"^1D",270]],"~i7",[["^ ","^1C",0,"^1D",243,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/context"],["^ ","^1C",0,"^1D",260,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/context"],["^ ","^1C",0,"^1D",264,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/context"],["^ ","^1C",0,"^1D",268,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/context"]]],"~i121",["^ ","~i4",[["^ ","^1C",103,"^1D",260,"^K","event"]],"^1E",[["^ ","^1C",109,"^1D",260,"^K","interceptors"]]],"~i123",["^ ","~i6",[["^ ","^1C",67,"^1D",261],["^ ","^1C",134,"^1D",261],["^ ","^1C",169,"^1D",261]],"~i7",[["^ ","^1C",67,"^1D",261,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/assoc-coeffect"]],"^1Q",[["^ ","^1C",223,"^1D",261,"^K","event"]]],"~i124",["^ ","~i6",[["^ ","^1C",0,"^1D",261]],"~i7",[["^ ","^1C",7,"^1D",261,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/enqueue"]],"^1M",[["^ ","^1C",230,"^1D",261,"^K","interceptors"]]],"~i125",["^ ","~i4",[["^ ","^1C",103,"^1D",264,"^K","event"]],"^1E",[["^ ","^1C",109,"^1D",264,"^K","interceptors"]],"^21",[["^ ","^1C",122,"^1D",264,"^K","db"]]],"~i126",["^ ","~i7",[["^ ","^1C",74,"^1D",265]],"~i8",[["^ ","^1C",74,"^1D",265,"^K","mranderson047.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2"]],"^27",[["^ ","^1C",164,"^1D",265,"^K","event"]],"^1P",[["^ ","^1C",170,"^1D",265,"^K","interceptors"]]],"~i127",["^ ","~i7",[["^ ","^1C",0,"^1D",265],["^ ","^1C",184,"^1D",265]],"~i8",[["^ ","^1C",7,"^1D",265,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/assoc-coeffect"]],"^1T",[["^ ","^1C",232,"^1D",265,"^K","db"]]],"~i130",["^ ","~i0",[["^ ","^1C",0,"^1D",270],["^ ","^1C",71,"^1D",279],["^ ","^1C",0,"^1D",280]],"~i7",[["^ ","^1C",0,"^1D",279,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/change-direction"]]],"~i138",["^ ","~i3",[["^ ","^1C",150,"^1D",279,"^K","context"]]],"~i139",["^ ","~i6",[["^ ","^1C",114,"^1D",280,"^K","context"]]],"~i140",["^ ","~i6",[["^ ","^1C",67,"^1D",280],["^ ","^1C",122,"^1D",280]],"~i7",[["^ ","^1C",67,"^1D",280,"^K","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"]]],"~i141",["^ ","~i6",[["^ ","^1C",0,"^1D",280]],"~i7",[["^ ","^1C",7,"^1D",280,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/enqueue"]],"^1M",[["^ ","^1C",178,"^1D",280],["^ ","^1C",178,"^1D",280]],"^21",[["^ ","^1C",263,"^1D",280,"^K","context"]]],"~i144",["^ ","~i0",[["^ ","^1C",0,"^1D",282],["^ ","^1C",62,"^1D",332],["^ ","^1C",0,"^1D",333]],"~i6",[["^ ","^1C",0,"^1D",332,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/execute"]]],"~i193",["^ ","~i3",[["^ ","^1C",132,"^1D",332,"^K","event-v"]],"^1F",[["^ ","^1C",140,"^1D",332,"^K","interceptors"]]],"~i194",["^ ","~i6",[["^ ","^1C",220,"^1D",333]],"~i7",[["^ ","^1C",220,"^1D",333,"^K","mranderson047.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2"]],"^1M",[["^ ","^1C",310,"^1D",333,"^K","event-v"]],"^21",[["^ ","^1C",318,"^1D",333,"^K","interceptors"]]],"~i195",["^ ","~i6",[["^ ","^1C",148,"^1D",333],["^ ","^1C",332,"^1D",333]],"~i7",[["^ ","^1C",148,"^1D",333,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/invoke-interceptors"]]],"~i196",["^ ","~i6",[["^ ","^1C",79,"^1D",333,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/change-direction"]]],"~i197",["^ ","~i6",[["^ ","^1C",0,"^1D",333],["^ ","^1C",79,"^1D",333],["^ ","^1C",392,"^1D",333]],"~i7",[["^ ","^1C",7,"^1D",333,"^K","mranderson047.re-frame.v0v10v2.re-frame.interceptor/invoke-interceptors"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1535834828000,1535834828000,0,"~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"],["^1;","goog/dom/tagname.js"],[1505449243000,"^V","~$goog.dom.HtmlElement"],["^3H","node_modules/fbjs/lib/camelize.js"],[1535834828000,1535834828000,1506381453000,"^3I"],["~:macro","^U"],[1535834828000],["^1;","goog/math/math.js"],[1505449243000,"^V","~$goog.array","~$goog.asserts"],["^1;","mranderson047/reagent/v0v8v0_alpha2/reagent/impl/component.cljs"],[1535834828000,"^V","^U","^?","^=","~$mranderson047.reagent.v0v8v0-alpha2.reagent.impl.util","~$mranderson047.reagent.v0v8v0-alpha2.reagent.impl.batching","~$mranderson047.reagent.v0v8v0-alpha2.reagent.ratom","~$mranderson047.reagent.v0v8v0-alpha2.reagent.interop","~$mranderson047.reagent.v0v8v0-alpha2.reagent.debug"],["^1;","goog/labs/useragent/browser.js"],[1505449243000,"^V","^3N","~$goog.labs.userAgent.util","~$goog.object","~$goog.string"],["^3M","^3S"],[1535834828000],["^1;","goog/array/array.js"],[1505449243000,"^V","^3O"],["^3H","node_modules/prop-types/checkPropTypes.js"],[1535834828000,1535834828000,1519255688000,"^3I","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"],["^3H","node_modules/fbjs/lib/emptyFunction.js"],[1535834828000,1535834828000,1506381453000,"^3I"],["^1;","goog/debug/error.js"],[1505449243000,"^V"],["^1;","mranderson047/reagent/v0v8v0_alpha2/reagent/dom.cljs"],[1535834828000,"^V","^U","^A","^3P","~$mranderson047.reagent.v0v8v0-alpha2.reagent.impl.template","^3Q","^3R","^3T","^3S"],["^3H","node_modules/fbjs/lib/emptyObject.js"],[1535834828000,1535834828000,1506381454000,"^3I"],["^1;","mranderson047/re_frame/v0v10v2/re_frame/interop.cljs"],[1535834828000,"^V","^U","~$goog.async.nextTick","~$mranderson047.reagent.v0v8v0-alpha2.reagent.core","^3R"],["^1;","goog/dom/nodetype.js"],[1505449243000,"^V"],["^3H","node_modules/fbjs/lib/shallowEqual.js"],[1535834828000,1535834828000,1506381454000,"^3I"],["^1;","mranderson047/reagent/v0v8v0_alpha2/reagent/impl/template.cljs"],[1535834828000,"^V","^U","^=","~$clojure.string","~$clojure.walk","^3P","~$mranderson047.reagent.v0v8v0-alpha2.reagent.impl.component","^3Q","^3R","^3S","^3T"],["^1;","mranderson047/reagent/v0v8v0_alpha2/reagent/impl/batching.cljs"],[1535834828000,"^V","^U","^3T","^3S","^3P","^42"],["^3H","node_modules/fbjs/lib/hyphenate.js"],[1535834828000,1535834828000,1506381454000,"^3I"],["^3H","node_modules/create-react-class/factory.js"],[1535834828000,1535834828000,1517346959000,"^3I","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","^3X","^3Y"],["^3H","node_modules/react/index.js"],[1535834828000,1535834828000,0,"^3I","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"],["^1;","shadow/js.js"],[1535834828000,"^V"],["^1;","goog/object/object.js"],[1505449243000,"^V"],["^3H","node_modules/react-dom/cjs/react-dom.production.min.js"],[1535834828000,1535834828000,0,"^3I","^3X","^=","~$module$node_modules$fbjs$lib$ExecutionEnvironment","^45","~$module$node_modules$fbjs$lib$emptyFunction","~$module$node_modules$fbjs$lib$getActiveElement","~$module$node_modules$fbjs$lib$shallowEqual","~$module$node_modules$fbjs$lib$containsNode","^46"],"~:SHADOW-TIMESTAMP",[1535834828000,1535834828000],["^3H","node_modules/react/cjs/react.development.js"],[1535834828000,1535834828000,0,"^3I","^45","^3X","^46","^3Y","^4:","~$module$node_modules$prop_types$checkPropTypes"],["^3H","node_modules/fbjs/lib/isNode.js"],[1535834828000,1535834828000,1506381456000,"^3I"],["^1;","goog/math/long.js"],[1505449243000,"^V","^3O","~$goog.reflect"],["^3M","^41"],[1535834828000],["^3H","node_modules/fbjs/lib/warning.js"],[1535834828000,1535834828000,1506381455000,"^3I","^4:"],["^1;","goog/functions/functions.js"],[1505449243000,"^V"],["^1;","clojure/walk.cljs"],[1535834828000,"^V","^U"],["^1;","goog/structs/map.js"],[1505449243000,"^V","~$goog.iter.Iterator","~$goog.iter.StopIteration","^3V"],["^1;","goog/labs/useragent/engine.js"],[1505449243000,"^V","^3N","^3U","^3W"],["^1;","goog/asserts/asserts.js"],[1505449243000,"^V","~$goog.debug.Error","~$goog.dom.NodeType","^3W"],["^1;","goog/uri/uri.js"],[1505449243000,"^V","^3N","^3O","^3W","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1;","mranderson047/reagent/v0v8v0_alpha2/reagent/core.cljs"],[1535834828000,"^V","^U","^=","^3[","^44","^3P","^3Q","^3R","^3T","^3S","~$mranderson047.reagent.v0v8v0-alpha2.reagent.dom"],["^3M","^3T"],[1535834828000],["^3H","node_modules/object-assign/index.js"],[1535834828000,1535834828000,1484580833000,"^3I"],["^3H","node_modules/fbjs/lib/containsNode.js"],[1535834828000,1535834828000,1506381456000,"^3I","~$module$node_modules$fbjs$lib$isTextNode"],["^3H","node_modules/fbjs/lib/hyphenateStyleName.js"],[1535834828000,1535834828000,1506381454000,"^3I","~$module$node_modules$fbjs$lib$hyphenate"],["^1;","goog/base.js"],[1505449243000],["^1;","goog/structs/structs.js"],[1505449243000,"^V","^3N","^3V"],["^1;","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc"],[1535834828000,"^V","^U","^Q","^R","^S"],["^1;","mranderson047/reagent/v0v8v0_alpha2/reagent/interop.cljs"],[1535834828000,"^V","^U"],["^1;","mranderson047/reagent/v0v8v0_alpha2/reagent/ratom.cljs"],[1535834828000,"^V","^U","^3P","^3T","^3Q","^S"],["^1;","clojure/string.cljs"],[1535834828000,"^V","^U","^3W","~$goog.string.StringBuffer"],["^3H","node_modules/fbjs/lib/ExecutionEnvironment.js"],[1535834828000,1535834828000,1506381453000,"^3I"],["^3H","node_modules/create-react-class/index.js"],[1535834828000,1535834828000,1517346956000,"^3I","^=","~$module$node_modules$create_react_class$factory"],["^3H","node_modules/react/cjs/react.production.min.js"],[1535834828000,1535834828000,0,"^3I","^45","^3X","^46","^4:"],["^1;","goog/debug/entrypointregistry.js"],[1505449243000,"^V","^3O"],["^1;","goog/string/string.js"],[1505449243000,"^V"],["^1;","goog/reflect/reflect.js"],[1505449243000,"^V"],["^1;","goog/labs/useragent/util.js"],[1505449243000,"^V","^3W"],["^1;","goog/string/stringbuffer.js"],[1505449243000,"^V"],["^1;","mranderson047/reagent/v0v8v0_alpha2/reagent/impl/util.cljs"],[1535834828000,"^V","^U","^3T","^3S","^42"],["^1;","goog/iter/iter.js"],[1505449243000,"^V","^3N","^3O","~$goog.functions","~$goog.math"],["^1;","goog/async/nexttick.js"],[1505449243000,"^V","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^4O","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"],["^3H","node_modules/fbjs/lib/getActiveElement.js"],[1535834828000,1535834828000,1506381456000,"^3I"],["^3H","node_modules/fbjs/lib/camelizeStyleName.js"],[1535834828000,1535834828000,1506381453000,"^3I","~$module$node_modules$fbjs$lib$camelize"],["^3H","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1535834828000,1535834828000,1519255688000,"^3I"],["^1;","goog/dom/htmlelement.js"],[1505449243000,"^V"],["^1;","cljs/core.cljs"],[1535834828000,"~$goog.math.Long","~$goog.math.Integer","^3W","^3V","^3N","~$goog.Uri","^4M"],["^3M","^3R"],[1535834828000],["^1;","goog/math/integer.js"],[1505449243000,"^V"],["^1;","mranderson047/reagent/v0v8v0_alpha2/reagent/debug.cljs"],[1535834828000,"^V","^U"],["^3H","node_modules/react-dom/cjs/react-dom.development.js"],[1535834828000,1535834828000,0,"^3I","^3X","^=","^3Y","^49","^45","^4:","^4?","^4;","^4<","^4=","^46","~$module$node_modules$fbjs$lib$hyphenateStyleName","~$module$node_modules$fbjs$lib$camelizeStyleName"],["^1;","clojure/set.cljs"],[1535834828000,"^V","^U"],["^1;","goog/uri/utils.js"],[1505449243000,"^V","^3N","^3O","^3W"],["^1;","mranderson047/re_frame/v0v10v2/re_frame/loggers.cljc"],[1535834828000,"^V","^U","^S"],["^3H","node_modules/fbjs/lib/isTextNode.js"],[1535834828000,1535834828000,1506381456000,"^3I","~$module$node_modules$fbjs$lib$isNode"],["^3H","node_modules/fbjs/lib/invariant.js"],[1535834828000,1535834828000,1506381455000,"^3I"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",1,"^8",5,"^9",1,"^:",56],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^R","^S","^S","^T","^S","^U","^U","^V","^V"],"^W",["^J",["^X"]],"~:shadow/js-access-global",["^J",["Error"]],"^Y",["^ ","^Z","^Q","^[","^R","^10","^R"],"~:defs",["^ ","~$invoke-interceptors",["^ ","~:protocol-inline",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",71,"^8",8,"^9",71,"^:",27,"~:private",true,"~:arglists",["^13",["~$quote",["^13",[["~$context","~$direction"]]]]],"~:doc","Loop over all interceptors, calling `direction` function on each,\n  threading the value of `context` through every call.\n\n  `direction` is one of `:before` or `:after`.\n\n  Each iteration, the next interceptor to process is obtained from\n  context's `:queue`. After they are processed, interceptors are popped\n  from `:queue` and added to `:stack`.\n\n  After sufficient iteration, `:queue` will be empty, and `:stack` will\n  contain all interceptors processed.\n\n  Returns updated `context`. Ie. the `context` which has been threaded\n  through all interceptor functions.\n\n  Generally speaking, an interceptor's `:before` function will (if present)\n  add to a `context's` `:coeffects`, while it's `:after` function\n  will modify the `context`'s `:effects`.  Very approximately.\n\n  But because all interceptor functions are given `context`, and can\n  return a modified version of it, the way is clear for an interceptor\n  to introspect the stack or queue, or even modify the queue\n  (add new interceptors via `enqueue`?). This is a very fluid arrangement."],"^55",true,"^K","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor/invoke-interceptors","~:variadic",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",27,"~:method-params",["^13",[["^58","^59"]]],"~:protocol-impl",null,"~:arglists-meta",["^13",[null,null]],"^8",1,"^7",71,"^9",71,"~:max-fixed-arity",2,"~:fn-var",true,"^56",["^13",["^57",["^13",[["^58","^59"]]]]],"^5:","Loop over all interceptors, calling `direction` function on each,\n  threading the value of `context` through every call.\n\n  `direction` is one of `:before` or `:after`.\n\n  Each iteration, the next interceptor to process is obtained from\n  context's `:queue`. After they are processed, interceptors are popped\n  from `:queue` and added to `:stack`.\n\n  After sufficient iteration, `:queue` will be empty, and `:stack` will\n  contain all interceptors processed.\n\n  Returns updated `context`. Ie. the `context` which has been threaded\n  through all interceptor functions.\n\n  Generally speaking, an interceptor's `:before` function will (if present)\n  add to a `context's` `:coeffects`, while it's `:after` function\n  will modify the `context`'s `:effects`.  Very approximately.\n\n  But because all interceptor functions are given `context`, and can\n  return a modified version of it, the way is clear for an interceptor\n  to introspect the stack or queue, or even modify the queue\n  (add new interceptors via `enqueue`?). This is a very fluid arrangement."],"~$assoc-coeffect",["^ ","^54",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",53,"^8",7,"^9",53,"^:",21,"^56",["^13",["^57",["^13",[["^58","~$key","~$value"]]]]]],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor/assoc-coeffect","^5<",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",21,"^5=",["^13",[["^58","^5C","^5D"]]],"^5>",null,"^5?",["^13",[null,null]],"^8",1,"^7",53,"^9",53,"^5@",3,"^5A",true,"^56",["^13",["^57",["^13",[["^58","^5C","^5D"]]]]]],"~$update-coeffect",["^ ","^54",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",57,"^8",7,"^9",57,"^:",22,"^56",["^13",["^57",["^13",[["^58","^5C","~$f","~$&","~$args"]]]]],"~:top-fn",["^ ","^5<",true,"^5@",3,"^5=",[["^13",["^58","^5C","~$f","^5G"]]],"^56",["^13",[["^58","^5C","~$f","~$&","^5G"]]],"^5?",["^13",[null]]]],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor/update-coeffect","^5<",true,"^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",22,"^5H",["^ ","^5<",true,"^5@",3,"^5=",[["^13",["^58","^5C","~$f","^5G"]]],"^56",["^13",[["^58","^5C","~$f","~$&","^5G"]]],"^5?",["^13",[null]]],"^5=",[["^13",["^58","^5C","~$f","^5G"]]],"^5>",null,"^5?",["^13",[null]],"^8",1,"^7",57,"^9",57,"^5@",3,"^5A",true,"^56",["^13",[["^58","^5C","~$f","~$&","^5G"]]]],"~$invoke-interceptor-fn",["^ ","^54",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",64,"^8",8,"^9",64,"^:",29,"^55",true,"^56",["^13",["^57",["^13",[["^58","~$interceptor","^59"]]]]]],"^55",true,"^K","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor/invoke-interceptor-fn","^5<",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",29,"^5=",["^13",[["^58","^5K","^59"]]],"^5>",null,"^5?",["^13",[null,null]],"^8",1,"^7",64,"^9",64,"^5@",3,"^5A",true,"^56",["^13",["^57",["^13",[["^58","^5K","^59"]]]]]],"~$get-effect",["^ ","^54",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",30,"^8",7,"^9",30,"^:",17,"^56",["^13",["^57",["^13",[["^58"],["^58","^5C"],["^58","^5C","~$not-found"]]]]],"^5H",["^ ","^5<",false,"^5@",3,"^5=",["^13",[["^58"],["^58","^5C"],["^58","^5C","^5N"]]],"^56",["^13",[["^58"],["^58","^5C"],["^58","^5C","^5N"]]],"^5?",["^13",[null,null,null]]]],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-effect","^5<",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",17,"^5H",["^ ","^5<",false,"^5@",3,"^5=",["^13",[["^58"],["^58","^5C"],["^58","^5C","^5N"]]],"^56",["^13",[["^58"],["^58","^5C"],["^58","^5C","^5N"]]],"^5?",["^13",[null,null,null]]],"^5=",["^13",[["^58"],["^58","^5C"],["^58","^5C","^5N"]]],"^5>",null,"^5?",["^13",[null,null,null]],"^8",1,"^7",30,"^9",30,"^5@",3,"^5A",true,"^56",["^13",[["^58"],["^58","^5C"],["^58","^5C","^5N"]]]],"~$->interceptor",["^ ","^54",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",16,"^8",7,"^9",16,"^:",20,"^56",["^13",["^57",["^13",[["~$&",["^ ","^16","~$m","~:keys",["~$id","~$before","~$after"]]]]]]],"^5:","Create an interceptor from named arguments","^5H",["^ ","^5<",true,"^5@",0,"^5=",[["^13",[["^ ","^16","~$m","^5Q",["^5R","^5S","^5T"]]]]],"^56",["^13",[["~$&",["^ ","^16","~$m","^5Q",["^5R","^5S","^5T"]]]]],"^5?",["^13",[null]]]],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor/->interceptor","^5<",true,"^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",20,"^5H",["^ ","^5<",true,"^5@",0,"^5=",[["^13",[["^ ","^16","~$m","^5Q",["^5R","^5S","^5T"]]]]],"^56",["^13",[["~$&",["^ ","^16","~$m","^5Q",["^5R","^5S","^5T"]]]]],"^5?",["^13",[null]]],"^5=",[["^13",[["^ ","^16","~$m","^5Q",["^5R","^5S","^5T"]]]]],"^5>",null,"^5?",["^13",[null]],"^8",1,"^7",16,"^9",16,"^5@",0,"^5A",true,"^56",["^13",[["~$&",["^ ","^16","~$m","^5Q",["^5R","^5S","^5T"]]]]],"^5:","Create an interceptor from named arguments"],"~$get-coeffect",["^ ","^54",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",45,"^8",7,"^9",45,"^:",19,"^56",["^13",["^57",["^13",[["^58"],["^58","^5C"],["^58","^5C","^5N"]]]]],"^5H",["^ ","^5<",false,"^5@",3,"^5=",["^13",[["^58"],["^58","^5C"],["^58","^5C","^5N"]]],"^56",["^13",[["^58"],["^58","^5C"],["^58","^5C","^5N"]]],"^5?",["^13",[null,null,null]]]],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor/get-coeffect","^5<",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",19,"^5H",["^ ","^5<",false,"^5@",3,"^5=",["^13",[["^58"],["^58","^5C"],["^58","^5C","^5N"]]],"^56",["^13",[["^58"],["^58","^5C"],["^58","^5C","^5N"]]],"^5?",["^13",[null,null,null]]],"^5=",["^13",[["^58"],["^58","^5C"],["^58","^5C","^5N"]]],"^5>",null,"^5?",["^13",[null,null,null]],"^8",1,"^7",45,"^9",45,"^5@",3,"^5A",true,"^56",["^13",[["^58"],["^58","^5C"],["^58","^5C","^5N"]]]],"~$execute",["^ ","^54",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",145,"^8",7,"^9",145,"^:",14,"^56",["^13",["^57",["^13",[["~$event-v","~$interceptors"]]]]],"^5:","Executes the given chain (coll) of interceptors.\n\n   Each interceptor has this form:\n       {:before  (fn [context] ...)     ;; returns possibly modified context\n        :after   (fn [context] ...)}    ;; `identity` would be a noop\n\n   Walks the queue of iterceptors from beginning to end, calling the\n   `:before` fn on each, then reverse direction and walk backwards,\n   calling the `:after` fn on each.\n\n   The last interceptor in the chain presumably wraps an event\n   handler fn. So the overall goal of the process is to \"handle\n   the given event\".\n\n   Thread a `context` through all calls. `context` has this form:\n\n     {:coeffects {:event [:a-query-id :some-param]\n                  :db    <original contents of app-db>}\n      :effects   {:db    <new value for app-db>\n                  :dispatch  [:an-event-id :param1]}\n      :queue     <a collection of further interceptors>\n      :stack     <a collection of interceptors already walked>}\n\n   `context` has `:coeffects` and `:effects` which, if this was a web\n   server, would be somewhat anologous to `request` and `response`\n   respectively.\n\n   `coeffects` will contain data like `event` and the initial\n   state of `db` -  the inputs required by the event handler\n   (sitting presumably on the end of the chain), while handler-returned\n   side effects are put into `:effects` including, but not limited to,\n   new values for `db`.\n\n   The first few interceptors in a chain will likely have `:before`\n   functions which \"prime\" the `context` by adding the event, and\n   the current state of app-db into `:coeffects`. But interceptors can\n   add whatever they want to `:coeffects` - perhaps the event handler needs\n   some information from localstore, or a random number, or access to\n   a DataScript connection.\n\n   Equally, some interceptors in the chain will have `:after` fn\n   which can process the side effects accumulated into `:effects`\n   including but, not limited to, updates to app-db.\n\n   Through both stages (before and after), `context` contains a `:queue`\n   of interceptors yet to be processed, and a `:stack` of interceptors\n   already done.  In advanced cases, these values can be modified by the\n   functions through which the context is threaded."],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor/execute","^5<",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",14,"^5=",["^13",[["^5Y","^5Z"]]],"^5>",null,"^5?",["^13",[null,null]],"^8",1,"^7",145,"^9",145,"^5@",2,"^5A",true,"^56",["^13",["^57",["^13",[["^5Y","^5Z"]]]]],"^5:","Executes the given chain (coll) of interceptors.\n\n   Each interceptor has this form:\n       {:before  (fn [context] ...)     ;; returns possibly modified context\n        :after   (fn [context] ...)}    ;; `identity` would be a noop\n\n   Walks the queue of iterceptors from beginning to end, calling the\n   `:before` fn on each, then reverse direction and walk backwards,\n   calling the `:after` fn on each.\n\n   The last interceptor in the chain presumably wraps an event\n   handler fn. So the overall goal of the process is to \"handle\n   the given event\".\n\n   Thread a `context` through all calls. `context` has this form:\n\n     {:coeffects {:event [:a-query-id :some-param]\n                  :db    <original contents of app-db>}\n      :effects   {:db    <new value for app-db>\n                  :dispatch  [:an-event-id :param1]}\n      :queue     <a collection of further interceptors>\n      :stack     <a collection of interceptors already walked>}\n\n   `context` has `:coeffects` and `:effects` which, if this was a web\n   server, would be somewhat anologous to `request` and `response`\n   respectively.\n\n   `coeffects` will contain data like `event` and the initial\n   state of `db` -  the inputs required by the event handler\n   (sitting presumably on the end of the chain), while handler-returned\n   side effects are put into `:effects` including, but not limited to,\n   new values for `db`.\n\n   The first few interceptors in a chain will likely have `:before`\n   functions which \"prime\" the `context` by adding the event, and\n   the current state of app-db into `:coeffects`. But interceptors can\n   add whatever they want to `:coeffects` - perhaps the event handler needs\n   some information from localstore, or a random number, or access to\n   a DataScript connection.\n\n   Equally, some interceptors in the chain will have `:after` fn\n   which can process the side effects accumulated into `:effects`\n   including but, not limited to, updates to app-db.\n\n   Through both stages (before and after), `context` contains a `:queue`\n   of interceptors yet to be processed, and a `:stack` of interceptors\n   already done.  In advanced cases, these values can be modified by the\n   functions through which the context is threaded."],"~$assoc-effect",["^ ","^54",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",39,"^8",7,"^9",39,"^:",19,"^56",["^13",["^57",["^13",[["^58","^5C","^5D"]]]]]],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor/assoc-effect","^5<",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",19,"^5=",["^13",[["^58","^5C","^5D"]]],"^5>",null,"^5?",["^13",[null,null]],"^8",1,"^7",39,"^9",39,"^5@",3,"^5A",true,"^56",["^13",["^57",["^13",[["^58","^5C","^5D"]]]]]],"~$enqueue",["^ ","^54",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",108,"^8",7,"^9",108,"^:",14,"^56",["^13",["^57",["^13",[["^58","^5Z"]]]]],"^5:","Add a collection of `interceptors` to the end of `context's` execution `:queue`.\n  Returns the updated `context`.\n\n  In an advanced case, this function could allow an interceptor to add new\n  interceptors to the `:queue` of a context."],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor/enqueue","^5<",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",14,"^5=",["^13",[["^58","^5Z"]]],"^5>",null,"^5?",["^13",[null,null]],"^8",1,"^7",108,"^9",108,"^5@",2,"^5A",true,"^56",["^13",["^57",["^13",[["^58","^5Z"]]]]],"^5:","Add a collection of `interceptors` to the end of `context's` execution `:queue`.\n  Returns the updated `context`.\n\n  In an advanced case, this function could allow an interceptor to add new\n  interceptors to the `:queue` of a context."],"~$mandatory-interceptor-keys",["^ ","^K","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor/mandatory-interceptor-keys","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",8,"^8",1,"^9",8,"^:",32,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",8,"^8",6,"^9",8,"^:",32],"~:tag","~$cljs.core/ISet"],"~$interceptor?",["^ ","^54",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",10,"^8",7,"^9",10,"^:",19,"^56",["^13",["^57",["^13",[["~$m"]]]]]],"^K","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor/interceptor?","^5<",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",19,"^5=",["^13",[["~$m"]]],"^5>",null,"^5?",["^13",[null,null]],"^8",1,"^7",10,"^9",10,"^5@",1,"^5A",true,"^56",["^13",["^57",["^13",[["~$m"]]]]]],"~$change-direction",["^ ","^54",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",131,"^8",8,"^9",131,"^:",24,"^55",true,"^56",["^13",["^57",["^13",[["^58"]]]]],"^5:","Called on completion of `:before` processing, this function prepares/modifies\n   `context` for the backwards sweep of processing in which an interceptor\n   chain's `:after` fns are called.\n\n  At this point in processing, the `:queue` is empty and `:stack` holds all\n  the previously run interceptors. So this function enables the backwards walk\n  by priming `:queue` with what's currently in `:stack`"],"^55",true,"^K","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor/change-direction","^5<",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",24,"^5=",["^13",[["^58"]]],"^5>",null,"^5?",["^13",[null,null]],"^8",1,"^7",131,"^9",131,"^5@",1,"^5A",true,"^56",["^13",["^57",["^13",[["^58"]]]]],"^5:","Called on completion of `:before` processing, this function prepares/modifies\n   `context` for the backwards sweep of processing in which an interceptor\n   chain's `:after` fns are called.\n\n  At this point in processing, the `:queue` is empty and `:stack` holds all\n  the previously run interceptors. So this function enables the backwards walk\n  by priming `:queue` with what's currently in `:stack`"],"^58",["^ ","^54",null,"^5",["^ ","^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",120,"^8",8,"^9",120,"^:",15,"^55",true,"^56",["^13",["^57",["^13",[["~$event","^5Z"],["^6<","^5Z","~$db"]]]]],"^5:","Create a fresh context","^5H",["^ ","^5<",false,"^5@",3,"^5=",["^13",[["^6<","^5Z"],["^6<","^5Z","^6="]]],"^56",["^13",[["^6<","^5Z"],["^6<","^5Z","^6="]]],"^5?",["^13",[null,null]]]],"^55",true,"^K","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor/context","^5<",false,"^6","mranderson047/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",15,"^5H",["^ ","^5<",false,"^5@",3,"^5=",["^13",[["^6<","^5Z"],["^6<","^5Z","^6="]]],"^56",["^13",[["^6<","^5Z"],["^6<","^5Z","^6="]]],"^5?",["^13",[null,null]]],"^5=",["^13",[["^6<","^5Z"],["^6<","^5Z","^6="]]],"^5>",null,"^5?",["^13",[null,null]],"^8",1,"^7",120,"^9",120,"^5@",3,"^5A",true,"^56",["^13",[["^6<","^5Z"],["^6<","^5Z","^6="]]],"^5:","Create a fresh context"]],"^11",["^ ","^U","^U"],"~:cljs.analyzer/constants",["^ ","^W",["^J",["~:unnamed","~:db","~:queue","~:event","~:after","~:id","~:effects","~:stack","~:error","~:coeffects","~:before"]],"~:order",["^6D","^6E","^6J","^6H","^6@","^6F","^6I","^6B","^6G","^6C","^6A"]],"^17",["^ ","^X",["^J",[]]],"^18",["^ "],"^19",["^V","^U","^Q","^R","^S"]],"^N","^L","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^3G",[["^6N","~:static-fns"],true,["^6N","~:elide-asserts"],false,["^6N","~:optimize-constants"],null,["^6N","~:external-config"],null,["^6N","~:tooling-config"],null,["^6N","~:emit-constants"],null,["^6N","~:infer-externs"],true,["^6N","^1@"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6N","~:fn-invoke-direct"],null,["^6N","^1B"],"/dev/null"]]]