["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.zip.insert');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.zip.base');\ngoog.require('rewrite_clj.zip.whitespace');\ngoog.require('rewrite_clj.node');\ngoog.require('clojure.zip');\nrewrite_clj.zip.insert.space = (rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1((1)) : rewrite_clj.node.spaces.call(null,(1)));\n/**\n * Generic insertion helper. If the node reached by `move-fn`\n * is a whitespace, insert an additional space.\n */\nrewrite_clj.zip.insert.insert = (function rewrite_clj$zip$insert$insert(move_fn,insert_fn,prefix,zloc,item){\nvar item_node = (rewrite_clj.node.coerce.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.coerce.cljs$core$IFn$_invoke$arity$1(item) : rewrite_clj.node.coerce.call(null,item));\nvar next_node = (move_fn.cljs$core$IFn$_invoke$arity$1 ? move_fn.cljs$core$IFn$_invoke$arity$1(zloc) : move_fn.call(null,zloc));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(insert_fn,zloc,(cljs.core.truth_((function (){var or__3922__auto__ = cljs.core.not(next_node);\nif(or__3922__auto__){\nreturn or__3922__auto__;\n} else {\nreturn rewrite_clj.zip.whitespace.whitespace_QMARK_(next_node);\n}\n})())?cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [item_node], null),prefix):cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.zip.insert.space,item_node], null),prefix)));\n});\n/**\n * Insert item to the right of the current location. Will insert a space if necessary.\n */\nrewrite_clj.zip.insert.insert_right = (function rewrite_clj$zip$insert$insert_right(zloc,item){\nreturn rewrite_clj.zip.insert.insert(clojure.zip.right,clojure.zip.insert_right,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.zip.insert.space], null),zloc,item);\n});\n/**\n * Insert item to the right of the left location. Will insert a space if necessary.\n */\nrewrite_clj.zip.insert.insert_left = (function rewrite_clj$zip$insert$insert_left(zloc,item){\nreturn rewrite_clj.zip.insert.insert(clojure.zip.left,clojure.zip.insert_left,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.zip.insert.space], null),zloc,item);\n});\n/**\n * Insert item as first child of the current node. Will insert a space if necessary.\n */\nrewrite_clj.zip.insert.insert_child = (function rewrite_clj$zip$insert$insert_child(zloc,item){\nreturn rewrite_clj.zip.insert.insert(clojure.zip.down,clojure.zip.insert_child,cljs.core.PersistentVector.EMPTY,zloc,item);\n});\n/**\n * Insert item as last child of the current node. Will insert a space if necessary.\n */\nrewrite_clj.zip.insert.append_child = (function rewrite_clj$zip$insert$append_child(zloc,item){\nreturn rewrite_clj.zip.insert.insert((function (p1__34919_SHARP_){\nvar G__34922 = p1__34919_SHARP_;\nvar G__34922__$1 = (((G__34922 == null))?null:clojure.zip.down(G__34922));\nif((G__34922__$1 == null)){\nreturn null;\n} else {\nreturn clojure.zip.rightmost(G__34922__$1);\n}\n}),clojure.zip.append_child,cljs.core.PersistentVector.EMPTY,zloc,item);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/zip/insert.cljs","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",36,"~:no-doc",true],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.zip.insert","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$base","~$rewrite-clj.zip.base","~$clojure.zip","^T","~$rewrite-clj.node","^U","~$cljs.core","^V","~$ws","~$rewrite-clj.zip.whitespace","~$goog","^Y","^X","^X","~$node","^U","~$z","^T","^S","^S"],"~:seen",["^K",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^V","^V"],"~:form",["~#list",["~$ns","^M",["^14",["^10",["^S","~:as","^R"],["^X","^16","^W"],["^U","^16","^Z"],["^T","^16","~$z"]]]]],"~:flags",["^ ","^10",["^K",[]]],"~:js-deps",["^ "],"~:deps",["^Y","^V","^S","^X","^U","^T"]],"^O","^M","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/zip/insert.cljs"],"~:compiled-at",1535834868396,"~:resource-name","rewrite_clj/zip/insert.cljs","~:warnings",[],"~:source","(ns ^:no-doc rewrite-clj.zip.insert\n  (:require [rewrite-clj.zip.base :as base]\n            [rewrite-clj.zip.whitespace :as ws]\n            [rewrite-clj.node :as node]\n            [clojure.zip :as z]))\n\n(def ^:private space\n  (node/spaces 1))\n\n(defn- insert\n  \"Generic insertion helper. If the node reached by `move-fn`\n   is a whitespace, insert an additional space.\"\n  [move-fn insert-fn prefix zloc item]\n  (let [item-node (node/coerce item)\n        next-node (move-fn zloc)]\n    (->> (if (or (not next-node) (ws/whitespace? next-node))\n           (concat [item-node] prefix)\n           (concat [space item-node] prefix))\n         (reduce insert-fn zloc))))\n\n(defn insert-right\n  \"Insert item to the right of the current location. Will insert a space if necessary.\"\n  [zloc item]\n  (insert\n    z/right\n    z/insert-right\n    [space]\n    zloc item))\n\n(defn insert-left\n  \"Insert item to the right of the left location. Will insert a space if necessary.\"\n  [zloc item]\n  (insert\n    z/left\n    z/insert-left\n    [space]\n    zloc item))\n\n(defn insert-child\n  \"Insert item as first child of the current node. Will insert a space if necessary.\"\n  [zloc item]\n  (insert\n    z/down\n    z/insert-child\n    []\n    zloc item))\n\n(defn append-child\n  \"Insert item as last child of the current node. Will insert a space if necessary.\"\n  [zloc item]\n  (insert\n    #(some-> % z/down z/rightmost)\n    z/append-child\n    []\n    zloc item))\n","~:reader-features",["^K",["~:cljs"]],"~:source-map",["^ ","~i6",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",6]],"~i15",[["^ ","^1C",0,"^1D",6,"^L","rewrite-clj.zip.insert/space"]]],"~i7",["^ ","~i2",[["^ ","^1C",31,"^1D",6],["^ ","^1C",142,"^1D",6],["^ ","^1C",183,"^1D",6]],"~i3",[["^ ","^1C",32,"^1D",6,"^L","rewrite-clj.node/spaces"],["^ ","^1C",88,"^1D",6,"^L","rewrite-clj.node/spaces"],["^ ","^1C",149,"^1D",6,"^L","rewrite-clj.node/spaces"]]],"~i9",["^ ","~i0",[["^ ","^1C",0,"^1D",7],["^ ","^1C",32,"^1D",11],["^ ","^1C",0,"^1D",12]],"~i7",[["^ ","^1C",0,"^1D",11,"^L","rewrite-clj.zip.insert/insert"]]],"~i12",["^ ","~i3",[["^ ","^1C",72,"^1D",11,"^L","move-fn"]],"~i11",[["^ ","^1C",80,"^1D",11,"^L","insert-fn"]],"~i21",[["^ ","^1C",90,"^1D",11,"^L","prefix"]],"~i28",[["^ ","^1C",97,"^1D",11,"^L","zloc"]],"~i33",[["^ ","^1C",102,"^1D",11,"^L","item"]]],"~i13",["^ ","~i2",[["^ ","^1C",0,"^1D",12],["^ ","^1C",0,"^1D",14]],"~i8",[["^ ","^1C",4,"^1D",12,"^L","item-node"]],"~i18",[["^ ","^1C",16,"^1D",12]],"~i19",[["^ ","^1C",17,"^1D",12,"^L","rewrite-clj.node/coerce"],["^ ","^1C",73,"^1D",12,"^L","rewrite-clj.node/coerce"],["^ ","^1C",135,"^1D",12,"^L","rewrite-clj.node/coerce"]],"~i31",[["^ ","^1C",127,"^1D",12,"^L","item"],["^ ","^1C",169,"^1D",12,"^L","item"]]],"~i14",["^ ","~i8",[["^ ","^1C",4,"^1D",13,"^L","next-node"]],"^1L",[["^ ","^1C",16,"^1D",13]],"^1M",[["^ ","^1C",17,"^1D",13,"^L","move-fn"],["^ ","^1C",57,"^1D",13,"^L","move-fn"],["^ ","^1C",103,"^1D",13,"^L","move-fn"]],"~i27",[["^ ","^1C",95,"^1D",13,"^L","zloc"],["^ ","^1C",121,"^1D",13,"^L","zloc"]]],"^1E",["^ ","~i9",[["^ ","^1C",69,"^1D",14]],"^1K",[["^ ","^1C",87,"^1D",14],["^ ","^1C",104,"^1D",14,"^L","or__3922__auto__"],["^ ","^1C",0,"^1D",15],["^ ","^1C",0,"^1D",15],["^ ","^1C",3,"^1D",15,"^L","or__3922__auto__"],["^ ","^1C",0,"^1D",16,"^L","or__3922__auto__"]],"~i17",[["^ ","^1C",123,"^1D",14]],"^1L",[["^ ","^1C",123,"^1D",14,"^L","cljs.core/not"]],"~i22",[["^ ","^1C",137,"^1D",14,"^L","next-node"]],"^1J",[["^ ","^1C",0,"^1D",18]],"~i34",[["^ ","^1C",7,"^1D",18,"^L","rewrite-clj.zip.whitespace/whitespace?"]],"~i49",[["^ ","^1C",52,"^1D",18,"^L","next-node"]]],"~i16",["^ ","^1G",[["^ ","^1C",6,"^1D",20],["^ ","^1C",53,"^1D",20]],"^1F",[["^ ","^1C",6,"^1D",20,"^L","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"~i20",[["^ ","^1C",136,"^1D",20,"^L","item-node"]],"^1N",[["^ ","^1C",154,"^1D",20,"^L","prefix"]]],"^1Q",["^ ","^1G",[["^ ","^1C",162,"^1D",20],["^ ","^1C",209,"^1D",20]],"^1F",[["^ ","^1C",162,"^1D",20,"^L","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"^1V",[["^ ","^1C",292,"^1D",20,"^L","rewrite-clj.zip.insert/space"]],"~i26",[["^ ","^1C",321,"^1D",20,"^L","item-node"]],"~i37",[["^ ","^1C",339,"^1D",20,"^L","prefix"]]],"^1L",["^ ","~i9",[["^ ","^1C",0,"^1D",14]],"~i10",[["^ ","^1C",7,"^1D",14,"^L","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^1Q",[["^ ","^1C",54,"^1D",14,"^L","insert-fn"]],"^1P",[["^ ","^1C",64,"^1D",14,"^L","zloc"]]],"^1V",["^ ","~i0",[["^ ","^1C",0,"^1D",22],["^ ","^1C",38,"^1D",25],["^ ","^1C",0,"^1D",26]],"~i6",[["^ ","^1C",0,"^1D",25,"^L","rewrite-clj.zip.insert/insert-right"]]],"^1R",["^ ","~i3",[["^ ","^1C",84,"^1D",25,"^L","zloc"]],"~i8",[["^ ","^1C",89,"^1D",25,"^L","item"]]],"~i23",["^ ","~i2",[["^ ","^1C",0,"^1D",26],["^ ","^1C",80,"^1D",26]],"~i3",[["^ ","^1C",7,"^1D",26,"^L","rewrite-clj.zip.insert/insert"]]],"~i24",["^ ","~i4",[["^ ","^1C",37,"^1D",26,"^L","clojure.zip/right"]]],"~i25",["^ ","~i4",[["^ ","^1C",55,"^1D",26,"^L","clojure.zip/insert-right"]]],"^1W",["^ ","~i5",[["^ ","^1C",163,"^1D",26,"^L","rewrite-clj.zip.insert/space"]]],"^1P",["^ ","~i4",[["^ ","^1C",200,"^1D",26,"^L","zloc"]],"~i9",[["^ ","^1C",205,"^1D",26,"^L","item"]]],"~i29",["^ ","~i0",[["^ ","^1C",0,"^1D",28],["^ ","^1C",37,"^1D",31],["^ ","^1C",0,"^1D",32]],"~i6",[["^ ","^1C",0,"^1D",31,"^L","rewrite-clj.zip.insert/insert-left"]]],"^1N",["^ ","~i3",[["^ ","^1C",82,"^1D",31,"^L","zloc"]],"~i8",[["^ ","^1C",87,"^1D",31,"^L","item"]]],"~i32",["^ ","~i2",[["^ ","^1C",0,"^1D",32],["^ ","^1C",78,"^1D",32]],"~i3",[["^ ","^1C",7,"^1D",32,"^L","rewrite-clj.zip.insert/insert"]]],"^1J",["^ ","~i4",[["^ ","^1C",37,"^1D",32,"^L","clojure.zip/left"]]],"^1S",["^ ","~i4",[["^ ","^1C",54,"^1D",32,"^L","clojure.zip/insert-left"]]],"~i35",["^ ","~i5",[["^ ","^1C",161,"^1D",32,"^L","rewrite-clj.zip.insert/space"]]],"~i36",["^ ","~i4",[["^ ","^1C",198,"^1D",32,"^L","zloc"]],"~i9",[["^ ","^1C",203,"^1D",32,"^L","item"]]],"~i38",["^ ","~i0",[["^ ","^1C",0,"^1D",34],["^ ","^1C",38,"^1D",37],["^ ","^1C",0,"^1D",38]],"~i6",[["^ ","^1C",0,"^1D",37,"^L","rewrite-clj.zip.insert/insert-child"]]],"~i40",["^ ","~i3",[["^ ","^1C",84,"^1D",37,"^L","zloc"]],"~i8",[["^ ","^1C",89,"^1D",37,"^L","item"]]],"~i41",["^ ","~i2",[["^ ","^1C",0,"^1D",38],["^ ","^1C",79,"^1D",38]],"~i3",[["^ ","^1C",7,"^1D",38,"^L","rewrite-clj.zip.insert/insert"]]],"~i42",["^ ","~i4",[["^ ","^1C",37,"^1D",38,"^L","clojure.zip/down"]]],"~i43",["^ ","~i4",[["^ ","^1C",54,"^1D",38,"^L","clojure.zip/insert-child"]]],"~i45",["^ ","~i4",[["^ ","^1C",112,"^1D",38,"^L","zloc"]],"~i9",[["^ ","^1C",117,"^1D",38,"^L","item"]]],"~i47",["^ ","~i0",[["^ ","^1C",0,"^1D",40],["^ ","^1C",38,"^1D",43],["^ ","^1C",0,"^1D",44]],"~i6",[["^ ","^1C",0,"^1D",43,"^L","rewrite-clj.zip.insert/append-child"]]],"^1T",["^ ","~i3",[["^ ","^1C",84,"^1D",43,"^L","zloc"]],"~i8",[["^ ","^1C",89,"^1D",43,"^L","item"]]],"~i50",["^ ","~i2",[["^ ","^1C",0,"^1D",44],["^ ","^1C",37,"^1D",44],["^ ","^1C",48,"^1D",44,"^L","p1__34919#"],["^ ","^1C",0,"^1D",45],["^ ","^1C",28,"^1D",52]],"~i3",[["^ ","^1C",7,"^1D",44,"^L","rewrite-clj.zip.insert/insert"]]],"~i51",["^ ","~i5",[["^ ","^1C",0,"^1D",45],["^ ","^1C",4,"^1D",45,"^L","G__34922"],["^ ","^1C",15,"^1D",45,"^L","p1__34919#"],["^ ","^1C",4,"^1D",46,"^L","G__34922"],["^ ","^1C",19,"^1D",46],["^ ","^1C",21,"^1D",46],["^ ","^1C",22,"^1D",46,"^L","G__34922"],["^ ","^1C",34,"^1D",46],["^ ","^1C",41,"^1D",46],["^ ","^1C",46,"^1D",46],["^ ","^1C",63,"^1D",46,"^L","G__34922"],["^ ","^1C",0,"^1D",47],["^ ","^1C",0,"^1D",47],["^ ","^1C",3,"^1D",47],["^ ","^1C",4,"^1D",47,"^L","G__34922"],["^ ","^1C",20,"^1D",47],["^ ","^1C",0,"^1D",48],["^ ","^1C",0,"^1D",50],["^ ","^1C",29,"^1D",50,"^L","G__34922"]],"^1E",[["^ ","^1C",46,"^1D",46,"^L","clojure.zip/down"]],"^1R",[["^ ","^1C",7,"^1D",50,"^L","clojure.zip/rightmost"]]],"~i52",["^ ","~i4",[["^ ","^1C",3,"^1D",52,"^L","clojure.zip/append-child"]]],"~i54",["^ ","~i4",[["^ ","^1C",61,"^1D",52,"^L","zloc"]],"~i9",[["^ ","^1C",66,"^1D",52,"^L","item"]]]],"~:cljc",false],"~:cache-keys",["~#cmap",[["^1;","rewrite_clj/node/token.cljs"],[1535834828000,"^Y","^V","~$rewrite-clj.node.protocols"],["~:macro","^V"],[1535834828000],["^1;","cljs/tools/reader/impl/utils.cljs"],[1535834828000,"^Y","^V","~$clojure.string","~$goog.string"],["^1;","goog/math/math.js"],[1505449243000,"^Y","~$goog.array","~$goog.asserts"],["^1;","rewrite_clj/parser/core.cljs"],[1535834828000,"^Y","^V","^U","~$rewrite-clj.reader","~$rewrite-clj.parser.keyword","~$rewrite-clj.parser.string","~$rewrite-clj.parser.token","~$rewrite-clj.parser.whitespace","~$cljs.tools.reader.reader-types"],["^1;","rewrite_clj/parser/string.cljs"],[1535834828000,"^Y","^V","^U","^2I","^2F"],["^1;","goog/array/array.js"],[1505449243000,"^Y","^2H"],["^2D","^2N"],[1535834828000],["^1;","goog/debug/error.js"],[1505449243000,"^Y"],["^1;","goog/dom/nodetype.js"],[1505449243000,"^Y"],["^1;","cljs/tools/reader/impl/inspect.cljs"],[1535834828000,"^Y","^V"],["^1;","cljs/tools/reader.cljs"],[1535834828000,"^Y","^V","^2N","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^2G","^2F","~$goog.string.StringBuffer"],["^1;","rewrite_clj/node/forms.cljs"],[1535834828000,"^Y","^V","^2C"],["^1;","rewrite_clj/zip/insert.cljs"],[1535834828000,"^Y","^V","^S","^X","^U","^T"],["^1;","goog/object/object.js"],[1505449243000,"^Y"],"~:SHADOW-TIMESTAMP",[1535834828000,1535834828000],["^1;","goog/math/long.js"],[1505449243000,"^Y","^2H","~$goog.reflect"],["^1;","rewrite_clj/node/reader_macro.cljs"],[1535834828000,"^Y","^V","^2C","~$rewrite-clj.node.whitespace"],["^1;","goog/functions/functions.js"],[1505449243000,"^Y"],["^1;","clojure/walk.cljs"],[1535834828000,"^Y","^V"],["^1;","goog/structs/map.js"],[1505449243000,"^Y","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^1;","rewrite_clj/node/meta.cljs"],[1535834828000,"^Y","^V","^2C","^2U"],["^1;","rewrite_clj/node/stringz.cljs"],[1535834828000,"^Y","^V","^2C","~$cljs.tools.reader","^2E"],["^1;","rewrite_clj/node/comment.cljs"],[1535834828000,"^Y","^V","^2C"],["^1;","rewrite_clj/node/keyword.cljs"],[1535834828000,"^Y","^V","^2C"],["^1;","goog/asserts/asserts.js"],[1505449243000,"^Y","~$goog.debug.Error","~$goog.dom.NodeType","^2F"],["^1;","goog/uri/uri.js"],[1505449243000,"^Y","^2G","^2H","^2F","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1;","rewrite_clj/node/protocols.cljs"],[1535834828000,"^Y","^V","^2E"],["^1;","rewrite_clj/node/seq.cljs"],[1535834828000,"^Y","^V","^2C"],["^1;","rewrite_clj/node/uneval.cljs"],[1535834828000,"^Y","^V","^2C"],["^1;","goog/base.js"],[1505449243000],["^1;","goog/structs/structs.js"],[1505449243000,"^Y","^2G","^2X"],["^1;","cljs/tools/reader/impl/errors.cljs"],[1535834828000,"^Y","^V","^2N","^2E","~$cljs.tools.reader.impl.inspect"],["^1;","rewrite_clj/node/whitespace.cljs"],[1535834828000,"^Y","^V","^2C"],["^1;","rewrite_clj/node/coercer.cljs"],[1535834828000,"^Y","^V","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^2C","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^2U"],["^1;","clojure/string.cljs"],[1535834828000,"^Y","^V","^2F","^2R"],["^1;","rewrite_clj/parser.cljs"],[1535834828000,"^Y","^V","~$rewrite-clj.parser.core","^U","^2I"],["^1;","rewrite_clj/parser/keyword.cljs"],[1535834828000,"^Y","^V","^U","^2N","^2I"],["^1;","rewrite_clj/parser/token.cljs"],[1535834828000,"^Y","^V","^U","^2I","^2F"],["^1;","goog/string/string.js"],[1505449243000,"^Y"],["^1;","goog/reflect/reflect.js"],[1505449243000,"^Y"],["^1;","rewrite_clj/node/fn.cljs"],[1535834828000,"^Y","^V","^2C","~$clojure.walk"],["^1;","rewrite_clj/node.cljs"],[1535834828000,"^Y","^V","~$rewrite-clj.node.coercer","^2C","^38","^3?","^2U","^3@","^36","^37","^3<","^3:","^3>","^39","^3;","^3="],["^1;","clojure/zip.cljs"],[1535834828000,"^Y","^V"],["^1;","goog/string/stringbuffer.js"],[1505449243000,"^Y"],["^1;","cljs/tools/reader/reader_types.cljs"],[1535834828000,"^Y","^V","^2O","^2F","^2R"],["^1;","goog/iter/iter.js"],[1505449243000,"^Y","^2G","^2H","~$goog.functions","~$goog.math"],["^1;","rewrite_clj/reader.cljs"],[1535834828000,"^Y","^V","^2Y","^2N","^2P","^2F","^2C"],["^1;","rewrite_clj/node/quote.cljs"],[1535834828000,"^Y","^V","^2C"],["^1;","cljs/tools/reader/impl/commons.cljs"],[1535834828000,"^Y","^V","^2Q","^2N","^2O"],["^1;","cljs/core.cljs"],[1535834828000,"~$goog.math.Long","~$goog.math.Integer","^2F","^2X","^2G","~$goog.Uri","^2R"],["^1;","goog/math/integer.js"],[1505449243000,"^Y"],["^1;","goog/uri/utils.js"],[1505449243000,"^Y","^2G","^2H","^2F"],["^1;","rewrite_clj/zip/base.cljs"],[1535834828000,"^Y","^V","^U","~$rewrite-clj.parser","^X","^T"],["^1;","rewrite_clj/zip/whitespace.cljs"],[1535834828000,"^Y","^V","^U","^T"],["^1;","rewrite_clj/parser/whitespace.cljs"],[1535834828000,"^Y","^V","^U","^2I"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/zip/insert.cljs","^7",1,"^8",14,"^9",1,"^:",36,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H"],"^I",null,"^J",["^K",[]],"^L","^M","^P",null,"^Q",["^ ","^R","^S","^T","^T","^U","^U","^V","^V","^W","^X","^Y","^Y","^X","^X","^Z","^U","~$z","^T","^S","^S"],"^[",["^K",["^10"]],"^11",null,"~:defs",["^ ","~$space",["^ ","^L","~$rewrite-clj.zip.insert/space","^6","rewrite_clj/zip/insert.cljs","^7",7,"^8",1,"^9",7,"^:",21,"~:private",true,"^5",["^ ","^6","rewrite_clj/zip/insert.cljs","^7",7,"^8",16,"^9",7,"^:",21,"^3N",true],"~:tag","~$any"],"~$insert",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/zip/insert.cljs","^7",10,"^8",8,"^9",10,"^:",14,"^3N",true,"~:arglists",["^14",["~$quote",["^14",[["~$move-fn","~$insert-fn","~$prefix","~$zloc","~$item"]]]]],"~:doc","Generic insertion helper. If the node reached by `move-fn`\n   is a whitespace, insert an additional space."],"^3N",true,"^L","~$rewrite-clj.zip.insert/insert","~:variadic",false,"^6","rewrite_clj/zip/insert.cljs","^:",14,"~:method-params",["^14",[["^3U","^3V","^3W","^3X","^3Y"]]],"~:protocol-impl",null,"~:arglists-meta",["^14",[null,null]],"^8",1,"^7",10,"^9",10,"~:max-fixed-arity",5,"~:fn-var",true,"^3S",["^14",["^3T",["^14",[["^3U","^3V","^3W","^3X","^3Y"]]]]],"^3Z","Generic insertion helper. If the node reached by `move-fn`\n   is a whitespace, insert an additional space."],"~$insert-right",["^ ","^3R",null,"^5",["^ ","^6","rewrite_clj/zip/insert.cljs","^7",21,"^8",7,"^9",21,"^:",19,"^3S",["^14",["^3T",["^14",[["^3X","^3Y"]]]]],"^3Z","Insert item to the right of the current location. Will insert a space if necessary."],"^L","~$rewrite-clj.zip.insert/insert-right","^40",false,"^6","rewrite_clj/zip/insert.cljs","^:",19,"^41",["^14",[["^3X","^3Y"]]],"^42",null,"^43",["^14",[null,null]],"^8",1,"^7",21,"^9",21,"^44",2,"^45",true,"^3S",["^14",["^3T",["^14",[["^3X","^3Y"]]]]],"^3Z","Insert item to the right of the current location. Will insert a space if necessary."],"~$insert-left",["^ ","^3R",null,"^5",["^ ","^6","rewrite_clj/zip/insert.cljs","^7",30,"^8",7,"^9",30,"^:",18,"^3S",["^14",["^3T",["^14",[["^3X","^3Y"]]]]],"^3Z","Insert item to the right of the left location. Will insert a space if necessary."],"^L","~$rewrite-clj.zip.insert/insert-left","^40",false,"^6","rewrite_clj/zip/insert.cljs","^:",18,"^41",["^14",[["^3X","^3Y"]]],"^42",null,"^43",["^14",[null,null]],"^8",1,"^7",30,"^9",30,"^44",2,"^45",true,"^3S",["^14",["^3T",["^14",[["^3X","^3Y"]]]]],"^3Z","Insert item to the right of the left location. Will insert a space if necessary."],"~$insert-child",["^ ","^3R",null,"^5",["^ ","^6","rewrite_clj/zip/insert.cljs","^7",39,"^8",7,"^9",39,"^:",19,"^3S",["^14",["^3T",["^14",[["^3X","^3Y"]]]]],"^3Z","Insert item as first child of the current node. Will insert a space if necessary."],"^L","~$rewrite-clj.zip.insert/insert-child","^40",false,"^6","rewrite_clj/zip/insert.cljs","^:",19,"^41",["^14",[["^3X","^3Y"]]],"^42",null,"^43",["^14",[null,null]],"^8",1,"^7",39,"^9",39,"^44",2,"^45",true,"^3S",["^14",["^3T",["^14",[["^3X","^3Y"]]]]],"^3Z","Insert item as first child of the current node. Will insert a space if necessary."],"~$append-child",["^ ","^3R",null,"^5",["^ ","^6","rewrite_clj/zip/insert.cljs","^7",48,"^8",7,"^9",48,"^:",19,"^3S",["^14",["^3T",["^14",[["^3X","^3Y"]]]]],"^3Z","Insert item as last child of the current node. Will insert a space if necessary."],"^L","~$rewrite-clj.zip.insert/append-child","^40",false,"^6","rewrite_clj/zip/insert.cljs","^:",19,"^41",["^14",[["^3X","^3Y"]]],"^42",null,"^43",["^14",[null,null]],"^8",1,"^7",48,"^9",48,"^44",2,"^45",true,"^3S",["^14",["^3T",["^14",[["^3X","^3Y"]]]]],"^3Z","Insert item as last child of the current node. Will insert a space if necessary."]],"^12",["^ ","^V","^V"],"^17",["^ ","^10",["^K",[]]],"^18",["^ "],"^19",["^Y","^V","^S","^X","^U","^T"]],"^O","^M","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^2B",[["^4@","~:static-fns"],true,["^4@","~:elide-asserts"],false,["^4@","~:optimize-constants"],null,["^4@","~:external-config"],null,["^4@","~:tooling-config"],null,["^4@","~:emit-constants"],null,["^4@","~:infer-externs"],true,["^4@","^1@"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4@","~:fn-invoke-direct"],null,["^4@","^1B"],"/dev/null"]]]