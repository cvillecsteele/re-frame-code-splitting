["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.parser.whitespace');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.node');\ngoog.require('rewrite_clj.reader');\n/**\n * Parse as much whitespace as possible. The created node can either contain\n * only linebreaks or only space/tabs.\n */\nrewrite_clj.parser.whitespace.parse_whitespace = (function rewrite_clj$parser$whitespace$parse_whitespace(reader){\nif(rewrite_clj.reader.linebreak_QMARK_((rewrite_clj.reader.peek_char.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.reader.peek_char.cljs$core$IFn$_invoke$arity$1(reader) : rewrite_clj.reader.peek_char.call(null,reader)))){\nvar G__34574 = rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2(reader,rewrite_clj.reader.linebreak_QMARK_);\nreturn (rewrite_clj.node.newline_node.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newline_node.cljs$core$IFn$_invoke$arity$1(G__34574) : rewrite_clj.node.newline_node.call(null,G__34574));\n} else {\nvar G__34576 = rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2(reader,rewrite_clj.reader.space_QMARK_);\nreturn (rewrite_clj.node.whitespace_node.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.whitespace_node.cljs$core$IFn$_invoke$arity$1(G__34576) : rewrite_clj.node.whitespace_node.call(null,G__34576));\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/parser/whitespace.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",34],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.parser.whitespace","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node","^Q","~$node","^Q","~$rewrite-clj.reader","^S","~$r","^S","~$cljs.core","^T","~$goog","^U"],"~:seen",["^J",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^T","^T"],"~:form",["~#list",["~$ns","^L",["^[",["^W",["^Q","~:as","^R"],["^S","^11","~$r"]]]]],"~:flags",["^ ","^W",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^U","^T","^Q","^S"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/parser/whitespace.cljs"],"~:compiled-at",1535834868150,"~:resource-name","rewrite_clj/parser/whitespace.cljs","~:warnings",[],"~:source","(ns rewrite-clj.parser.whitespace\n  (:require [rewrite-clj.node :as node]\n            [rewrite-clj.reader :as r]))\n\n(defn parse-whitespace\n  \"Parse as much whitespace as possible. The created node can either contain\n   only linebreaks or only space/tabs.\"\n  [^not-native reader]\n  (if (r/linebreak? (r/peek-char reader))\n    (node/newline-node\n      (r/read-while reader r/linebreak?))\n    (node/whitespace-node\n      (r/read-while reader r/space?))))\n","~:reader-features",["^J",["~:cljs"]],"~:source-map",["^ ","~i4",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",4],["^ ","^1>",49,"^1?",8],["^ ","^1>",0,"^1?",9]],"~i6",[["^ ","^1>",0,"^1?",8,"^K","rewrite-clj.parser.whitespace/parse-whitespace"]]],"~i7",["^ ","~i15",[["^ ","^1>",106,"^1?",8,"^K","reader"]]],"~i8",["^ ","~i2",[["^ ","^1>",0,"^1?",9]],"~i6",[["^ ","^1>",3,"^1?",9]],"~i7",[["^ ","^1>",3,"^1?",9,"^K","rewrite-clj.reader/linebreak?"]],"~i20",[["^ ","^1>",39,"^1?",9]],"~i21",[["^ ","^1>",40,"^1?",9,"^K","rewrite-clj.reader/peek-char"],["^ ","^1>",101,"^1?",9,"^K","rewrite-clj.reader/peek-char"],["^ ","^1>",170,"^1?",9,"^K","rewrite-clj.reader/peek-char"]],"~i33",[["^ ","^1>",160,"^1?",9,"^K","reader"],["^ ","^1>",209,"^1?",9,"^K","reader"]]],"~i9",["^ ","~i4",[["^ ","^1>",0,"^1?",10],["^ ","^1>",4,"^1?",10,"^K","G__34574"],["^ ","^1>",0,"^1?",11],["^ ","^1>",0,"^1?",11],["^ ","^1>",130,"^1?",11,"^K","G__34574"],["^ ","^1>",182,"^1?",11,"^K","G__34574"]],"~i5",[["^ ","^1>",8,"^1?",11,"^K","rewrite-clj.node/newline-node"],["^ ","^1>",70,"^1?",11,"^K","rewrite-clj.node/newline-node"],["^ ","^1>",142,"^1?",11,"^K","rewrite-clj.node/newline-node"]]],"~i10",["^ ","~i6",[["^ ","^1>",15,"^1?",10]],"~i7",[["^ ","^1>",15,"^1?",10,"^K","rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2"]],"^1A",[["^ ","^1>",75,"^1?",10,"^K","reader"]],"~i27",[["^ ","^1>",82,"^1?",10,"^K","rewrite-clj.reader/linebreak?"]]],"~i11",["^ ","~i4",[["^ ","^1>",0,"^1?",13],["^ ","^1>",4,"^1?",13,"^K","G__34576"],["^ ","^1>",0,"^1?",14],["^ ","^1>",0,"^1?",14],["^ ","^1>",136,"^1?",14,"^K","G__34576"],["^ ","^1>",191,"^1?",14,"^K","G__34576"]],"~i5",[["^ ","^1>",8,"^1?",14,"^K","rewrite-clj.node/whitespace-node"],["^ ","^1>",73,"^1?",14,"^K","rewrite-clj.node/whitespace-node"],["^ ","^1>",148,"^1?",14,"^K","rewrite-clj.node/whitespace-node"]]],"~i12",["^ ","~i6",[["^ ","^1>",15,"^1?",13]],"~i7",[["^ ","^1>",15,"^1?",13,"^K","rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2"]],"^1A",[["^ ","^1>",75,"^1?",13,"^K","reader"]],"^1E",[["^ ","^1>",82,"^1?",13,"^K","rewrite-clj.reader/space?"]]]],"~:cljc",false],"~:cache-keys",["~#cmap",[["^16","rewrite_clj/node/token.cljs"],[1535834828000,"^U","^T","~$rewrite-clj.node.protocols"],["~:macro","^T"],[1535834828000],["^16","cljs/tools/reader/impl/utils.cljs"],[1535834828000,"^U","^T","~$clojure.string","~$goog.string"],["^16","goog/math/math.js"],[1505449243000,"^U","~$goog.array","~$goog.asserts"],["^16","goog/array/array.js"],[1505449243000,"^U","^1P"],["^1L","~$cljs.tools.reader.reader-types"],[1535834828000],["^16","goog/debug/error.js"],[1505449243000,"^U"],["^16","goog/dom/nodetype.js"],[1505449243000,"^U"],["^16","cljs/tools/reader/impl/inspect.cljs"],[1535834828000,"^U","^T"],["^16","cljs/tools/reader.cljs"],[1535834828000,"^U","^T","^1Q","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^1O","^1N","~$goog.string.StringBuffer"],["^16","rewrite_clj/node/forms.cljs"],[1535834828000,"^U","^T","^1K"],["^16","goog/object/object.js"],[1505449243000,"^U"],"~:SHADOW-TIMESTAMP",[1535834828000,1535834828000],["^16","goog/math/long.js"],[1505449243000,"^U","^1P","~$goog.reflect"],["^16","rewrite_clj/node/reader_macro.cljs"],[1535834828000,"^U","^T","^1K","~$rewrite-clj.node.whitespace"],["^16","goog/functions/functions.js"],[1505449243000,"^U"],["^16","clojure/walk.cljs"],[1535834828000,"^U","^T"],["^16","goog/structs/map.js"],[1505449243000,"^U","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^16","rewrite_clj/node/meta.cljs"],[1535834828000,"^U","^T","^1K","^1X"],["^16","rewrite_clj/node/stringz.cljs"],[1535834828000,"^U","^T","^1K","~$cljs.tools.reader","^1M"],["^16","rewrite_clj/node/comment.cljs"],[1535834828000,"^U","^T","^1K"],["^16","rewrite_clj/node/keyword.cljs"],[1535834828000,"^U","^T","^1K"],["^16","goog/asserts/asserts.js"],[1505449243000,"^U","~$goog.debug.Error","~$goog.dom.NodeType","^1N"],["^16","goog/uri/uri.js"],[1505449243000,"^U","^1O","^1P","^1N","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^16","rewrite_clj/node/protocols.cljs"],[1535834828000,"^U","^T","^1M"],["^16","rewrite_clj/node/seq.cljs"],[1535834828000,"^U","^T","^1K"],["^16","rewrite_clj/node/uneval.cljs"],[1535834828000,"^U","^T","^1K"],["^16","goog/base.js"],[1505449243000],["^16","goog/structs/structs.js"],[1505449243000,"^U","^1O","^1["],["^16","cljs/tools/reader/impl/errors.cljs"],[1535834828000,"^U","^T","^1Q","^1M","~$cljs.tools.reader.impl.inspect"],["^16","rewrite_clj/node/whitespace.cljs"],[1535834828000,"^U","^T","^1K"],["^16","rewrite_clj/node/coercer.cljs"],[1535834828000,"^U","^T","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^1K","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^1X"],["^16","clojure/string.cljs"],[1535834828000,"^U","^T","^1N","^1U"],["^16","goog/string/string.js"],[1505449243000,"^U"],["^16","goog/reflect/reflect.js"],[1505449243000,"^U"],["^16","rewrite_clj/node/fn.cljs"],[1535834828000,"^U","^T","^1K","~$clojure.walk"],["^16","rewrite_clj/node.cljs"],[1535834828000,"^U","^T","~$rewrite-clj.node.coercer","^1K","^2;","^2B","^1X","^2C","^29","^2:","^2?","^2=","^2A","^2<","^2>","^2@"],["^16","goog/string/stringbuffer.js"],[1505449243000,"^U"],["^16","cljs/tools/reader/reader_types.cljs"],[1535834828000,"^U","^T","^1R","^1N","^1U"],["^16","goog/iter/iter.js"],[1505449243000,"^U","^1O","^1P","~$goog.functions","~$goog.math"],["^16","rewrite_clj/reader.cljs"],[1535834828000,"^U","^T","^20","^1Q","^1S","^1N","^1K"],["^16","rewrite_clj/node/quote.cljs"],[1535834828000,"^U","^T","^1K"],["^16","cljs/tools/reader/impl/commons.cljs"],[1535834828000,"^U","^T","^1T","^1Q","^1R"],["^16","cljs/core.cljs"],[1535834828000,"~$goog.math.Long","~$goog.math.Integer","^1N","^1[","^1O","~$goog.Uri","^1U"],["^16","goog/math/integer.js"],[1505449243000,"^U"],["^16","goog/uri/utils.js"],[1505449243000,"^U","^1O","^1P","^1N"],["^16","rewrite_clj/parser/whitespace.cljs"],[1535834828000,"^U","^T","^Q","^S"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/parser/whitespace.cljs","^7",1,"^8",5,"^9",1,"^:",34],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^Q","^S","^S","~$r","^S","^T","^T","^U","^U"],"^V",["^J",["^W"]],"^X",null,"~:defs",["^ ","~$parse-whitespace",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/parser/whitespace.cljs","^7",5,"^8",7,"^9",5,"^:",23,"~:arglists",["^[",["~$quote",["^[",[["~$reader"]]]]],"~:doc","Parse as much whitespace as possible. The created node can either contain\n   only linebreaks or only space/tabs."],"^K","~$rewrite-clj.parser.whitespace/parse-whitespace","~:variadic",false,"^6","rewrite_clj/parser/whitespace.cljs","^:",23,"~:method-params",["^[",[["^2Q"]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^8",1,"^7",5,"^9",5,"~:max-fixed-arity",1,"~:fn-var",true,"^2O",["^[",["^2P",["^[",[["^2Q"]]]]],"^2R","Parse as much whitespace as possible. The created node can either contain\n   only linebreaks or only space/tabs."]],"^Y",["^ ","^T","^T"],"^12",["^ ","^W",["^J",[]]],"^13",["^ "],"^14",["^U","^T","^Q","^S"]],"^N","^L","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1J",[["^30","~:static-fns"],true,["^30","~:elide-asserts"],false,["^30","~:optimize-constants"],null,["^30","~:external-config"],null,["^30","~:tooling-config"],null,["^30","~:emit-constants"],null,["^30","~:infer-externs"],true,["^30","^1;"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^30","~:fn-invoke-direct"],null,["^30","^1="],"/dev/null"]]]