["^ ","~:output",["^ ","~:js","goog.provide('day8.re_frame_10x.metamorphic');\ngoog.require('cljs.core');\n/**\n * Returns a transducer that filters for :id between beginning and ending. Inclusive on both ends.\n */\nday8.re_frame_10x.metamorphic.id_between_xf = (function day8$re_frame_10x$metamorphic$id_between_xf(beginning,ending){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (p1__37013_SHARP_){\nreturn (((beginning <= new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(p1__37013_SHARP_))) && ((new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(p1__37013_SHARP_) <= ending)));\n}));\n});\nday8.re_frame_10x.metamorphic.fsm_trigger_QMARK_ = (function day8$re_frame_10x$metamorphic$fsm_trigger_QMARK_(event){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"re-frame.router\",\"fsm-trigger\",\"re-frame.router/fsm-trigger\",1379787274),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event));\n});\nday8.re_frame_10x.metamorphic.elapsed_time = (function day8$re_frame_10x$metamorphic$elapsed_time(ev1,ev2){\nvar start_of_epoch = new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(ev1);\nvar end_of_epoch = new cljs.core.Keyword(null,\"end\",\"end\",-268185958).cljs$core$IFn$_invoke$arity$1(ev2);\nif(((!((start_of_epoch == null))) && (!((end_of_epoch == null))))){\nreturn (end_of_epoch - start_of_epoch);\n} else {\nreturn null;\n}\n});\nday8.re_frame_10x.metamorphic.run_queue_QMARK_ = (function day8$re_frame_10x$metamorphic$run_queue_QMARK_(event){\nvar and__3911__auto__ = day8.re_frame_10x.metamorphic.fsm_trigger_QMARK_(event);\nif(cljs.core.truth_(and__3911__auto__)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310).cljs$core$IFn$_invoke$arity$1(event),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"scheduled\",\"scheduled\",553898551),new cljs.core.Keyword(null,\"run-queue\",\"run-queue\",-1701798027)], null));\n} else {\nreturn and__3911__auto__;\n}\n});\nday8.re_frame_10x.metamorphic.request_animation_frame_QMARK_ = (function day8$re_frame_10x$metamorphic$request_animation_frame_QMARK_(event){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"raf\",\"raf\",-1295410152),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event));\n});\nday8.re_frame_10x.metamorphic.request_animation_frame_end_QMARK_ = (function day8$re_frame_10x$metamorphic$request_animation_frame_end_QMARK_(event){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"raf-end\",\"raf-end\",-220596864),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event));\n});\nday8.re_frame_10x.metamorphic.summarise_event = (function day8$re_frame_10x$metamorphic$summarise_event(ev){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(ev,new cljs.core.Keyword(null,\"start\",\"start\",-355208981),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),new cljs.core.Keyword(null,\"end\",\"end\",-268185958),new cljs.core.Keyword(null,\"child-of\",\"child-of\",-903376662)], 0)),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.dissoc,new cljs.core.Keyword(null,\"app-db-before\",\"app-db-before\",-1442902645),new cljs.core.Keyword(null,\"app-db-after\",\"app-db-after\",1477492964),new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),new cljs.core.Keyword(null,\"interceptors\",\"interceptors\",-1546782951)], 0));\n});\nday8.re_frame_10x.metamorphic.summarise_match = (function day8$re_frame_10x$metamorphic$summarise_match(match){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.metamorphic.summarise_event,match);\n});\nday8.re_frame_10x.metamorphic.beginning_id = (function day8$re_frame_10x$metamorphic$beginning_id(match){\nreturn new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(cljs.core.first(match));\n});\nday8.re_frame_10x.metamorphic.ending_id = (function day8$re_frame_10x$metamorphic$ending_id(match){\nreturn new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(cljs.core.last(match));\n});\nday8.re_frame_10x.metamorphic.add_event_from_idle_QMARK_ = (function day8$re_frame_10x$metamorphic$add_event_from_idle_QMARK_(event){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"re-frame.router\",\"fsm-trigger\",\"re-frame.router/fsm-trigger\",1379787274),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310).cljs$core$IFn$_invoke$arity$1(event),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"idle\",\"idle\",-2007156861),new cljs.core.Keyword(null,\"add-event\",\"add-event\",938429088)], null))));\n});\nday8.re_frame_10x.metamorphic.subscription_QMARK_ = (function day8$re_frame_10x$metamorphic$subscription_QMARK_(trace){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"sub\",cljs.core.namespace(new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace)))) && (cljs.core.not(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(trace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880)], null)))));\n});\nday8.re_frame_10x.metamorphic.subscription_created_QMARK_ = (function day8$re_frame_10x$metamorphic$subscription_created_QMARK_(trace){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sub\",\"create\",\"sub/create\",-1301317560),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace))) && (cljs.core.not(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(trace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880)], null)))));\n});\nday8.re_frame_10x.metamorphic.subscription_re_run_QMARK_ = (function day8$re_frame_10x$metamorphic$subscription_re_run_QMARK_(trace){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sub\",\"run\",\"sub/run\",-1821315581),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\n});\nday8.re_frame_10x.metamorphic.subscription_destroyed_QMARK_ = (function day8$re_frame_10x$metamorphic$subscription_destroyed_QMARK_(trace){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sub\",\"dispose\",\"sub/dispose\",365440536),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\n});\nday8.re_frame_10x.metamorphic.subscription_not_run_QMARK_ = (function day8$re_frame_10x$metamorphic$subscription_not_run_QMARK_(trace){\nreturn false;\n});\n/**\n * Is this part of re-frame internals?\n */\nday8.re_frame_10x.metamorphic.low_level_re_frame_trace_QMARK_ = (function day8$re_frame_10x$metamorphic$low_level_re_frame_trace_QMARK_(trace){\nvar G__37034 = new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace);\nvar G__37034__$1 = (((G__37034 instanceof cljs.core.Keyword))?G__37034.fqn:null);\nswitch (G__37034__$1) {\ncase \"re-frame.router/fsm-trigger\":\nreturn true;\n\nbreak;\ndefault:\nreturn false;\n\n}\n});\n/**\n * Is this part of reagent internals?\n */\nday8.re_frame_10x.metamorphic.low_level_reagent_trace_QMARK_ = (function day8$re_frame_10x$metamorphic$low_level_reagent_trace_QMARK_(trace){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"componentWillUnmount\",\"componentWillUnmount\",1573788814),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\n});\nday8.re_frame_10x.metamorphic.render_QMARK_ = (function day8$re_frame_10x$metamorphic$render_QMARK_(trace){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\n});\nday8.re_frame_10x.metamorphic.unchanged_l2_subscription_QMARK_ = (function day8$re_frame_10x$metamorphic$unchanged_l2_subscription_QMARK_(sub){\nvar and__3911__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(sub,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"sub\",\"traits\",\"sub/traits\",1778340671),new cljs.core.Keyword(null,\"unchanged?\",\"unchanged?\",1212001763)], null));\nif(cljs.core.truth_(and__3911__auto__)){\nreturn ((cljs.core.not_any_QMARK_(((function (and__3911__auto__){\nreturn (function (p1__37036_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sub\",\"dispose\",\"sub/dispose\",365440536),p1__37036_SHARP_);\n});})(and__3911__auto__))\n,new cljs.core.Keyword(null,\"order\",\"order\",-1254677256).cljs$core$IFn$_invoke$arity$1(sub))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.get.cljs$core$IFn$_invoke$arity$2(sub,new cljs.core.Keyword(null,\"layer\",\"layer\",-1601820589)))));\n} else {\nreturn and__3911__auto__;\n}\n});\n/**\n * Marks the end of event processing running.\n */\nday8.re_frame_10x.metamorphic.finish_run_QMARK_ = (function day8$re_frame_10x$metamorphic$finish_run_QMARK_(event){\nvar and__3911__auto__ = day8.re_frame_10x.metamorphic.fsm_trigger_QMARK_(event);\nif(cljs.core.truth_(and__3911__auto__)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310).cljs$core$IFn$_invoke$arity$1(event),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"running\",\"running\",1554969103),new cljs.core.Keyword(null,\"finish-run\",\"finish-run\",753148477)], null));\n} else {\nreturn and__3911__auto__;\n}\n});\nday8.re_frame_10x.metamorphic.event_run_QMARK_ = (function day8$re_frame_10x$metamorphic$event_run_QMARK_(event){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"event\",\"event\",301435442),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event));\n});\nday8.re_frame_10x.metamorphic.event_handler_QMARK_ = (function day8$re_frame_10x$metamorphic$event_handler_QMARK_(trace){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"event\",\"handler\",\"event/handler\",-295903150),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\n});\nday8.re_frame_10x.metamorphic.event_dofx_QMARK_ = (function day8$re_frame_10x$metamorphic$event_dofx_QMARK_(trace){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\n});\n/**\n * Detects the start of a re-frame epoch\n * \n *   Normally an epoch would always start with the queue being run, but with a dispatch-sync, the event is run directly.\n */\nday8.re_frame_10x.metamorphic.start_of_epoch_QMARK_ = (function day8$re_frame_10x$metamorphic$start_of_epoch_QMARK_(event){\nvar or__3922__auto__ = day8.re_frame_10x.metamorphic.run_queue_QMARK_(event);\nif(cljs.core.truth_(or__3922__auto__)){\nreturn or__3922__auto__;\n} else {\nreturn day8.re_frame_10x.metamorphic.event_run_QMARK_(event);\n}\n});\n/**\n * Detects that a new epoch has started and that the previous one ended on the previous event.\n * \n *   If multiple events are dispatched while processing the first event, each one is considered its\n *   own epoch.\n */\nday8.re_frame_10x.metamorphic.start_of_epoch_and_prev_end_QMARK_ = (function day8$re_frame_10x$metamorphic$start_of_epoch_and_prev_end_QMARK_(event,state){\nvar or__3922__auto__ = day8.re_frame_10x.metamorphic.run_queue_QMARK_(event);\nif(cljs.core.truth_(or__3922__auto__)){\nreturn or__3922__auto__;\n} else {\nvar and__3911__auto__ = day8.re_frame_10x.metamorphic.event_run_QMARK_(event);\nif(cljs.core.truth_(and__3911__auto__)){\nreturn cljs.core.not(day8.re_frame_10x.metamorphic.run_queue_QMARK_(new cljs.core.Keyword(null,\"previous-event\",\"previous-event\",-726928509).cljs$core$IFn$_invoke$arity$1(state)));\n} else {\nreturn and__3911__auto__;\n}\n}\n});\nday8.re_frame_10x.metamorphic.quiescent_QMARK_ = (function day8$re_frame_10x$metamorphic$quiescent_QMARK_(event){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"reagent\",\"quiescent\",\"reagent/quiescent\",-16138681),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event));\n});\nday8.re_frame_10x.metamorphic.initial_parse_state = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177),null,new cljs.core.Keyword(null,\"previous-event\",\"previous-event\",-726928509),null,new cljs.core.Keyword(null,\"partitions\",\"partitions\",602979514),cljs.core.PersistentVector.EMPTY], null);\nday8.re_frame_10x.metamorphic.initial_sub_state = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"last-matched-id\",\"last-matched-id\",1192489515),(0),new cljs.core.Keyword(null,\"pre-epoch-state\",\"pre-epoch-state\",834094164),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"reaction-state\",\"reaction-state\",958292039),cljs.core.PersistentArrayMap.EMPTY], null);\nday8.re_frame_10x.metamorphic.parse_traces = (function day8$re_frame_10x$metamorphic$parse_traces(parse_state,traces){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (state,event){\nvar current_match = new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177).cljs$core$IFn$_invoke$arity$1(state);\nvar previous_event = new cljs.core.Keyword(null,\"previous-event\",\"previous-event\",-726928509).cljs$core$IFn$_invoke$arity$1(state);\nvar no_match_QMARK_ = (current_match == null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(((no_match_QMARK_)?(cljs.core.truth_(day8.re_frame_10x.metamorphic.start_of_epoch_QMARK_(event))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(state,new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [event], null)):state):(cljs.core.truth_(day8.re_frame_10x.metamorphic.quiescent_QMARK_(event))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$4(state,new cljs.core.Keyword(null,\"partitions\",\"partitions\",602979514),cljs.core.conj,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(current_match,event)),new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177),null):(cljs.core.truth_(day8.re_frame_10x.metamorphic.start_of_epoch_and_prev_end_QMARK_(event,state))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$4(state,new cljs.core.Keyword(null,\"partitions\",\"partitions\",602979514),cljs.core.conj,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(current_match,previous_event)),new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [event], null)):(cljs.core.truth_(day8.re_frame_10x.metamorphic.event_run_QMARK_(event))?cljs.core.update.cljs$core$IFn$_invoke$arity$4(state,new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177),cljs.core.conj,event):state\n)))),new cljs.core.Keyword(null,\"previous-event\",\"previous-event\",-726928509),event);\n}),parse_state,traces);\n});\nday8.re_frame_10x.metamorphic.matched_event = (function day8$re_frame_10x$metamorphic$matched_event(match){\nreturn cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.metamorphic.event_run_QMARK_,match));\n});\nday8.re_frame_10x.metamorphic.app_db_after = (function day8$re_frame_10x$metamorphic$app_db_after(event_trace){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(event_trace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.Keyword(null,\"app-db-after\",\"app-db-after\",1477492964)], null));\n});\nday8.re_frame_10x.metamorphic.app_db_before = (function day8$re_frame_10x$metamorphic$app_db_before(event_trace){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(event_trace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.Keyword(null,\"app-db-before\",\"app-db-before\",-1442902645)], null));\n});\n/**\n * Collect information about the subscription that we'd like\n *   to know, like its layer.\n */\nday8.re_frame_10x.metamorphic.subscription_info = (function day8$re_frame_10x$metamorphic$subscription_info(initial_state,filtered_traces,app_db_id){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (state,trace){\nreturn cljs.core.assoc_in(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310).cljs$core$IFn$_invoke$arity$1(trace),new cljs.core.Keyword(null,\"layer\",\"layer\",-1601820589)], null),(cljs.core.truth_(cljs.core.some((function (p1__37119_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(app_db_id,p1__37119_SHARP_);\n}),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(trace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.Keyword(null,\"input-signals\",\"input-signals\",563633497)], null))))?(2):(3)));\n}),initial_state,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.metamorphic.subscription_re_run_QMARK_,filtered_traces));\n});\n/**\n * Remove information about the subscription that is transient and specific to a single\n *   phase.\n */\nday8.re_frame_10x.metamorphic.reset_sub_state = (function day8$re_frame_10x$metamorphic$reset_sub_state(state){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (me){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"disposed?\",\"disposed?\",1178302522).cljs$core$IFn$_invoke$arity$1(cljs.core.val(me)))){\nreturn null;\n} else {\nreturn me;\n}\n})),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p__37133){\nvar vec__37134 = p__37133;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37134,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37134,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(v,new cljs.core.Keyword(null,\"order\",\"order\",-1254677256),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"created?\",\"created?\",850508195),new cljs.core.Keyword(null,\"run?\",\"run?\",752622859),new cljs.core.Keyword(null,\"disposed?\",\"disposed?\",1178302522),new cljs.core.Keyword(null,\"previous-value\",\"previous-value\",-1638799677),new cljs.core.Keyword(\"sub\",\"traits\",\"sub/traits\",1778340671)], 0))], null);\n}))),state);\n});\nday8.re_frame_10x.metamorphic.process_sub_traces = (function day8$re_frame_10x$metamorphic$process_sub_traces(initial_state,traces){\nvar first_pass = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (init_state,trace){\nvar tags = cljs.core.get.cljs$core$IFn$_invoke$arity$2(trace,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977));\nvar reaction_id = new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788).cljs$core$IFn$_invoke$arity$1(tags);\nvar state = cljs.core.assoc_in(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(init_state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reaction_id,new cljs.core.Keyword(null,\"order\",\"order\",-1254677256)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentVector.EMPTY),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reaction_id,new cljs.core.Keyword(null,\"subscription\",\"subscription\",1949009182)], null),new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131).cljs$core$IFn$_invoke$arity$1(tags));\nvar new_state = (function (){var G__37137 = new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace);\nvar G__37137__$1 = (((G__37137 instanceof cljs.core.Keyword))?G__37137.fqn:null);\nswitch (G__37137__$1) {\ncase \"sub/create\":\nreturn cljs.core.assoc_in(cljs.core.assoc_in(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reaction_id,new cljs.core.Keyword(null,\"created?\",\"created?\",850508195)], null),true),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reaction_id,new cljs.core.Keyword(null,\"subscription\",\"subscription\",1949009182)], null),new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131).cljs$core$IFn$_invoke$arity$1(tags));\n\nbreak;\ncase \"sub/run\":\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(state,reaction_id,((function (G__37137,G__37137__$1,tags,reaction_id,state){\nreturn (function (sub_state){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(((cljs.core.contains_QMARK_(sub_state,new cljs.core.Keyword(null,\"value\",\"value\",305978217)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(sub_state,new cljs.core.Keyword(null,\"previous-value\",\"previous-value\",-1638799677),new cljs.core.Keyword(null,\"value\",\"value\",305978217).cljs$core$IFn$_invoke$arity$1(sub_state)):sub_state),new cljs.core.Keyword(null,\"run?\",\"run?\",752622859),true,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(null,\"value\",\"value\",305978217).cljs$core$IFn$_invoke$arity$1(tags)], 0));\n});})(G__37137,G__37137__$1,tags,reaction_id,state))\n);\n\nbreak;\ncase \"sub/dispose\":\nreturn cljs.core.assoc_in(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reaction_id,new cljs.core.Keyword(null,\"disposed?\",\"disposed?\",1178302522)], null),true);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__37137__$1)].join('')));\n\n}\n})();\nif(cljs.core.contains_QMARK_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new_state,reaction_id),new cljs.core.Keyword(null,\"subscription\",\"subscription\",1949009182))){\n} else {\nconsole.warn(trace,cljs.core.get.cljs$core$IFn$_invoke$arity$2(new_state,reaction_id));\n}\n\nreturn new_state;\n}),initial_state,traces);\nvar second_pass = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (first_pass){\nreturn (function (all_state,p__37138){\nvar vec__37139 = p__37138;\nvar sub_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37139,(0),null);\nvar sub_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37139,(1),null);\nif(((cljs.core.contains_QMARK_(sub_state,new cljs.core.Keyword(null,\"previous-value\",\"previous-value\",-1638799677))) && (cljs.core.contains_QMARK_(sub_state,new cljs.core.Keyword(null,\"value\",\"value\",305978217))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"previous-value\",\"previous-value\",-1638799677).cljs$core$IFn$_invoke$arity$1(sub_state),new cljs.core.Keyword(null,\"value\",\"value\",305978217).cljs$core$IFn$_invoke$arity$1(sub_state))))){\nreturn cljs.core.assoc_in(all_state,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sub_id,new cljs.core.Keyword(\"sub\",\"traits\",\"sub/traits\",1778340671),new cljs.core.Keyword(null,\"unchanged?\",\"unchanged?\",1212001763)], null),true);\n} else {\nreturn all_state;\n}\n});})(first_pass))\n,first_pass,first_pass);\nreturn second_pass;\n});\n/**\n * Build up the state of re-frame's running subscriptions over each matched epoch.\n *   Returns initial state as first item in list\n */\nday8.re_frame_10x.metamorphic.subscription_match_state = (function day8$re_frame_10x$metamorphic$subscription_match_state(sub_state,filtered_traces,new_matches){\nreturn cljs.core.reductions.cljs$core$IFn$_invoke$arity$3((function (state,match){\nvar previous_id = new cljs.core.Keyword(null,\"last-matched-id\",\"last-matched-id\",1192489515).cljs$core$IFn$_invoke$arity$1(state);\nvar first_match_id = new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(cljs.core.first(match));\nvar last_match_id = new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(cljs.core.last(match));\nvar pre_epoch_traces = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.metamorphic.id_between_xf((previous_id + (1)),(first_match_id - (1))),cljs.core.filter.cljs$core$IFn$_invoke$arity$1(day8.re_frame_10x.metamorphic.subscription_QMARK_)),filtered_traces);\nvar epoch_traces = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.metamorphic.id_between_xf(first_match_id,last_match_id),cljs.core.filter.cljs$core$IFn$_invoke$arity$1(day8.re_frame_10x.metamorphic.subscription_QMARK_)),filtered_traces);\nvar reaction_state = new cljs.core.Keyword(null,\"reaction-state\",\"reaction-state\",958292039).cljs$core$IFn$_invoke$arity$1(state);\nvar pre_epoch_state = day8.re_frame_10x.metamorphic.process_sub_traces(day8.re_frame_10x.metamorphic.reset_sub_state(reaction_state),pre_epoch_traces);\nvar epoch_state = day8.re_frame_10x.metamorphic.process_sub_traces(day8.re_frame_10x.metamorphic.reset_sub_state(pre_epoch_state),epoch_traces);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"pre-epoch-state\",\"pre-epoch-state\",834094164),pre_epoch_state,new cljs.core.Keyword(null,\"reaction-state\",\"reaction-state\",958292039),epoch_state,new cljs.core.Keyword(null,\"first-matched-id\",\"first-matched-id\",-1052882417),first_match_id,new cljs.core.Keyword(null,\"last-matched-id\",\"last-matched-id\",1192489515),last_match_id,new cljs.core.Keyword(null,\"previous-matched-id\",\"previous-matched-id\",888670192),previous_id], null);\n}),sub_state,new_matches);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","day8/re_frame_10x/metamorphic.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",34],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$day8.re-frame-10x.metamorphic","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^Q","~$goog","^R"],"~:seen",["^J",[]],"~:uses",null,"~:require-macros",["^ ","^Q","^Q"],"~:form",["~#list",["~$ns","^L"]],"~:js-deps",["^ "],"~:deps",["^R","^Q"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","day8/re_frame_10x/metamorphic.cljc"],"~:compiled-at",1535834870284,"~:resource-name","day8/re_frame_10x/metamorphic.cljc","~:warnings",[],"~:source","(ns day8.re-frame-10x.metamorphic)\n\n(defn id-between-xf\n  ;; Copied here because I got undeclared Var warnings from figwheel when requiring a CLJC utils ns.\n  \"Returns a transducer that filters for :id between beginning and ending. Inclusive on both ends.\"\n  [beginning ending]\n  (filter #(<= beginning (:id %) ending)))\n\n;; What starts an epoch?\n\n;;; idle -> dispatch -> running\n;;; running -> dispatch -> handling new event\n\n;; What ends an epoch?\n\n;;; the start of a new epoch\n;;; a Reagent animation frame ending AND nothing else being scheduled\n\n;; Slight wrinkles\n\n;;; Any renders that run between epochs deserve their own epoch really.\n;;; Dispatch-sync's\n\n;;;\n\n;\n;(defn add-event-from-idle? [event history pattern-sequence pattern]\n;  #_(println @history event)\n;\n;  (and (= :re-frame.router/fsm-trigger (:op-type event))\n;       (= (:operation event)\n;          [:idle :add-event])))\n;\n;(defn event-run? [event history pattern-sequence pattern]\n;  (= :event (:op-type event)))\n;\n;(defn epoch-started? [event history pattern-sequence pattern]\n;  (or (add-event-from-idle? event history pattern-sequence pattern)\n;      (and (event-run? event history pattern-sequence pattern)\n;           (empty? @history))))\n;\n(defn fsm-trigger? [event]\n  (= :re-frame.router/fsm-trigger (:op-type event)))\n;\n;(defn redispatched-event? [event history pattern-sequence pattern]\n;  (and (fsm-trigger? event)\n;       (= (:operation event)\n;          [:running :add-event])))\n;\n;(defn router-scheduled? [event history pattern-sequence pattern]\n;  (and (fsm-trigger? event)\n;       (= (:operation event)\n;          [:running :finish-run])\n;       (= :running (get-in event [:tags :current-state]))\n;       (= :scheduled (get-in event [:tags :new-state]))))\n;\n;(defn router-finished? [event history pattern-sequence pattern]\n;  (and (fsm-trigger? event)\n;       (= (:operation event)\n;          [:running :finish-run])\n;       (= :running (get-in event [:tags :current-state]))\n;       (= :idle (get-in event [:tags :new-state]))))\n;\n;(defn quiescent? [event _ _ _]\n;  (= :reagent/quiescent (:op-type event)))\n;\n;(defn epoch-ended? [event history pattern-sequence pattern]\n;  (or (quiescent? event history pattern-sequence pattern)\n;      (epoch-started? event history pattern-sequence pattern)))\n;\n\n(defn elapsed-time [ev1 ev2]\n  (let [start-of-epoch (:start ev1)\n        end-of-epoch   (:end ev2)]\n    (when (and (some? start-of-epoch) (some? end-of-epoch))\n      (- end-of-epoch start-of-epoch))))\n\n(defn run-queue? [event]\n  (and (fsm-trigger? event)\n       (= (:operation event)\n          [:scheduled :run-queue])))\n\n(defn request-animation-frame? [event]\n  (= :raf (:op-type event)))\n\n(defn request-animation-frame-end? [event]\n  (= :raf-end (:op-type event)))\n\n(defn summarise-event [ev]\n  (-> ev\n      (dissoc :start :duration :end :child-of)\n      (update :tags dissoc :app-db-before :app-db-after :effects :coeffects :interceptors)))\n\n\n(defn summarise-match [match]\n  (map summarise-event match))\n;\n(defn beginning-id [match]\n  (:id (first match)))\n\n(defn ending-id [match]\n  (:id (last match)))\n;\n;(defn parse-traces-metam\n;  \"Returns a metamorphic runtime\"\n;  [traces]\n;  (let [runtime (-> (m/new-pattern-sequence \"simple traces\")\n;                    (m/begin \"new-epoch-started\" epoch-started?)\n;                    #_(m/followed-by \"run-queue\" run-queue? {:optional? true})\n;                    ;(m/followed-by \"event-run\" event-run?)\n;                    #_(m/followed-by \"router-finished\" router-finished?)\n;                    ;(m/followed-by \"raf\" request-animation-frame?)\n;                    ;(m/followed-by \"raf-end\" request-animation-frame-end?)\n;                    (m/followed-by \"epoch-ended\" epoch-ended?)\n;                    (rt/initialize-runtime))\n;        rt      (reduce rt/evaluate-event runtime traces)]\n;    #_(println \"Count\"\n;               (count (:matches rt))\n;               (map count (:matches rt)))\n;    #_(map summarise-match (:matches rt))\n;    rt))\n\n;;;;;;\n\n;; TODO: this needs to be included too as a starting point.\n(defn add-event-from-idle? [event]\n  (and (= :re-frame.router/fsm-trigger (:op-type event))\n       (= (:operation event)\n          [:idle :add-event])))\n\n(defn subscription? [trace]\n  (and (= \"sub\" (namespace (:op-type trace)))\n       ;; TODO: should we remove cached checks?\n       (not (get-in trace [:tags :cached?]))))\n\n(defn subscription-created? [trace]\n  (and (= :sub/create (:op-type trace))\n       (not (get-in trace [:tags :cached?]))))\n\n(defn subscription-re-run? [trace]\n  (= :sub/run (:op-type trace)))\n\n(defn subscription-destroyed? [trace]\n  (= :sub/dispose (:op-type trace)))\n\n(defn subscription-not-run? [trace]\n  false)\n\n(defn low-level-re-frame-trace?\n  \"Is this part of re-frame internals?\"\n  [trace]\n  (case (:op-type trace)\n    (:re-frame.router/fsm-trigger) true\n    false))\n\n(defn low-level-reagent-trace?\n  \"Is this part of reagent internals?\"\n  [trace]\n  (= :componentWillUnmount (:op-type trace)))\n\n(defn render? [trace]\n  (= :render (:op-type trace)))\n\n(defn unchanged-l2-subscription? [sub]\n  (and (get-in sub [:sub/traits :unchanged?])\n       (not-any? #(= :sub/dispose %) (:order sub))\n       (= 2 (get sub :layer))))\n\n\n(defn finish-run?\n  \"Marks the end of event processing running.\"\n  [event]\n  (and (fsm-trigger? event)\n       (= (:operation event)\n          [:running :finish-run])))\n\n(defn event-run? [event]\n  (= :event (:op-type event)))\n\n(defn event-handler? [trace]\n  (= :event/handler (:op-type trace)))\n\n(defn event-dofx? [trace]\n  (= :event/do-fx (:op-type trace)))\n\n(defn start-of-epoch?\n  \"Detects the start of a re-frame epoch\n\n  Normally an epoch would always start with the queue being run, but with a dispatch-sync, the event is run directly.\"\n  [event]\n  (or (run-queue? event)\n      (event-run? event)))\n\n(defn start-of-epoch-and-prev-end?\n  \"Detects that a new epoch has started and that the previous one ended on the previous event.\n\n  If multiple events are dispatched while processing the first event, each one is considered its\n  own epoch.\"\n  [event state]\n  (or (run-queue? event)\n      ;; An event ran, and the previous event was not\n      ;; a run-queue.\n      (and (event-run? event)\n           (not (run-queue? (:previous-event state))))))\n\n(defn quiescent? [event]\n  (= :reagent/quiescent (:op-type event)))\n\n(def initial-parse-state\n  {:current-match  nil\n   :previous-event nil\n   :partitions     []})\n\n(def initial-sub-state\n  {:last-matched-id 0\n   :pre-epoch-state {}\n   :reaction-state  {}})\n\n(defn parse-traces [parse-state traces]\n  (reduce\n    (fn [state event]\n      (let [current-match  (:current-match state)\n            previous-event (:previous-event state)\n            no-match?      (nil? current-match)]\n        (-> (cond\n\n              ;; No current match yet, check if this is the start of an epoch\n              no-match?\n              (if (start-of-epoch? event)\n                (assoc state :current-match [event])\n                state)\n\n              ;; We are in an epoch match, and reagent has gone to a quiescent state\n              (quiescent? event)\n              (-> state\n                  (update :partitions conj (conj current-match event))\n                  (assoc :current-match nil))\n\n              ;; We are in an epoch match, and we have started a new epoch\n              ;; The previously seen event was the last event of the old epoch,\n              ;; and we need to start a new one from this event.\n              (start-of-epoch-and-prev-end? event state)\n              (-> state\n                  (update :partitions conj (conj current-match previous-event))\n                  (assoc :current-match [event]))\n\n              (event-run? event)\n              (update state :current-match conj event)\n\n\n              :else\n              state\n              ;; Add a timeout/warning if a match goes on for more than a second?\n\n              )\n            (assoc :previous-event event))))\n    parse-state\n    traces))\n\n(defn matched-event [match]\n  (->> match\n       (filter event-run?)\n       (first)))\n\n(defn app-db-after [event-trace]\n  (get-in event-trace [:tags :app-db-after]))\n\n(defn app-db-before [event-trace]\n  (get-in event-trace [:tags :app-db-before]))\n\n(defn subscription-info\n  \"Collect information about the subscription that we'd like\n  to know, like its layer.\"\n  [initial-state filtered-traces app-db-id]\n  (->> filtered-traces\n       (filter subscription-re-run?)\n       (reduce (fn [state trace]\n                 ;; Can we take any shortcuts by assuming that a sub with\n                 ;; multiple input signals is a layer 3? I don't *think* so because\n                 ;; one of those input signals could be a naughty subscription to app-db\n                 ;; directly.\n                 ;; If we knew when subscription handlers were loaded/reloaded then\n                 ;; we could avoid doing most of this work, and only check the input\n                 ;; signals if we hadn't seen it before, or it had been reloaded.\n                 (assoc-in state\n                           [(:operation trace) :layer]\n                           ;; If any of the input signals are app-db, it is a layer 2 sub, else 3\n                           (if (some #(= app-db-id %) (get-in trace [:tags :input-signals]))\n                             2\n                             3)))\n               initial-state)))\n\n(defn reset-sub-state\n  \"Remove information about the subscription that is transient and specific to a single\n  phase.\"\n  [state]\n  (into {}\n        (comp\n          ;; Remove disposed subscriptions\n          (filter (fn [me] (when-not (:disposed? (val me)) me)))\n          ;; Remove transient state\n          (map (fn [[k v]]\n                 [k (dissoc v :order :created? :run? :disposed? :previous-value :sub/traits)])))\n        state))\n\n\n\n(defn process-sub-traces\n  [initial-state traces]\n  (let [first-pass  (reduce (fn [init-state trace]\n                              (let [tags        (get trace :tags)\n                                    reaction-id (:reaction tags)\n                                    state       (-> init-state\n                                                    (update-in [reaction-id :order] (fnil conj []) (:op-type trace))\n                                                    ;; In a perfect world we could provide this only in the :sub/create branch, but we have\n                                                    ;; zombie reactions roaming the DOM, so we re-add it on every trace in case a sub was\n                                                    ;; disposed of previously (and removed from the sub state).\n                                                    (assoc-in [reaction-id :subscription] (:query-v tags)))\n                                    new-state\n                                                (case (:op-type trace)\n                                                  :sub/create (-> state\n                                                                  (assoc-in [reaction-id :created?] true)\n                                                                  (assoc-in [reaction-id :subscription] (:query-v tags)))\n                                                  :sub/run (update state reaction-id (fn [sub-state]\n                                                                                       ;; TODO: should we keep track of subscriptions that have been disposed\n                                                                                       ;; so we can detect zombies?\n\n                                                                                       ;; TODO: this should only update once per phase, even if a sub runs multiple times\n                                                                                       (-> (if (contains? sub-state :value)\n                                                                                             (assoc sub-state :previous-value (:value sub-state))\n                                                                                             sub-state)\n                                                                                           (assoc :run? true\n                                                                                                  :value (:value tags)))))\n                                                  :sub/dispose (assoc-in state [reaction-id :disposed?] true))]\n                                (when-not (contains? (get new-state reaction-id) :subscription)\n                                  #?(:cljs (js/console.warn trace (get new-state reaction-id))))\n\n\n                                new-state))\n                            initial-state\n                            traces)\n        second-pass (reduce (fn [all-state [sub-id sub-state]]\n                              ;; TODO: integrate this into the first pass for efficiency\n                              (if (and (contains? sub-state :previous-value)\n                                       (contains? sub-state :value)\n                                       (= (:previous-value sub-state) (:value sub-state)))\n                                (assoc-in all-state [sub-id :sub/traits :unchanged?] true)\n                                all-state))\n                            first-pass\n                            first-pass)]\n    second-pass))\n\n(defn subscription-match-state\n  \"Build up the state of re-frame's running subscriptions over each matched epoch.\n  Returns initial state as first item in list\"\n  [sub-state filtered-traces new-matches]\n  ;; For each match that we process there are two phases:\n  ;; - Phase 1: Update and collect the state of the subscriptions that have trace between the last epoch\n  ;;   and the new epoch. These traces can be from hover state, local ratom events, figwheel re-renders\n  ;;   or rft resetting app-db. Most of the time these traces are noisy and not interesting, but we do\n  ;;   need to use them to maintain our subscription state. We also want to show them down below the main\n  ;;   subs, in case someone is wondering where they went. If there are no sub traces to process then\n  ;;   this phase doesn't run.\n  ;; - Phase 2: Update and collect the state of the subscription traces within an epoch. These subscription\n  ;;   traces are going to be changing because of app-db changes.\n  ;; We collect and present the state for both phases for consumption in the subs panel\n\n  ;; If you look closely at the state of the subscriptions, and the traces they derive from, you will\n  ;; come to a disturbing realisation: Disposed reactions are resurrected and continue to be run.\n  ;; This is tracked in https://github.com/reagent-project/reagent/pull/270.\n\n  ;#?(:cljs (js/console.log \"New matches?\" (not (empty? new-matches))))\n  (reductions (fn [state match]\n                (let [previous-id      (:last-matched-id state)\n                      first-match-id   (:id (first match))\n                      last-match-id    (:id (last match))\n                      pre-epoch-traces (into []\n                                             (comp\n                                               (id-between-xf (inc previous-id)\n                                                              (dec first-match-id))\n                                               (filter subscription?))\n                                             filtered-traces)\n                      epoch-traces     (into []\n                                             (comp\n                                               (id-between-xf first-match-id last-match-id)\n                                               (filter subscription?))\n                                             filtered-traces)\n                      reaction-state   (:reaction-state state)\n                      pre-epoch-state  (-> reaction-state\n                                           (reset-sub-state)\n                                           (process-sub-traces pre-epoch-traces))\n                      epoch-state      (-> pre-epoch-state\n                                           (reset-sub-state)\n                                           (process-sub-traces epoch-traces))]\n                  {:pre-epoch-state     pre-epoch-state\n                   :reaction-state      epoch-state\n                   :first-matched-id    first-match-id\n                   :last-matched-id     last-match-id\n                   :previous-matched-id previous-id}))\n              sub-state\n              new-matches))\n","~:reader-features",["^J",["~:cljs"]],"~:source-map",["^ ","~i2",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",2],["^ ","^18",46,"^19",5],["^ ","^18",0,"^19",6]],"~i6",[["^ ","^18",0,"^19",5,"^K","day8.re-frame-10x.metamorphic/id-between-xf"]]],"~i5",["^ ","~i3",[["^ ","^18",100,"^19",5,"^K","beginning"]],"~i13",[["^ ","^18",110,"^19",5,"^K","ending"]]],"~i6",["^ ","~i2",[["^ ","^18",0,"^19",6],["^ ","^18",54,"^19",6],["^ ","^18",65,"^19",6,"^K","p1__37013#"],["^ ","^18",0,"^19",7]],"~i3",[["^ ","^18",7,"^19",6,"^K","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"~i11",[["^ ","^18",0,"^19",7],["^ ","^18",9,"^19",7],["^ ","^18",127,"^19",7]],"~i15",[["^ ","^18",10,"^19",7,"^K","beginning"]],"~i25",[["^ ","^18",23,"^19",7],["^ ","^18",23,"^19",7],["^ ","^18",103,"^19",7,"^K","p1__37013#"],["^ ","^18",128,"^19",7],["^ ","^18",128,"^19",7],["^ ","^18",208,"^19",7,"^K","p1__37013#"]],"~i33",[["^ ","^18",229,"^19",7,"^K","ending"]]],"~i41",["^ ","~i0",[["^ ","^18",0,"^19",10],["^ ","^18",51,"^19",10],["^ ","^18",0,"^19",11]],"~i6",[["^ ","^18",0,"^19",10,"^K","day8.re-frame-10x.metamorphic/fsm-trigger?"]],"~i20",[["^ ","^18",110,"^19",10,"^K","event"]]],"~i42",["^ ","~i2",[["^ ","^18",0,"^19",11],["^ ","^18",52,"^19",11]],"~i3",[["^ ","^18",7,"^19",11,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i34",[["^ ","^18",148,"^19",11],["^ ","^18",148,"^19",11]],"~i44",[["^ ","^18",238,"^19",11,"^K","event"]]],"~i71",["^ ","~i0",[["^ ","^18",0,"^19",13],["^ ","^18",45,"^19",13],["^ ","^18",0,"^19",14]],"~i6",[["^ ","^18",0,"^19",13,"^K","day8.re-frame-10x.metamorphic/elapsed-time"]],"^1@",[["^ ","^18",98,"^19",13,"^K","ev1"]],"~i24",[["^ ","^18",102,"^19",13,"^K","ev2"]]],"~i72",["^ ","~i2",[["^ ","^18",0,"^19",14],["^ ","^18",0,"^19",16]],"~i8",[["^ ","^18",4,"^19",14,"^K","start-of-epoch"]],"~i23",[["^ ","^18",21,"^19",14],["^ ","^18",21,"^19",14]],"~i31",[["^ ","^18",106,"^19",14,"^K","ev1"]]],"~i73",["^ ","~i8",[["^ ","^18",4,"^19",15,"^K","end-of-epoch"]],"^1G",[["^ ","^18",19,"^19",15],["^ ","^18",19,"^19",15]],"~i29",[["^ ","^18",100,"^19",15,"^K","ev2"]]],"~i74",["^ ","~i4",[["^ ","^18",0,"^19",16],["^ ","^18",0,"^19",17],["^ ","^18",0,"^19",19]],"~i10",[["^ ","^18",3,"^19",16]],"^1<",[["^ ","^18",5,"^19",16],["^ ","^18",7,"^19",16],["^ ","^18",26,"^19",16]],"~i22",[["^ ","^18",8,"^19",16,"^K","start-of-epoch"]],"~i38",[["^ ","^18",38,"^19",16],["^ ","^18",40,"^19",16],["^ ","^18",57,"^19",16]],"~i45",[["^ ","^18",41,"^19",16,"^K","end-of-epoch"]]],"~i75",["^ ","~i6",[["^ ","^18",0,"^19",17]],"~i9",[["^ ","^18",8,"^19",17,"^K","end-of-epoch"]],"^1M",[["^ ","^18",23,"^19",17,"^K","start-of-epoch"]]],"~i77",["^ ","~i0",[["^ ","^18",0,"^19",22],["^ ","^18",49,"^19",22],["^ ","^18",0,"^19",23]],"~i6",[["^ ","^18",0,"^19",22,"^K","day8.re-frame-10x.metamorphic/run-queue?"]],"~i18",[["^ ","^18",106,"^19",22,"^K","event"]]],"~i78",["^ ","~i2",[["^ ","^18",0,"^19",23],["^ ","^18",4,"^19",23,"^K","and__3911__auto__"],["^ ","^18",0,"^19",24],["^ ","^18",0,"^19",24],["^ ","^18",20,"^19",24,"^K","and__3911__auto__"],["^ ","^18",0,"^19",27,"^K","and__3911__auto__"]],"~i7",[["^ ","^18",24,"^19",23]],"~i8",[["^ ","^18",24,"^19",23,"^K","day8.re-frame-10x.metamorphic/fsm-trigger?"]],"~i21",[["^ ","^18",73,"^19",23,"^K","event"]]],"~i79",["^ ","~i7",[["^ ","^18",0,"^19",25],["^ ","^18",153,"^19",25],["^ ","^18",236,"^19",25],["^ ","^18",298,"^19",25]],"~i8",[["^ ","^18",7,"^19",25,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1L",[["^ ","^18",52,"^19",25],["^ ","^18",52,"^19",25]],"^1M",[["^ ","^18",146,"^19",25,"^K","event"]]],"~i82",["^ ","~i0",[["^ ","^18",0,"^19",30],["^ ","^18",63,"^19",30],["^ ","^18",0,"^19",31]],"~i6",[["^ ","^18",0,"^19",30,"^K","day8.re-frame-10x.metamorphic/request-animation-frame?"]],"~i32",[["^ ","^18",134,"^19",30,"^K","event"]]],"~i83",["^ ","~i2",[["^ ","^18",0,"^19",31],["^ ","^18",52,"^19",31]],"~i3",[["^ ","^18",7,"^19",31,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1L",[["^ ","^18",104,"^19",31],["^ ","^18",104,"^19",31]],"^1@",[["^ ","^18",194,"^19",31,"^K","event"]]],"~i85",["^ ","~i0",[["^ ","^18",0,"^19",33],["^ ","^18",67,"^19",33],["^ ","^18",0,"^19",34]],"~i6",[["^ ","^18",0,"^19",33,"^K","day8.re-frame-10x.metamorphic/request-animation-frame-end?"]],"~i36",[["^ ","^18",142,"^19",33,"^K","event"]]],"~i86",["^ ","~i2",[["^ ","^18",0,"^19",34],["^ ","^18",52,"^19",34]],"~i3",[["^ ","^18",7,"^19",34,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i14",[["^ ","^18",111,"^19",34],["^ ","^18",111,"^19",34]],"^1E",[["^ ","^18",201,"^19",34,"^K","event"]]],"~i88",["^ ","~i0",[["^ ","^18",0,"^19",36],["^ ","^18",48,"^19",36],["^ ","^18",0,"^19",37]],"~i6",[["^ ","^18",0,"^19",36,"^K","day8.re-frame-10x.metamorphic/summarise-event"]],"^1G",[["^ ","^18",104,"^19",36,"^K","ev"]]],"~i89",["^ ","~i6",[["^ ","^18",115,"^19",37,"^K","ev"]]],"~i90",["^ ","~i6",[["^ ","^18",61,"^19",37],["^ ","^18",118,"^19",37],["^ ","^18",223,"^19",37],["^ ","^18",284,"^19",37],["^ ","^18",335,"^19",37]],"~i7",[["^ ","^18",61,"^19",37,"^K","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic"]]],"~i91",["^ ","~i6",[["^ ","^18",0,"^19",37],["^ ","^18",402,"^19",37],["^ ","^18",472,"^19",37],["^ ","^18",544,"^19",37],["^ ","^18",613,"^19",37],["^ ","^18",722,"^19",37],["^ ","^18",784,"^19",37]],"~i7",[["^ ","^18",7,"^19",37,"^K","cljs.core.update.cljs$core$IFn$_invoke$arity$variadic"]],"^1@",[["^ ","^18",455,"^19",37,"^K","cljs.core/dissoc"]]],"~i94",["^ ","~i0",[["^ ","^18",0,"^19",39],["^ ","^18",48,"^19",39],["^ ","^18",0,"^19",40]],"~i6",[["^ ","^18",0,"^19",39,"^K","day8.re-frame-10x.metamorphic/summarise-match"]],"^1G",[["^ ","^18",104,"^19",39,"^K","match"]]],"~i95",["^ ","~i2",[["^ ","^18",0,"^19",40]],"~i3",[["^ ","^18",7,"^19",40,"^K","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"~i7",[["^ ","^18",51,"^19",40,"^K","day8.re-frame-10x.metamorphic/summarise-event"]],"^1G",[["^ ","^18",97,"^19",40,"^K","match"]]],"~i97",["^ ","~i0",[["^ ","^18",0,"^19",42],["^ ","^18",45,"^19",42],["^ ","^18",0,"^19",43]],"~i6",[["^ ","^18",0,"^19",42,"^K","day8.re-frame-10x.metamorphic/beginning-id"]],"^1@",[["^ ","^18",98,"^19",42,"^K","match"]]],"~i98",["^ ","~i2",[["^ ","^18",0,"^19",43],["^ ","^18",7,"^19",43]],"~i7",[["^ ","^18",87,"^19",43]],"~i8",[["^ ","^18",87,"^19",43,"^K","cljs.core/first"]],"^20",[["^ ","^18",103,"^19",43,"^K","match"]]],"~i100",["^ ","~i0",[["^ ","^18",0,"^19",45],["^ ","^18",42,"^19",45],["^ ","^18",0,"^19",46]],"~i6",[["^ ","^18",0,"^19",45,"^K","day8.re-frame-10x.metamorphic/ending-id"]],"~i17",[["^ ","^18",92,"^19",45,"^K","match"]]],"~i101",["^ ","~i2",[["^ ","^18",0,"^19",46],["^ ","^18",7,"^19",46]],"~i7",[["^ ","^18",87,"^19",46]],"~i8",[["^ ","^18",87,"^19",46,"^K","cljs.core/last"]],"^1:",[["^ ","^18",102,"^19",46,"^K","match"]]],"~i125",["^ ","~i0",[["^ ","^18",0,"^19",48],["^ ","^18",59,"^19",48],["^ ","^18",0,"^19",49]],"~i6",[["^ ","^18",0,"^19",48,"^K","day8.re-frame-10x.metamorphic/add-event-from-idle?"]],"~i28",[["^ ","^18",126,"^19",48,"^K","event"]]],"~i126",["^ ","~i2",[["^ ","^18",0,"^19",49]],"~i7",[["^ ","^18",9,"^19",49],["^ ","^18",54,"^19",49]],"~i8",[["^ ","^18",9,"^19",49,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i39",[["^ ","^18",150,"^19",49],["^ ","^18",150,"^19",49]],"~i49",[["^ ","^18",240,"^19",49,"^K","event"]]],"~i127",["^ ","~i7",[["^ ","^18",253,"^19",49],["^ ","^18",399,"^19",49],["^ ","^18",482,"^19",49],["^ ","^18",536,"^19",49]],"~i8",[["^ ","^18",253,"^19",49,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1L",[["^ ","^18",298,"^19",49],["^ ","^18",298,"^19",49]],"^1M",[["^ ","^18",392,"^19",49,"^K","event"]]],"~i130",["^ ","~i0",[["^ ","^18",0,"^19",51],["^ ","^18",52,"^19",51],["^ ","^18",0,"^19",52]],"~i6",[["^ ","^18",0,"^19",51,"^K","day8.re-frame-10x.metamorphic/subscription?"]],"^1T",[["^ ","^18",112,"^19",51,"^K","trace"]]],"~i131",["^ ","~i2",[["^ ","^18",0,"^19",52]],"~i7",[["^ ","^18",9,"^19",52],["^ ","^18",54,"^19",52]],"~i8",[["^ ","^18",9,"^19",52,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i16",[["^ ","^18",60,"^19",52]],"^2:",[["^ ","^18",60,"^19",52,"^K","cljs.core/namespace"]],"~i27",[["^ ","^18",80,"^19",52],["^ ","^18",80,"^19",52]],"~i37",[["^ ","^18",170,"^19",52,"^K","trace"]]],"~i133",["^ ","~i7",[["^ ","^18",184,"^19",52]],"~i8",[["^ ","^18",184,"^19",52,"^K","cljs.core/not"]],"~i12",[["^ ","^18",198,"^19",52],["^ ","^18",251,"^19",52],["^ ","^18",334,"^19",52],["^ ","^18",387,"^19",52]],"^1:",[["^ ","^18",198,"^19",52,"^K","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1@",[["^ ","^18",245,"^19",52,"^K","trace"]]],"~i135",["^ ","~i0",[["^ ","^18",0,"^19",54],["^ ","^18",60,"^19",54],["^ ","^18",0,"^19",55]],"~i6",[["^ ","^18",0,"^19",54,"^K","day8.re-frame-10x.metamorphic/subscription-created?"]],"^1J",[["^ ","^18",128,"^19",54,"^K","trace"]]],"~i136",["^ ","~i2",[["^ ","^18",0,"^19",55]],"~i7",[["^ ","^18",9,"^19",55],["^ ","^18",54,"^19",55]],"~i8",[["^ ","^18",9,"^19",55,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1M",[["^ ","^18",117,"^19",55],["^ ","^18",117,"^19",55]],"^1W",[["^ ","^18",207,"^19",55,"^K","trace"]]],"~i137",["^ ","~i7",[["^ ","^18",220,"^19",55]],"~i8",[["^ ","^18",220,"^19",55,"^K","cljs.core/not"]],"^2H",[["^ ","^18",234,"^19",55],["^ ","^18",287,"^19",55],["^ ","^18",370,"^19",55],["^ ","^18",423,"^19",55]],"^1:",[["^ ","^18",234,"^19",55,"^K","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1@",[["^ ","^18",281,"^19",55,"^K","trace"]]],"~i139",["^ ","~i0",[["^ ","^18",0,"^19",57],["^ ","^18",59,"^19",57],["^ ","^18",0,"^19",58]],"~i6",[["^ ","^18",0,"^19",57,"^K","day8.re-frame-10x.metamorphic/subscription-re-run?"]],"^2=",[["^ ","^18",126,"^19",57,"^K","trace"]]],"~i140",["^ ","~i2",[["^ ","^18",0,"^19",58],["^ ","^18",52,"^19",58]],"~i3",[["^ ","^18",7,"^19",58,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^20",[["^ ","^18",109,"^19",58],["^ ","^18",109,"^19",58]],"^1E",[["^ ","^18",199,"^19",58,"^K","trace"]]],"~i142",["^ ","~i0",[["^ ","^18",0,"^19",60],["^ ","^18",62,"^19",60],["^ ","^18",0,"^19",61]],"~i6",[["^ ","^18",0,"^19",60,"^K","day8.re-frame-10x.metamorphic/subscription-destroyed?"]],"^1H",[["^ ","^18",132,"^19",60,"^K","trace"]]],"~i143",["^ ","~i2",[["^ ","^18",0,"^19",61],["^ ","^18",52,"^19",61]],"~i3",[["^ ","^18",7,"^19",61,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1R",[["^ ","^18",115,"^19",61],["^ ","^18",115,"^19",61]],"^2=",[["^ ","^18",205,"^19",61,"^K","trace"]]],"~i145",["^ ","~i0",[["^ ","^18",0,"^19",63],["^ ","^18",60,"^19",63],["^ ","^18",0,"^19",64],["^ ","^18",0,"^19",64]],"~i6",[["^ ","^18",0,"^19",63,"^K","day8.re-frame-10x.metamorphic/subscription-not-run?"]],"^1J",[["^ ","^18",128,"^19",63,"^K","trace"]]],"~i148",["^ ","~i0",[["^ ","^18",0,"^19",66],["^ ","^18",64,"^19",69],["^ ","^18",0,"^19",70]],"~i6",[["^ ","^18",0,"^19",69,"^K","day8.re-frame-10x.metamorphic/low-level-re-frame-trace?"]]],"~i150",["^ ","~i3",[["^ ","^18",136,"^19",69,"^K","trace"]]],"~i151",["^ ","~i2",[["^ ","^18",0,"^19",70],["^ ","^18",4,"^19",70,"^K","G__37034"],["^ ","^18",4,"^19",71,"^K","G__37034"],["^ ","^18",19,"^19",71],["^ ","^18",21,"^19",71],["^ ","^18",22,"^19",71,"^K","G__37034"],["^ ","^18",42,"^19",71,"^K","cljs.core/Keyword"],["^ ","^18",75,"^19",71],["^ ","^18",0,"^19",72],["^ ","^18",0,"^19",72],["^ ","^18",8,"^19",72,"^K","G__37034"],["^ ","^18",5,"^19",73],["^ ","^18",0,"^19",74],["^ ","^18",0,"^19",78]],"~i8",[["^ ","^18",15,"^19",70],["^ ","^18",15,"^19",70]],"^1R",[["^ ","^18",105,"^19",70,"^K","trace"]]],"~i155",["^ ","~i0",[["^ ","^18",0,"^19",82],["^ ","^18",63,"^19",85],["^ ","^18",0,"^19",86]],"~i6",[["^ ","^18",0,"^19",85,"^K","day8.re-frame-10x.metamorphic/low-level-reagent-trace?"]]],"~i157",["^ ","~i3",[["^ ","^18",134,"^19",85,"^K","trace"]]],"~i158",["^ ","~i2",[["^ ","^18",0,"^19",86],["^ ","^18",52,"^19",86]],"~i3",[["^ ","^18",7,"^19",86,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2E",[["^ ","^18",137,"^19",86],["^ ","^18",137,"^19",86]],"^2F",[["^ ","^18",227,"^19",86,"^K","trace"]]],"~i160",["^ ","~i0",[["^ ","^18",0,"^19",88],["^ ","^18",46,"^19",88],["^ ","^18",0,"^19",89]],"~i6",[["^ ","^18",0,"^19",88,"^K","day8.re-frame-10x.metamorphic/render?"]],"^1<",[["^ ","^18",100,"^19",88,"^K","trace"]]],"~i161",["^ ","~i2",[["^ ","^18",0,"^19",89],["^ ","^18",52,"^19",89]],"~i3",[["^ ","^18",7,"^19",89,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1:",[["^ ","^18",110,"^19",89],["^ ","^18",110,"^19",89]],"^1G",[["^ ","^18",200,"^19",89,"^K","trace"]]],"~i163",["^ ","~i0",[["^ ","^18",0,"^19",91],["^ ","^18",65,"^19",91],["^ ","^18",0,"^19",92]],"~i6",[["^ ","^18",0,"^19",91,"^K","day8.re-frame-10x.metamorphic/unchanged-l2-subscription?"]],"^1B",[["^ ","^18",138,"^19",91,"^K","sub"]]],"~i164",["^ ","~i2",[["^ ","^18",0,"^19",92],["^ ","^18",4,"^19",92,"^K","and__3911__auto__"],["^ ","^18",0,"^19",93],["^ ","^18",0,"^19",93],["^ ","^18",20,"^19",93,"^K","and__3911__auto__"],["^ ","^18",0,"^19",94],["^ ","^18",0,"^19",100,"^K","and__3911__auto__"]],"~i7",[["^ ","^18",24,"^19",92],["^ ","^18",75,"^19",92],["^ ","^18",158,"^19",92],["^ ","^18",220,"^19",92]],"~i8",[["^ ","^18",24,"^19",92,"^K","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1<",[["^ ","^18",71,"^19",92,"^K","sub"]]],"~i165",["^ ","~i7",[["^ ","^18",9,"^19",94],["^ ","^18",34,"^19",94],["^ ","^18",18,"^19",95,"^K","p1__37036#"],["^ ","^18",0,"^19",96]],"~i8",[["^ ","^18",9,"^19",94,"^K","cljs.core/not-any?"]],"^1R",[["^ ","^18",0,"^19",96],["^ ","^18",52,"^19",96],["^ ","^18",115,"^19",96,"^K","p1__37036#"]],"~i19",[["^ ","^18",7,"^19",96,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2F",[["^ ","^18",1,"^19",98],["^ ","^18",1,"^19",98]],"^1O",[["^ ","^18",87,"^19",98,"^K","sub"]]],"~i166",["^ ","~i7",[["^ ","^18",98,"^19",98],["^ ","^18",143,"^19",98]],"~i8",[["^ ","^18",98,"^19",98,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2H",[["^ ","^18",147,"^19",98],["^ ","^18",195,"^19",98]],"^1:",[["^ ","^18",147,"^19",98,"^K","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2:",[["^ ","^18",191,"^19",98,"^K","sub"]]],"~i169",["^ ","~i0",[["^ ","^18",0,"^19",103],["^ ","^18",50,"^19",106],["^ ","^18",0,"^19",107]],"~i6",[["^ ","^18",0,"^19",106,"^K","day8.re-frame-10x.metamorphic/finish-run?"]]],"~i171",["^ ","~i3",[["^ ","^18",108,"^19",106,"^K","event"]]],"~i172",["^ ","~i2",[["^ ","^18",0,"^19",107],["^ ","^18",4,"^19",107,"^K","and__3911__auto__"],["^ ","^18",0,"^19",108],["^ ","^18",0,"^19",108],["^ ","^18",20,"^19",108,"^K","and__3911__auto__"],["^ ","^18",0,"^19",111,"^K","and__3911__auto__"]],"~i7",[["^ ","^18",24,"^19",107]],"~i8",[["^ ","^18",24,"^19",107,"^K","day8.re-frame-10x.metamorphic/fsm-trigger?"]],"^1T",[["^ ","^18",73,"^19",107,"^K","event"]]],"~i173",["^ ","~i7",[["^ ","^18",0,"^19",109],["^ ","^18",153,"^19",109],["^ ","^18",236,"^19",109],["^ ","^18",295,"^19",109]],"~i8",[["^ ","^18",7,"^19",109,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1L",[["^ ","^18",52,"^19",109],["^ ","^18",52,"^19",109]],"^1M",[["^ ","^18",146,"^19",109,"^K","event"]]],"~i176",["^ ","~i0",[["^ ","^18",0,"^19",114],["^ ","^18",49,"^19",114],["^ ","^18",0,"^19",115]],"~i6",[["^ ","^18",0,"^19",114,"^K","day8.re-frame-10x.metamorphic/event-run?"]],"^1R",[["^ ","^18",106,"^19",114,"^K","event"]]],"~i177",["^ ","~i2",[["^ ","^18",0,"^19",115],["^ ","^18",52,"^19",115]],"~i3",[["^ ","^18",7,"^19",115,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2H",[["^ ","^18",106,"^19",115],["^ ","^18",106,"^19",115]],"^1M",[["^ ","^18",196,"^19",115,"^K","event"]]],"~i179",["^ ","~i0",[["^ ","^18",0,"^19",117],["^ ","^18",53,"^19",117],["^ ","^18",0,"^19",118]],"~i6",[["^ ","^18",0,"^19",117,"^K","day8.re-frame-10x.metamorphic/event-handler?"]],"^1M",[["^ ","^18",114,"^19",117,"^K","trace"]]],"~i180",["^ ","~i2",[["^ ","^18",0,"^19",118],["^ ","^18",52,"^19",118]],"~i3",[["^ ","^18",7,"^19",118,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1@",[["^ ","^18",120,"^19",118],["^ ","^18",120,"^19",118]],"~i30",[["^ ","^18",210,"^19",118,"^K","trace"]]],"~i182",["^ ","~i0",[["^ ","^18",0,"^19",120],["^ ","^18",50,"^19",120],["^ ","^18",0,"^19",121]],"~i6",[["^ ","^18",0,"^19",120,"^K","day8.re-frame-10x.metamorphic/event-dofx?"]],"^30",[["^ ","^18",108,"^19",120,"^K","trace"]]],"~i183",["^ ","~i2",[["^ ","^18",0,"^19",121],["^ ","^18",52,"^19",121]],"~i3",[["^ ","^18",7,"^19",121,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1R",[["^ ","^18",116,"^19",121],["^ ","^18",116,"^19",121]],"^2=",[["^ ","^18",206,"^19",121,"^K","trace"]]],"~i185",["^ ","~i0",[["^ ","^18",0,"^19",123],["^ ","^18",54,"^19",128],["^ ","^18",0,"^19",129]],"~i6",[["^ ","^18",0,"^19",128,"^K","day8.re-frame-10x.metamorphic/start-of-epoch?"]]],"~i189",["^ ","~i3",[["^ ","^18",116,"^19",128,"^K","event"]]],"~i190",["^ ","~i2",[["^ ","^18",0,"^19",129],["^ ","^18",4,"^19",129,"^K","or__3922__auto__"],["^ ","^18",0,"^19",130],["^ ","^18",0,"^19",130],["^ ","^18",20,"^19",130,"^K","or__3922__auto__"],["^ ","^18",0,"^19",131,"^K","or__3922__auto__"]],"~i6",[["^ ","^18",23,"^19",129]],"~i7",[["^ ","^18",23,"^19",129,"^K","day8.re-frame-10x.metamorphic/run-queue?"]],"^1R",[["^ ","^18",70,"^19",129,"^K","event"]]],"~i191",["^ ","~i6",[["^ ","^18",0,"^19",133]],"~i7",[["^ ","^18",7,"^19",133,"^K","day8.re-frame-10x.metamorphic/event-run?"]],"^1R",[["^ ","^18",54,"^19",133,"^K","event"]]],"~i193",["^ ","~i0",[["^ ","^18",0,"^19",136],["^ ","^18",67,"^19",142],["^ ","^18",0,"^19",143]],"~i6",[["^ ","^18",0,"^19",142,"^K","day8.re-frame-10x.metamorphic/start-of-epoch-and-prev-end?"]]],"~i198",["^ ","~i3",[["^ ","^18",142,"^19",142,"^K","event"]],"~i9",[["^ ","^18",148,"^19",142,"^K","state"]]],"~i199",["^ ","~i2",[["^ ","^18",0,"^19",143],["^ ","^18",4,"^19",143,"^K","or__3922__auto__"],["^ ","^18",0,"^19",144],["^ ","^18",0,"^19",144],["^ ","^18",20,"^19",144,"^K","or__3922__auto__"],["^ ","^18",0,"^19",145,"^K","or__3922__auto__"]],"~i6",[["^ ","^18",23,"^19",143]],"~i7",[["^ ","^18",23,"^19",143,"^K","day8.re-frame-10x.metamorphic/run-queue?"]],"^1R",[["^ ","^18",70,"^19",143,"^K","event"]]],"~i202",["^ ","~i6",[["^ ","^18",0,"^19",147],["^ ","^18",4,"^19",147,"^K","and__3911__auto__"],["^ ","^18",0,"^19",148],["^ ","^18",0,"^19",148],["^ ","^18",20,"^19",148,"^K","and__3911__auto__"],["^ ","^18",0,"^19",151,"^K","and__3911__auto__"]],"^1;",[["^ ","^18",24,"^19",147]],"^2H",[["^ ","^18",24,"^19",147,"^K","day8.re-frame-10x.metamorphic/event-run?"]],"^1G",[["^ ","^18",71,"^19",147,"^K","event"]]],"~i203",["^ ","^1;",[["^ ","^18",0,"^19",149]],"^2H",[["^ ","^18",7,"^19",149,"^K","cljs.core/not"]],"^2D",[["^ ","^18",21,"^19",149]],"^2:",[["^ ","^18",21,"^19",149,"^K","day8.re-frame-10x.metamorphic/run-queue?"]],"^2=",[["^ ","^18",68,"^19",149],["^ ","^18",68,"^19",149]],"^1O",[["^ ","^18",171,"^19",149,"^K","state"]]],"~i205",["^ ","~i0",[["^ ","^18",0,"^19",155],["^ ","^18",49,"^19",155],["^ ","^18",0,"^19",156]],"~i6",[["^ ","^18",0,"^19",155,"^K","day8.re-frame-10x.metamorphic/quiescent?"]],"^1R",[["^ ","^18",106,"^19",155,"^K","event"]]],"~i206",["^ ","~i2",[["^ ","^18",0,"^19",156],["^ ","^18",52,"^19",156]],"~i3",[["^ ","^18",7,"^19",156,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1E",[["^ ","^18",127,"^19",156],["^ ","^18",127,"^19",156]],"^1B",[["^ ","^18",217,"^19",156,"^K","event"]]],"~i208",["^ ","~i0",[["^ ","^18",0,"^19",158],["^ ","^18",52,"^19",158],["^ ","^18",95,"^19",158],["^ ","^18",166,"^19",158],["^ ","^18",171,"^19",158],["^ ","^18",244,"^19",158],["^ ","^18",249,"^19",158],["^ ","^18",313,"^19",158]],"~i5",[["^ ","^18",0,"^19",158,"^K","day8.re-frame-10x.metamorphic/initial-parse-state"]]],"~i213",["^ ","~i0",[["^ ","^18",0,"^19",159],["^ ","^18",50,"^19",159],["^ ","^18",93,"^19",159],["^ ","^18",168,"^19",159],["^ ","^18",172,"^19",159],["^ ","^18",246,"^19",159],["^ ","^18",281,"^19",159],["^ ","^18",353,"^19",159]],"~i5",[["^ ","^18",0,"^19",159,"^K","day8.re-frame-10x.metamorphic/initial-sub-state"]]],"~i218",["^ ","~i0",[["^ ","^18",0,"^19",160],["^ ","^18",45,"^19",160],["^ ","^18",0,"^19",161]],"~i6",[["^ ","^18",0,"^19",160,"^K","day8.re-frame-10x.metamorphic/parse-traces"]],"^1@",[["^ ","^18",98,"^19",160,"^K","parse-state"]],"^1W",[["^ ","^18",110,"^19",160,"^K","traces"]]],"~i219",["^ ","~i2",[["^ ","^18",0,"^19",161]],"~i3",[["^ ","^18",7,"^19",161,"^K","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]]],"~i220",["^ ","~i4",[["^ ","^18",54,"^19",161],["^ ","^18",0,"^19",162]],"~i9",[["^ ","^18",65,"^19",161,"^K","state"]],"^1<",[["^ ","^18",71,"^19",161,"^K","event"]]],"~i221",["^ ","~i6",[["^ ","^18",0,"^19",162],["^ ","^18",0,"^19",165]],"^2H",[["^ ","^18",4,"^19",162,"^K","current-match"]],"^2E",[["^ ","^18",20,"^19",162],["^ ","^18",20,"^19",162]],"~i43",[["^ ","^18",121,"^19",162,"^K","state"]]],"~i222",["^ ","^2H",[["^ ","^18",4,"^19",163,"^K","previous-event"]],"^2E",[["^ ","^18",21,"^19",163],["^ ","^18",21,"^19",163]],"^1C",[["^ ","^18",124,"^19",163,"^K","state"]]],"~i223",["^ ","^2H",[["^ ","^18",4,"^19",164,"^K","no-match?"]],"^2E",[["^ ","^18",22,"^19",164],["^ ","^18",40,"^19",164]],"^1>",[["^ ","^18",23,"^19",164,"^K","current-match"]]],"~i224",["^ ","^2H",[["^ ","^18",53,"^19",165],["^ ","^18",378,"^19",165],["^ ","^18",773,"^19",165],["^ ","^18",1293,"^19",165],["^ ","^18",1512,"^19",165]]],"~i227",["^ ","^20",[["^ ","^18",55,"^19",165,"^K","no-match?"]]],"~i228",["^ ","^20",[["^ ","^18",72,"^19",165]],"^1R",[["^ ","^18",90,"^19",165]],"^30",[["^ ","^18",90,"^19",165,"^K","day8.re-frame-10x.metamorphic/start-of-epoch?"]],"~i35",[["^ ","^18",142,"^19",165,"^K","event"]]],"~i229",["^ ","^2D",[["^ ","^18",150,"^19",165],["^ ","^18",202,"^19",165],["^ ","^18",273,"^19",165]],"^2:",[["^ ","^18",150,"^19",165,"^K","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^1G",[["^ ","^18",196,"^19",165,"^K","state"]],"^1O",[["^ ","^18",356,"^19",165,"^K","event"]]],"~i230",["^ ","^2D",[["^ ","^18",371,"^19",165,"^K","state"]]],"~i233",["^ ","^20",[["^ ","^18",396,"^19",165]],"^1<",[["^ ","^18",396,"^19",165,"^K","day8.re-frame-10x.metamorphic/quiescent?"]],"~i26",[["^ ","^18",443,"^19",165,"^K","event"]]],"~i234",["^ ","^1R",[["^ ","^18",544,"^19",165,"^K","state"]]],"~i235",["^ ","^1R",[["^ ","^18",497,"^19",165],["^ ","^18",550,"^19",165]],"^30",[["^ ","^18",497,"^19",165,"^K","cljs.core.update.cljs$core$IFn$_invoke$arity$4"]],"^1N",[["^ ","^18",614,"^19",165,"^K","cljs.core/conj"]],"^3N",[["^ ","^18",629,"^19",165]],"^1C",[["^ ","^18",629,"^19",165,"^K","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^2@",[["^ ","^18",674,"^19",165,"^K","current-match"]],"~i63",[["^ ","^18",688,"^19",165,"^K","event"]]],"~i236",["^ ","^1R",[["^ ","^18",451,"^19",165],["^ ","^18",696,"^19",165],["^ ","^18",767,"^19",165]],"^30",[["^ ","^18",451,"^19",165,"^K","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]]],"~i241",["^ ","^20",[["^ ","^18",791,"^19",165]],"^1<",[["^ ","^18",791,"^19",165,"^K","day8.re-frame-10x.metamorphic/start-of-epoch-and-prev-end?"]],"^1C",[["^ ","^18",856,"^19",165,"^K","event"]],"~i50",[["^ ","^18",862,"^19",165,"^K","state"]]],"~i242",["^ ","^1R",[["^ ","^18",963,"^19",165,"^K","state"]]],"~i243",["^ ","^1R",[["^ ","^18",916,"^19",165],["^ ","^18",969,"^19",165]],"^30",[["^ ","^18",916,"^19",165,"^K","cljs.core.update.cljs$core$IFn$_invoke$arity$4"]],"^1N",[["^ ","^18",1033,"^19",165,"^K","cljs.core/conj"]],"^3N",[["^ ","^18",1048,"^19",165]],"^1C",[["^ ","^18",1048,"^19",165,"^K","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^2@",[["^ ","^18",1093,"^19",165,"^K","current-match"]],"^3[",[["^ ","^18",1107,"^19",165,"^K","previous-event"]]],"~i244",["^ ","^1R",[["^ ","^18",870,"^19",165],["^ ","^18",1124,"^19",165],["^ ","^18",1195,"^19",165]],"^30",[["^ ","^18",870,"^19",165,"^K","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^1?",[["^ ","^18",1278,"^19",165,"^K","event"]]],"~i246",["^ ","^20",[["^ ","^18",1311,"^19",165]],"^1<",[["^ ","^18",1311,"^19",165,"^K","day8.re-frame-10x.metamorphic/event-run?"]],"^3X",[["^ ","^18",1358,"^19",165,"^K","event"]]],"~i247",["^ ","^20",[["^ ","^18",1366,"^19",165],["^ ","^18",1419,"^19",165]],"^1<",[["^ ","^18",1366,"^19",165,"^K","cljs.core.update.cljs$core$IFn$_invoke$arity$4"]],"^1M",[["^ ","^18",1413,"^19",165,"^K","state"]],"^3N",[["^ ","^18",1490,"^19",165,"^K","cljs.core/conj"]],"~i48",[["^ ","^18",1505,"^19",165,"^K","event"]]],"~i251",["^ ","^20",[["^ ","^18",1512,"^19",165,"^K","state"]]],"~i255",["^ ","^2H",[["^ ","^18",0,"^19",165],["^ ","^18",5,"^19",166]],"^1:",[["^ ","^18",7,"^19",165,"^K","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3T",[["^ ","^18",78,"^19",166,"^K","event"]]],"~i256",["^ ","~i4",[["^ ","^18",3,"^19",167,"^K","parse-state"]]],"~i257",["^ ","~i4",[["^ ","^18",15,"^19",167,"^K","traces"]]],"~i259",["^ ","~i0",[["^ ","^18",0,"^19",169],["^ ","^18",46,"^19",169],["^ ","^18",0,"^19",170]],"~i6",[["^ ","^18",0,"^19",169,"^K","day8.re-frame-10x.metamorphic/matched-event"]],"^1T",[["^ ","^18",100,"^19",169,"^K","match"]]],"~i260",["^ ","~i7",[["^ ","^18",117,"^19",170,"^K","match"]]],"~i261",["^ ","~i7",[["^ ","^18",23,"^19",170]],"~i8",[["^ ","^18",23,"^19",170,"^K","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^1<",[["^ ","^18",70,"^19",170,"^K","day8.re-frame-10x.metamorphic/event-run?"]]],"~i262",["^ ","~i7",[["^ ","^18",0,"^19",170]],"~i8",[["^ ","^18",7,"^19",170,"^K","cljs.core/first"]]],"~i264",["^ ","~i0",[["^ ","^18",0,"^19",172],["^ ","^18",45,"^19",172],["^ ","^18",0,"^19",173]],"~i6",[["^ ","^18",0,"^19",172,"^K","day8.re-frame-10x.metamorphic/app-db-after"]],"^1@",[["^ ","^18",98,"^19",172,"^K","event-trace"]]],"~i265",["^ ","~i2",[["^ ","^18",0,"^19",173],["^ ","^18",66,"^19",173],["^ ","^18",149,"^19",173],["^ ","^18",202,"^19",173]],"~i3",[["^ ","^18",7,"^19",173,"^K","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1L",[["^ ","^18",54,"^19",173,"^K","event-trace"]]],"~i267",["^ ","~i0",[["^ ","^18",0,"^19",175],["^ ","^18",46,"^19",175],["^ ","^18",0,"^19",176]],"~i6",[["^ ","^18",0,"^19",175,"^K","day8.re-frame-10x.metamorphic/app-db-before"]],"^1T",[["^ ","^18",100,"^19",175,"^K","event-trace"]]],"~i268",["^ ","~i2",[["^ ","^18",0,"^19",176],["^ ","^18",66,"^19",176],["^ ","^18",149,"^19",176],["^ ","^18",202,"^19",176]],"~i3",[["^ ","^18",7,"^19",176,"^K","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1L",[["^ ","^18",54,"^19",176,"^K","event-trace"]]],"~i270",["^ ","~i0",[["^ ","^18",0,"^19",178],["^ ","^18",50,"^19",182],["^ ","^18",0,"^19",183]],"~i6",[["^ ","^18",0,"^19",182,"^K","day8.re-frame-10x.metamorphic/subscription-info"]]],"~i273",["^ ","~i3",[["^ ","^18",108,"^19",182,"^K","initial-state"]],"^2:",[["^ ","^18",122,"^19",182,"^K","filtered-traces"]],"^1>",[["^ ","^18",138,"^19",182,"^K","app-db-id"]]],"~i274",["^ ","~i7",[["^ ","^18",121,"^19",187,"^K","filtered-traces"]]],"~i275",["^ ","~i7",[["^ ","^18",17,"^19",187]],"~i8",[["^ ","^18",17,"^19",187,"^K","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^1<",[["^ ","^18",64,"^19",187,"^K","day8.re-frame-10x.metamorphic/subscription-re-run?"]]],"~i276",["^ ","~i7",[["^ ","^18",0,"^19",183]],"~i8",[["^ ","^18",7,"^19",183,"^K","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^1<",[["^ ","^18",54,"^19",183],["^ ","^18",0,"^19",184]],"^1@",[["^ ","^18",65,"^19",183,"^K","state"]],"^3X",[["^ ","^18",71,"^19",183,"^K","trace"]]],"~i284",["^ ","^2:",[["^ ","^18",0,"^19",184],["^ ","^18",32,"^19",184],["^ ","^18",216,"^19",184]],"^1R",[["^ ","^18",7,"^19",184,"^K","cljs.core/assoc-in"]],"^2E",[["^ ","^18",26,"^19",184,"^K","state"]]],"~i285",["^ ","^2=",[["^ ","^18",115,"^19",184],["^ ","^18",115,"^19",184]],"~i40",[["^ ","^18",209,"^19",184,"^K","trace"]]],"~i287",["^ ","^2E",[["^ ","^18",280,"^19",184],["^ ","^18",273,"^19",186],["^ ","^18",277,"^19",186]],"^1H",[["^ ","^18",298,"^19",184],["^ ","^18",313,"^19",184],["^ ","^18",324,"^19",184,"^K","p1__37119#"],["^ ","^18",0,"^19",185]],"^1W",[["^ ","^18",298,"^19",184,"^K","cljs.core/some"]],"^1N",[["^ ","^18",0,"^19",185],["^ ","^18",62,"^19",185,"^K","p1__37119#"]],"^2?",[["^ ","^18",7,"^19",185,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1?",[["^ ","^18",52,"^19",185,"^K","app-db-id"]],"~i54",[["^ ","^18",3,"^19",186],["^ ","^18",56,"^19",186],["^ ","^18",139,"^19",186],["^ ","^18",192,"^19",186]],"~i55",[["^ ","^18",3,"^19",186,"^K","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"~i62",[["^ ","^18",50,"^19",186,"^K","trace"]]],"~i290",["^ ","^1<",[["^ ","^18",3,"^19",187,"^K","initial-state"]]],"~i292",["^ ","~i0",[["^ ","^18",0,"^19",189],["^ ","^18",48,"^19",193],["^ ","^18",0,"^19",194]],"~i6",[["^ ","^18",0,"^19",193,"^K","day8.re-frame-10x.metamorphic/reset-sub-state"]]],"~i295",["^ ","~i3",[["^ ","^18",104,"^19",193,"^K","state"]]],"~i296",["^ ","~i2",[["^ ","^18",0,"^19",194],["^ ","^18",52,"^19",194]],"~i3",[["^ ","^18",7,"^19",194,"^K","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]]],"~i297",["^ ","~i8",[["^ ","^18",87,"^19",194]],"~i9",[["^ ","^18",87,"^19",194,"^K","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]]],"~i299",["^ ","^1L",[["^ ","^18",132,"^19",194]],"^1;",[["^ ","^18",132,"^19",194,"^K","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"^1R",[["^ ","^18",179,"^19",194],["^ ","^18",0,"^19",195]],"^1G",[["^ ","^18",190,"^19",194,"^K","me"]],"^2E",[["^ ","^18",0,"^19",195],["^ ","^18",0,"^19",196],["^ ","^18",0,"^19",198]],"^2F",[["^ ","^18",20,"^19",195],["^ ","^18",20,"^19",195]],"^2@",[["^ ","^18",113,"^19",195]],"^42",[["^ ","^18",113,"^19",195,"^K","cljs.core/val"]],"^4N",[["^ ","^18",127,"^19",195,"^K","me"]],"~i59",[["^ ","^18",0,"^19",198,"^K","me"]]],"~i301",["^ ","^1L",[["^ ","^18",4,"^19",200]],"^1;",[["^ ","^18",4,"^19",200,"^K","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^1<",[["^ ","^18",48,"^19",200],["^ ","^18",59,"^19",200,"^K","p__37133"],["^ ","^18",0,"^19",201],["^ ","^18",0,"^19",201],["^ ","^18",4,"^19",201,"^K","vec__37134"],["^ ","^18",17,"^19",201,"^K","p__37133"],["^ ","^18",8,"^19",202],["^ ","^18",8,"^19",202,"^K","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^18",52,"^19",202,"^K","vec__37134"],["^ ","^18",63,"^19",202],["^ ","^18",67,"^19",202],["^ ","^18",8,"^19",203],["^ ","^18",8,"^19",203,"^K","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^18",52,"^19",203,"^K","vec__37134"],["^ ","^18",63,"^19",203],["^ ","^18",67,"^19",203],["^ ","^18",0,"^19",204],["^ ","^18",0,"^19",204]],"^1T",[["^ ","^18",4,"^19",202,"^K","k"]],"^1G",[["^ ","^18",4,"^19",203,"^K","v"]]],"~i302",["^ ","^1R",[["^ ","^18",90,"^19",204,"^K","k"]],"^1@",[["^ ","^18",92,"^19",204],["^ ","^18",148,"^19",204],["^ ","^18",254,"^19",204],["^ ","^18",314,"^19",204],["^ ","^18",366,"^19",204],["^ ","^18",429,"^19",204],["^ ","^18",503,"^19",204]],"^1T",[["^ ","^18",92,"^19",204,"^K","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic"]],"^2=",[["^ ","^18",146,"^19",204,"^K","v"]]],"~i303",["^ ","~i8",[["^ ","^18",5,"^19",205,"^K","state"]]],"~i307",["^ ","~i0",[["^ ","^18",0,"^19",207],["^ ","^18",51,"^19",207],["^ ","^18",0,"^19",208]],"~i6",[["^ ","^18",0,"^19",207,"^K","day8.re-frame-10x.metamorphic/process-sub-traces"]]],"~i308",["^ ","~i3",[["^ ","^18",110,"^19",207,"^K","initial-state"]],"^2:",[["^ ","^18",124,"^19",207,"^K","traces"]]],"~i309",["^ ","~i2",[["^ ","^18",0,"^19",208],["^ ","^18",0,"^19",255]],"~i8",[["^ ","^18",4,"^19",208,"^K","first-pass"]],"^1@",[["^ ","^18",17,"^19",208]],"^1T",[["^ ","^18",17,"^19",208,"^K","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^2=",[["^ ","^18",64,"^19",208],["^ ","^18",0,"^19",209]],"^1>",[["^ ","^18",75,"^19",208,"^K","init-state"]],"^1C",[["^ ","^18",86,"^19",208,"^K","trace"]]],"~i310",["^ ","^3:",[["^ ","^18",0,"^19",209],["^ ","^18",0,"^19",236]],"^1Z",[["^ ","^18",4,"^19",209,"^K","tags"]],"^48",[["^ ","^18",11,"^19",209],["^ ","^18",61,"^19",209]],"^2@",[["^ ","^18",11,"^19",209,"^K","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"~i53",[["^ ","^18",55,"^19",209,"^K","trace"]]],"~i311",["^ ","^1Z",[["^ ","^18",4,"^19",210,"^K","reaction-id"]],"^48",[["^ ","^18",18,"^19",210],["^ ","^18",18,"^19",210]],"^4W",[["^ ","^18",108,"^19",210,"^K","tags"]]],"~i312",["^ ","^1Z",[["^ ","^18",4,"^19",211,"^K","state"]],"~i52",[["^ ","^18",81,"^19",211,"^K","init-state"]]],"~i313",["^ ","^56",[["^ ","^18",31,"^19",211],["^ ","^18",92,"^19",211],["^ ","^18",187,"^19",211]],"^53",[["^ ","^18",31,"^19",211,"^K","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4"]],"~i64",[["^ ","^18",175,"^19",211,"^K","reaction-id"]],"~i84",[["^ ","^18",251,"^19",211],["^ ","^18",311,"^19",211]],"^1Y",[["^ ","^18",251,"^19",211,"^K","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2"]],"^23",[["^ ","^18",296,"^19",211,"^K","cljs.core/conj"]],"~i99",[["^ ","^18",345,"^19",211],["^ ","^18",345,"^19",211]],"~i109",[["^ ","^18",435,"^19",211,"^K","trace"]]],"~i317",["^ ","^56",[["^ ","^18",12,"^19",211],["^ ","^18",443,"^19",211],["^ ","^18",538,"^19",211]],"^53",[["^ ","^18",12,"^19",211,"^K","cljs.core/assoc-in"]],"^3[",[["^ ","^18",526,"^19",211,"^K","reaction-id"]],"^23",[["^ ","^18",615,"^19",211],["^ ","^18",615,"^19",211]],"^29",[["^ ","^18",705,"^19",211,"^K","tags"]]],"~i318",["^ ","^1Z",[["^ ","^18",4,"^19",212,"^K","new-state"]]],"~i319",["^ ","^48",[["^ ","^18",16,"^19",212],["^ ","^18",33,"^19",212,"^K","G__37137"],["^ ","^18",4,"^19",213,"^K","G__37137"],["^ ","^18",19,"^19",213],["^ ","^18",21,"^19",213],["^ ","^18",22,"^19",213,"^K","G__37137"],["^ ","^18",42,"^19",213,"^K","cljs.core/Keyword"],["^ ","^18",75,"^19",213],["^ ","^18",0,"^19",214],["^ ","^18",0,"^19",214],["^ ","^18",8,"^19",214,"^K","G__37137"],["^ ","^18",5,"^19",215],["^ ","^18",5,"^19",219],["^ ","^18",5,"^19",227],["^ ","^18",0,"^19",232],["^ ","^18",6,"^19",232],["^ ","^18",11,"^19",232,"^K","js/Error"],["^ ","^18",17,"^19",232],["^ ","^18",18,"^19",232],["^ ","^18",85,"^19",232,"^K","G__37137"]],"^4N",[["^ ","^18",44,"^19",212],["^ ","^18",44,"^19",212]],"^58",[["^ ","^18",134,"^19",212,"^K","trace"]]],"~i320",["^ ","~i66",[["^ ","^18",45,"^19",216,"^K","state"]]],"~i321",["^ ","^5@",[["^ ","^18",26,"^19",216],["^ ","^18",51,"^19",216],["^ ","^18",146,"^19",216],["^ ","^18",214,"^19",216]],"~i67",[["^ ","^18",26,"^19",216,"^K","cljs.core/assoc-in"]],"^1Q",[["^ ","^18",134,"^19",216,"^K","reaction-id"]]],"~i322",["^ ","^5@",[["^ ","^18",0,"^19",216],["^ ","^18",220,"^19",216],["^ ","^18",315,"^19",216]],"^5B",[["^ ","^18",7,"^19",216,"^K","cljs.core/assoc-in"]],"^1Q",[["^ ","^18",303,"^19",216,"^K","reaction-id"]],"~i104",[["^ ","^18",392,"^19",216],["^ ","^18",392,"^19",216]],"~i114",[["^ ","^18",482,"^19",216,"^K","tags"]]],"~i323",["^ ","^4W",[["^ ","^18",0,"^19",220]],"~i60",[["^ ","^18",7,"^19",220,"^K","cljs.core.update.cljs$core$IFn$_invoke$arity$3"]],"^5B",[["^ ","^18",54,"^19",220,"^K","state"]],"^1I",[["^ ","^18",60,"^19",220,"^K","reaction-id"]],"^1Y",[["^ ","^18",72,"^19",220],["^ ","^18",0,"^19",222]],"^23",[["^ ","^18",18,"^19",221,"^K","sub-state"]]],"~i328",["^ ","^24",[["^ ","^18",60,"^19",222]],"^26",[["^ ","^18",62,"^19",222],["^ ","^18",98,"^19",222]],"~i96",[["^ ","^18",62,"^19",222,"^K","cljs.core/contains?"]],"~i106",[["^ ","^18",88,"^19",222,"^K","sub-state"]]],"~i329",["^ ","~i93",[["^ ","^18",154,"^19",222],["^ ","^18",210,"^19",222]],"^25",[["^ ","^18",154,"^19",222,"^K","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^29",[["^ ","^18",200,"^19",222,"^K","sub-state"]],"^2>",[["^ ","^18",284,"^19",222],["^ ","^18",284,"^19",222]],"~i134",[["^ ","^18",368,"^19",222,"^K","sub-state"]]],"~i330",["^ ","^5L",[["^ ","^18",380,"^19",222,"^K","sub-state"]]],"~i331",["^ ","^24",[["^ ","^18",0,"^19",222],["^ ","^18",391,"^19",222],["^ ","^18",443,"^19",222],["^ ","^18",498,"^19",222]],"~i92",[["^ ","^18",7,"^19",222,"^K","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic"]]],"~i332",["^ ","~i105",[["^ ","^18",552,"^19",222],["^ ","^18",552,"^19",222]],"~i113",[["^ ","^18",636,"^19",222,"^K","tags"]]],"~i333",["^ ","^3[",[["^ ","^18",0,"^19",228],["^ ","^18",32,"^19",228],["^ ","^18",127,"^19",228],["^ ","^18",198,"^19",228]],"^58",[["^ ","^18",7,"^19",228,"^K","cljs.core/assoc-in"]],"^1I",[["^ ","^18",26,"^19",228,"^K","state"]],"~i80",[["^ ","^18",115,"^19",228,"^K","reaction-id"]]],"~i334",["^ ","^1W",[["^ ","^18",0,"^19",236],["^ ","^18",0,"^19",237],["^ ","^18",0,"^19",238]],"^1A",[["^ ","^18",3,"^19",236],["^ ","^18",96,"^19",236]],"^3N",[["^ ","^18",3,"^19",236,"^K","cljs.core/contains?"]],"^53",[["^ ","^18",29,"^19",236]],"^4N",[["^ ","^18",29,"^19",236,"^K","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"~i58",[["^ ","^18",73,"^19",236,"^K","new-state"]],"~i68",[["^ ","^18",83,"^19",236,"^K","reaction-id"]]],"~i335",["^ ","^3N",[["^ ","^18",0,"^19",238]],"^1C",[["^ ","^18",0,"^19",238,"^K","js/console.warn"]],"^5G",[["^ ","^18",13,"^19",238,"^K","trace"]],"^5@",[["^ ","^18",19,"^19",238]],"^5B",[["^ ","^18",19,"^19",238,"^K","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^1D",[["^ ","^18",63,"^19",238,"^K","new-state"]],"~i81",[["^ ","^18",73,"^19",238,"^K","reaction-id"]]],"~i338",["^ ","^1W",[["^ ","^18",0,"^19",241,"^K","new-state"]]],"~i339",["^ ","^2=",[["^ ","^18",3,"^19",242,"^K","initial-state"]]],"~i340",["^ ","^2=",[["^ ","^18",17,"^19",242,"^K","traces"]]],"~i341",["^ ","~i8",[["^ ","^18",4,"^19",243,"^K","second-pass"]],"^1@",[["^ ","^18",18,"^19",243]],"^1T",[["^ ","^18",18,"^19",243,"^K","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^2=",[["^ ","^18",65,"^19",243],["^ ","^18",28,"^19",244,"^K","p__37138"],["^ ","^18",0,"^19",245],["^ ","^18",0,"^19",245],["^ ","^18",4,"^19",245,"^K","vec__37139"],["^ ","^18",17,"^19",245,"^K","p__37138"],["^ ","^18",13,"^19",246],["^ ","^18",13,"^19",246,"^K","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^18",57,"^19",246,"^K","vec__37139"],["^ ","^18",68,"^19",246],["^ ","^18",72,"^19",246],["^ ","^18",16,"^19",247],["^ ","^18",16,"^19",247,"^K","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^18",60,"^19",247,"^K","vec__37139"],["^ ","^18",71,"^19",247],["^ ","^18",75,"^19",247],["^ ","^18",0,"^19",248]],"^1>",[["^ ","^18",18,"^19",244,"^K","all-state"]],"^1C",[["^ ","^18",4,"^19",246,"^K","sub-id"]],"~i51",[["^ ","^18",4,"^19",247,"^K","sub-state"]]],"~i343",["^ ","^3:",[["^ ","^18",0,"^19",248]],"^1B",[["^ ","^18",3,"^19",248]],"^2?",[["^ ","^18",5,"^19",248],["^ ","^18",41,"^19",248]],"^4L",[["^ ","^18",5,"^19",248,"^K","cljs.core/contains?"]],"^42",[["^ ","^18",31,"^19",248,"^K","sub-state"]]],"~i344",["^ ","^2?",[["^ ","^18",121,"^19",248],["^ ","^18",157,"^19",248]],"^4L",[["^ ","^18",121,"^19",248,"^K","cljs.core/contains?"]],"^42",[["^ ","^18",147,"^19",248,"^K","sub-state"]]],"~i345",["^ ","^2?",[["^ ","^18",217,"^19",248]],"^4L",[["^ ","^18",217,"^19",248,"^K","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1A",[["^ ","^18",262,"^19",248],["^ ","^18",262,"^19",248]],"^4W",[["^ ","^18",366,"^19",248,"^K","sub-state"]],"~i70",[["^ ","^18",377,"^19",248],["^ ","^18",377,"^19",248]],"^1S",[["^ ","^18",461,"^19",248,"^K","sub-state"]]],"~i346",["^ ","^1W",[["^ ","^18",0,"^19",249],["^ ","^18",36,"^19",249],["^ ","^18",126,"^19",249],["^ ","^18",188,"^19",249],["^ ","^18",261,"^19",249]],"^1>",[["^ ","^18",7,"^19",249,"^K","cljs.core/assoc-in"]],"^1A",[["^ ","^18",26,"^19",249,"^K","all-state"]],"^53",[["^ ","^18",119,"^19",249,"^K","sub-id"]]],"~i347",["^ ","^1W",[["^ ","^18",0,"^19",251,"^K","all-state"]]],"~i348",["^ ","^2=",[["^ ","^18",1,"^19",254,"^K","first-pass"]]],"~i349",["^ ","^2=",[["^ ","^18",12,"^19",254,"^K","first-pass"]]],"~i350",["^ ","~i4",[["^ ","^18",0,"^19",255,"^K","second-pass"]]],"~i352",["^ ","~i0",[["^ ","^18",0,"^19",257],["^ ","^18",57,"^19",261],["^ ","^18",0,"^19",262]],"~i6",[["^ ","^18",0,"^19",261,"^K","day8.re-frame-10x.metamorphic/subscription-match-state"]]],"~i355",["^ ","~i3",[["^ ","^18",122,"^19",261,"^K","sub-state"]],"^1:",[["^ ","^18",132,"^19",261,"^K","filtered-traces"]],"^1J",[["^ ","^18",148,"^19",261,"^K","new-matches"]]],"~i372",["^ ","~i2",[["^ ","^18",0,"^19",262]],"~i3",[["^ ","^18",7,"^19",262,"^K","cljs.core.reductions.cljs$core$IFn$_invoke$arity$3"]],"^20",[["^ ","^18",58,"^19",262],["^ ","^18",0,"^19",263]],"^30",[["^ ","^18",69,"^19",262,"^K","state"]],"^1=",[["^ ","^18",75,"^19",262,"^K","match"]]],"~i373",["^ ","^2D",[["^ ","^18",0,"^19",263],["^ ","^18",0,"^19",271],["^ ","^18",0,"^19",271],["^ ","^18",50,"^19",271],["^ ","^18",140,"^19",271],["^ ","^18",224,"^19",271],["^ ","^18",317,"^19",271],["^ ","^18",406,"^19",271]],"^1M",[["^ ","^18",4,"^19",263,"^K","previous-id"]],"^2?",[["^ ","^18",18,"^19",263],["^ ","^18",18,"^19",263]],"~i57",[["^ ","^18",123,"^19",263,"^K","state"]]],"~i374",["^ ","^1M",[["^ ","^18",4,"^19",264,"^K","first-match-id"]],"^2?",[["^ ","^18",21,"^19",264],["^ ","^18",21,"^19",264]],"^1C",[["^ ","^18",101,"^19",264]],"^1O",[["^ ","^18",101,"^19",264,"^K","cljs.core/first"]],"^63",[["^ ","^18",117,"^19",264,"^K","match"]]],"~i375",["^ ","^1M",[["^ ","^18",4,"^19",265,"^K","last-match-id"]],"^2?",[["^ ","^18",20,"^19",265],["^ ","^18",20,"^19",265]],"^1C",[["^ ","^18",100,"^19",265]],"^1O",[["^ ","^18",100,"^19",265,"^K","cljs.core/last"]],"^42",[["^ ","^18",115,"^19",265,"^K","match"]]],"~i376",["^ ","^1M",[["^ ","^18",4,"^19",266,"^K","pre-epoch-traces"]],"^2?",[["^ ","^18",23,"^19",266],["^ ","^18",68,"^19",266]],"^4L",[["^ ","^18",23,"^19",266,"^K","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]]],"~i377",["^ ","^1O",[["^ ","^18",101,"^19",266]],"~i46",[["^ ","^18",101,"^19",266,"^K","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]]],"~i378",["^ ","~i47",[["^ ","^18",146,"^19",266]],"^48",[["^ ","^18",146,"^19",266,"^K","day8.re-frame-10x.metamorphic/id-between-xf"]],"^4P",[["^ ","^18",190,"^19",266],["^ ","^18",205,"^19",266]],"^5B",[["^ ","^18",191,"^19",266,"^K","previous-id"]]],"~i379",["^ ","^4P",[["^ ","^18",210,"^19",266],["^ ","^18",228,"^19",266]],"^5B",[["^ ","^18",211,"^19",266,"^K","first-match-id"]]],"~i380",["^ ","^6H",[["^ ","^18",234,"^19",266]],"^48",[["^ ","^18",234,"^19",266,"^K","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"^4O",[["^ ","^18",281,"^19",266,"^K","day8.re-frame-10x.metamorphic/subscription?"]]],"~i381",["^ ","^1O",[["^ ","^18",333,"^19",266,"^K","filtered-traces"]]],"~i382",["^ ","^1M",[["^ ","^18",4,"^19",267,"^K","epoch-traces"]],"^2?",[["^ ","^18",19,"^19",267],["^ ","^18",64,"^19",267]],"^4L",[["^ ","^18",19,"^19",267,"^K","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]]],"~i383",["^ ","^1O",[["^ ","^18",97,"^19",267]],"^6F",[["^ ","^18",97,"^19",267,"^K","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]]],"~i384",["^ ","^6H",[["^ ","^18",142,"^19",267]],"^48",[["^ ","^18",142,"^19",267,"^K","day8.re-frame-10x.metamorphic/id-between-xf"]],"^4P",[["^ ","^18",186,"^19",267,"^K","first-match-id"]],"^1Q",[["^ ","^18",201,"^19",267,"^K","last-match-id"]]],"~i385",["^ ","^6H",[["^ ","^18",216,"^19",267]],"^48",[["^ ","^18",216,"^19",267,"^K","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"^4O",[["^ ","^18",263,"^19",267,"^K","day8.re-frame-10x.metamorphic/subscription?"]]],"~i386",["^ ","^1O",[["^ ","^18",315,"^19",267,"^K","filtered-traces"]]],"~i387",["^ ","^1M",[["^ ","^18",4,"^19",268,"^K","reaction-state"]],"^2?",[["^ ","^18",21,"^19",268],["^ ","^18",21,"^19",268]],"~i56",[["^ ","^18",123,"^19",268,"^K","state"]]],"~i388",["^ ","^1M",[["^ ","^18",4,"^19",269,"^K","pre-epoch-state"]],"^3N",[["^ ","^18",117,"^19",269,"^K","reaction-state"]]],"~i389",["^ ","^3N",[["^ ","^18",71,"^19",269]],"^1C",[["^ ","^18",71,"^19",269,"^K","day8.re-frame-10x.metamorphic/reset-sub-state"]]],"~i390",["^ ","^3N",[["^ ","^18",22,"^19",269]],"^1C",[["^ ","^18",22,"^19",269,"^K","day8.re-frame-10x.metamorphic/process-sub-traces"]],"^3[",[["^ ","^18",133,"^19",269,"^K","pre-epoch-traces"]]],"~i391",["^ ","^1M",[["^ ","^18",4,"^19",270,"^K","epoch-state"]],"^3N",[["^ ","^18",113,"^19",270,"^K","pre-epoch-state"]]],"~i392",["^ ","^3N",[["^ ","^18",67,"^19",270]],"^1C",[["^ ","^18",67,"^19",270,"^K","day8.re-frame-10x.metamorphic/reset-sub-state"]]],"~i393",["^ ","^3N",[["^ ","^18",18,"^19",270]],"^1C",[["^ ","^18",18,"^19",270,"^K","day8.re-frame-10x.metamorphic/process-sub-traces"]],"^3[",[["^ ","^18",130,"^19",270,"^K","epoch-traces"]]],"~i394",["^ ","^4L",[["^ ","^18",124,"^19",271,"^K","pre-epoch-state"]]],"~i395",["^ ","^4L",[["^ ","^18",212,"^19",271,"^K","epoch-state"]]],"~i396",["^ ","^4L",[["^ ","^18",302,"^19",271,"^K","first-match-id"]]],"~i397",["^ ","^4L",[["^ ","^18",392,"^19",271,"^K","last-match-id"]]],"~i398",["^ ","^4L",[["^ ","^18",488,"^19",271,"^K","previous-id"]]],"~i399",["^ ","^20",[["^ ","^18",3,"^19",272,"^K","sub-state"]]],"~i400",["^ ","^20",[["^ ","^18",13,"^19",272,"^K","new-matches"]]],"~i759",["^ ","^1A",[["^ ","^18",62,"^19",71],["^ ","^18",62,"^19",71,"^K","G__37034"],["^ ","^18",62,"^19",213],["^ ","^18",62,"^19",213,"^K","G__37137"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^Q"],[1535834828000],["^10","goog/math/math.js"],[1505449243000,"^R","~$goog.array","~$goog.asserts"],["^10","goog/array/array.js"],[1505449243000,"^R","^7:"],["^10","goog/debug/error.js"],[1505449243000,"^R"],["^10","day8/re_frame_10x/metamorphic.cljc"],[1535834828000,"^R","^Q"],["^10","goog/dom/nodetype.js"],[1505449243000,"^R"],["^10","goog/object/object.js"],[1505449243000,"^R"],"~:SHADOW-TIMESTAMP",[1535834828000,1535834828000],["^10","goog/math/long.js"],[1505449243000,"^R","^7:","~$goog.reflect"],["^10","goog/functions/functions.js"],[1505449243000,"^R"],["^10","goog/structs/map.js"],[1505449243000,"^R","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^10","goog/asserts/asserts.js"],[1505449243000,"^R","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^10","goog/uri/uri.js"],[1505449243000,"^R","^79","^7:","^7B","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^10","goog/base.js"],[1505449243000],["^10","goog/structs/structs.js"],[1505449243000,"^R","^79","^7?"],["^10","goog/string/string.js"],[1505449243000,"^R"],["^10","goog/reflect/reflect.js"],[1505449243000,"^R"],["^10","goog/string/stringbuffer.js"],[1505449243000,"^R"],["^10","goog/iter/iter.js"],[1505449243000,"^R","^79","^7:","~$goog.functions","~$goog.math"],["^10","cljs/core.cljs"],[1535834828000,"~$goog.math.Long","~$goog.math.Integer","^7B","^7?","^79","~$goog.Uri","~$goog.string.StringBuffer"],["^10","goog/math/integer.js"],[1505449243000,"^R"],["^10","goog/uri/utils.js"],[1505449243000,"^R","^79","^7:","^7B"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",1,"^8",5,"^9",1,"^:",34],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^R"],"^S",["^J",[]],"~:shadow/js-access-global",["^J",["Error"]],"^T",null,"~:defs",["^ ","~$subscription?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",131,"^8",7,"^9",131,"^:",20,"~:arglists",["^W",["~$quote",["^W",[["~$trace"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/subscription?","~:variadic",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",20,"~:method-params",["^W",[["^7U"]]],"~:protocol-impl",null,"~:arglists-meta",["^W",[null,null]],"^8",1,"^7",131,"^9",131,"~:max-fixed-arity",1,"~:fn-var",true,"^7S",["^W",["^7T",["^W",[["^7U"]]]]]],"~$start-of-epoch-and-prev-end?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",194,"^8",7,"^9",194,"^:",35,"^7S",["^W",["^7T",["^W",[["~$event","~$state"]]]]],"~:doc","Detects that a new epoch has started and that the previous one ended on the previous event.\n\n  If multiple events are dispatched while processing the first event, each one is considered its\n  own epoch."],"^K","~$day8.re-frame-10x.metamorphic/start-of-epoch-and-prev-end?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",35,"^7X",["^W",[["^82","^83"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",194,"^9",194,"^7[",2,"^80",true,"^7S",["^W",["^7T",["^W",[["^82","^83"]]]]],"^84","Detects that a new epoch has started and that the previous one ended on the previous event.\n\n  If multiple events are dispatched while processing the first event, each one is considered its\n  own epoch."],"~$subscription-destroyed?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",143,"^8",7,"^9",143,"^:",30,"^7S",["^W",["^7T",["^W",[["^7U"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/subscription-destroyed?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",30,"^7X",["^W",[["^7U"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",143,"^9",143,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^7U"]]]]]],"~$low-level-reagent-trace?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",156,"^8",7,"^9",156,"^:",31,"^7S",["^W",["^7T",["^W",[["^7U"]]]]],"^84","Is this part of reagent internals?"],"^K","~$day8.re-frame-10x.metamorphic/low-level-reagent-trace?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",31,"^7X",["^W",[["^7U"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",156,"^9",156,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^7U"]]]]],"^84","Is this part of reagent internals?"],"~$request-animation-frame-end?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",86,"^8",7,"^9",86,"^:",35,"^7S",["^W",["^7T",["^W",[["^82"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/request-animation-frame-end?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",35,"^7X",["^W",[["^82"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",86,"^9",86,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^82"]]]]]],"~$event-handler?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",180,"^8",7,"^9",180,"^:",21,"^7S",["^W",["^7T",["^W",[["^7U"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/event-handler?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",21,"^7X",["^W",[["^7U"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",180,"^9",180,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^7U"]]]]]],"~$subscription-created?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",136,"^8",7,"^9",136,"^:",28,"^7S",["^W",["^7T",["^W",[["^7U"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/subscription-created?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",28,"^7X",["^W",[["^7U"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",136,"^9",136,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^7U"]]]]]],"~$subscription-match-state",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",353,"^8",7,"^9",353,"^:",31,"^7S",["^W",["^7T",["^W",[["~$sub-state","~$filtered-traces","~$new-matches"]]]]],"^84","Build up the state of re-frame's running subscriptions over each matched epoch.\n  Returns initial state as first item in list"],"^K","~$day8.re-frame-10x.metamorphic/subscription-match-state","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",31,"^7X",["^W",[["^8A","^8B","^8C"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",353,"^9",353,"^7[",3,"^80",true,"^7S",["^W",["^7T",["^W",[["^8A","^8B","^8C"]]]]],"^84","Build up the state of re-frame's running subscriptions over each matched epoch.\n  Returns initial state as first item in list"],"~$quiescent?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",206,"^8",7,"^9",206,"^:",17,"^7S",["^W",["^7T",["^W",[["^82"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/quiescent?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",17,"^7X",["^W",[["^82"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",206,"^9",206,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^82"]]]]]],"~$add-event-from-idle?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",126,"^8",7,"^9",126,"^:",27,"^7S",["^W",["^7T",["^W",[["^82"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/add-event-from-idle?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",27,"^7X",["^W",[["^82"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",126,"^9",126,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^82"]]]]]],"~$summarise-event",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",89,"^8",7,"^9",89,"^:",22,"^7S",["^W",["^7T",["^W",[["~$ev"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/summarise-event","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",22,"^7X",["^W",[["^8J"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",89,"^9",89,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^8J"]]]]]],"~$unchanged-l2-subscription?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",164,"^8",7,"^9",164,"^:",33,"^7S",["^W",["^7T",["^W",[["~$sub"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/unchanged-l2-subscription?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",33,"^7X",["^W",[["^8M"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",164,"^9",164,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^8M"]]]]]],"~$summarise-match",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",95,"^8",7,"^9",95,"^:",22,"^7S",["^W",["^7T",["^W",[["~$match"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/summarise-match","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",22,"^7X",["^W",[["^8P"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",95,"^9",95,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^8P"]]]]]],"~$run-queue?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",78,"^8",7,"^9",78,"^:",17,"^7S",["^W",["^7T",["^W",[["^82"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/run-queue?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",17,"^7X",["^W",[["^82"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",78,"^9",78,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^82"]]]]]],"~$finish-run?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",170,"^8",7,"^9",170,"^:",18,"^7S",["^W",["^7T",["^W",[["^82"]]]]],"^84","Marks the end of event processing running."],"^K","~$day8.re-frame-10x.metamorphic/finish-run?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",18,"^7X",["^W",[["^82"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",170,"^9",170,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^82"]]]]],"^84","Marks the end of event processing running."],"~$beginning-id",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",98,"^8",7,"^9",98,"^:",19,"^7S",["^W",["^7T",["^W",[["^8P"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/beginning-id","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",19,"^7X",["^W",[["^8P"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",98,"^9",98,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^8P"]]]]]],"~$initial-sub-state",["^ ","^K","~$day8.re-frame-10x.metamorphic/initial-sub-state","^6","day8/re_frame_10x/metamorphic.cljc","^7",214,"^8",1,"^9",214,"^:",23,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",214,"^8",6,"^9",214,"^:",23],"~:tag","~$cljs.core/IMap"],"~$subscription-info",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",271,"^8",7,"^9",271,"^:",24,"^7S",["^W",["^7T",["^W",[["~$initial-state","^8B","~$app-db-id"]]]]],"^84","Collect information about the subscription that we'd like\n  to know, like its layer."],"^K","~$day8.re-frame-10x.metamorphic/subscription-info","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",24,"^7X",["^W",[["^91","^8B","^92"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",271,"^9",271,"^7[",3,"^80",true,"^7S",["^W",["^7T",["^W",[["^91","^8B","^92"]]]]],"^84","Collect information about the subscription that we'd like\n  to know, like its layer."],"~$app-db-after",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",265,"^8",7,"^9",265,"^:",19,"^7S",["^W",["^7T",["^W",[["~$event-trace"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/app-db-after","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",19,"^7X",["^W",[["^95"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",265,"^9",265,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^95"]]]]]],"~$parse-traces",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",219,"^8",7,"^9",219,"^:",19,"^7S",["^W",["^7T",["^W",[["~$parse-state","~$traces"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/parse-traces","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",19,"^7X",["^W",[["^98","^99"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",219,"^9",219,"^7[",2,"^80",true,"^7S",["^W",["^7T",["^W",[["^98","^99"]]]]]],"~$id-between-xf",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",3,"^8",7,"^9",3,"^:",20,"^7S",["^W",["^7T",["^W",[["~$beginning","~$ending"]]]]],"^84","Returns a transducer that filters for :id between beginning and ending. Inclusive on both ends."],"^K","~$day8.re-frame-10x.metamorphic/id-between-xf","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",20,"^7X",["^W",[["^9<","^9="]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",3,"^9",3,"^7[",2,"^80",true,"^7S",["^W",["^7T",["^W",[["^9<","^9="]]]]],"^84","Returns a transducer that filters for :id between beginning and ending. Inclusive on both ends."],"~$initial-parse-state",["^ ","^K","~$day8.re-frame-10x.metamorphic/initial-parse-state","^6","day8/re_frame_10x/metamorphic.cljc","^7",209,"^8",1,"^9",209,"^:",25,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",209,"^8",6,"^9",209,"^:",25],"^8Z","^8["],"~$event-run?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",177,"^8",7,"^9",177,"^:",17,"^7S",["^W",["^7T",["^W",[["^82"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/event-run?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",17,"^7X",["^W",[["^82"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",177,"^9",177,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^82"]]]]]],"~$ending-id",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",101,"^8",7,"^9",101,"^:",16,"^7S",["^W",["^7T",["^W",[["^8P"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/ending-id","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",16,"^7X",["^W",[["^8P"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",101,"^9",101,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^8P"]]]]]],"~$app-db-before",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",268,"^8",7,"^9",268,"^:",20,"^7S",["^W",["^7T",["^W",[["^95"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/app-db-before","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",20,"^7X",["^W",[["^95"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",268,"^9",268,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^95"]]]]]],"~$subscription-not-run?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",146,"^8",7,"^9",146,"^:",28,"^7S",["^W",["^7T",["^W",[["^7U"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/subscription-not-run?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",28,"^7X",["^W",[["^7U"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",146,"^9",146,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^7U"]]]]]],"~$event-dofx?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",183,"^8",7,"^9",183,"^:",18,"^7S",["^W",["^7T",["^W",[["^7U"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/event-dofx?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",18,"^7X",["^W",[["^7U"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",183,"^9",183,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^7U"]]]]]],"~$render?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",161,"^8",7,"^9",161,"^:",14,"^7S",["^W",["^7T",["^W",[["^7U"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/render?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",14,"^7X",["^W",[["^7U"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",161,"^9",161,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^7U"]]]]]],"~$matched-event",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",260,"^8",7,"^9",260,"^:",20,"^7S",["^W",["^7T",["^W",[["^8P"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/matched-event","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",20,"^7X",["^W",[["^8P"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",260,"^9",260,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^8P"]]]]]],"~$request-animation-frame?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",83,"^8",7,"^9",83,"^:",31,"^7S",["^W",["^7T",["^W",[["^82"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/request-animation-frame?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",31,"^7X",["^W",[["^82"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",83,"^9",83,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^82"]]]]]],"~$reset-sub-state",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",293,"^8",7,"^9",293,"^:",22,"^7S",["^W",["^7T",["^W",[["^83"]]]]],"^84","Remove information about the subscription that is transient and specific to a single\n  phase."],"^K","~$day8.re-frame-10x.metamorphic/reset-sub-state","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",22,"^7X",["^W",[["^83"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",293,"^9",293,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^83"]]]]],"^84","Remove information about the subscription that is transient and specific to a single\n  phase."],"~$start-of-epoch?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",186,"^8",7,"^9",186,"^:",22,"^7S",["^W",["^7T",["^W",[["^82"]]]]],"^84","Detects the start of a re-frame epoch\n\n  Normally an epoch would always start with the queue being run, but with a dispatch-sync, the event is run directly."],"^K","~$day8.re-frame-10x.metamorphic/start-of-epoch?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",22,"^7X",["^W",[["^82"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",186,"^9",186,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^82"]]]]],"^84","Detects the start of a re-frame epoch\n\n  Normally an epoch would always start with the queue being run, but with a dispatch-sync, the event is run directly."],"~$low-level-re-frame-trace?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",149,"^8",7,"^9",149,"^:",32,"^7S",["^W",["^7T",["^W",[["^7U"]]]]],"^84","Is this part of re-frame internals?"],"^K","~$day8.re-frame-10x.metamorphic/low-level-re-frame-trace?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",32,"^7X",["^W",[["^7U"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",149,"^9",149,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^7U"]]]]],"^84","Is this part of re-frame internals?"],"~$process-sub-traces",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",308,"^8",7,"^9",308,"^:",25,"^7S",["^W",["^7T",["^W",[["^91","^99"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/process-sub-traces","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",25,"^7X",["^W",[["^91","^99"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",308,"^9",308,"^7[",2,"^80",true,"^7S",["^W",["^7T",["^W",[["^91","^99"]]]]]],"~$subscription-re-run?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",140,"^8",7,"^9",140,"^:",27,"^7S",["^W",["^7T",["^W",[["^7U"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/subscription-re-run?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",27,"^7X",["^W",[["^7U"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",140,"^9",140,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^7U"]]]]]],"~$fsm-trigger?",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",42,"^8",7,"^9",42,"^:",19,"^7S",["^W",["^7T",["^W",[["^82"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/fsm-trigger?","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",19,"^7X",["^W",[["^82"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",42,"^9",42,"^7[",1,"^80",true,"^7S",["^W",["^7T",["^W",[["^82"]]]]]],"~$elapsed-time",["^ ","^7R",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",72,"^8",7,"^9",72,"^:",19,"^7S",["^W",["^7T",["^W",[["~$ev1","~$ev2"]]]]]],"^K","~$day8.re-frame-10x.metamorphic/elapsed-time","^7W",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",19,"^7X",["^W",[["^:2","^:3"]]],"^7Y",null,"^7Z",["^W",[null,null]],"^8",1,"^7",72,"^9",72,"^7[",2,"^80",true,"^7S",["^W",["^7T",["^W",[["^:2","^:3"]]]]]]],"^U",["^ ","^Q","^Q"],"~:cljs.analyzer/constants",["^ ","^S",["^J",["~:raf-end","~:add-event","~:tags","~:created?","~:unchanged?","~:sub/run","~:previous-value","~:idle","~:previous-event","~:app-db-after","~:else","~:reaction-state","~:reagent/quiescent","~:sub/create","~:value","~:child-of","~:re-frame.router/fsm-trigger","~:operation","~:start","~:run?","~:app-db-before","~:last-matched-id","~:duration","~:query-v","~:componentWillUnmount","~:first-matched-id","~:running","~:previous-matched-id","~:event/handler","~:render","~:event","~:layer","~:event/do-fx","~:pre-epoch-state","~:id","~:effects","~:run-queue","~:scheduled","~:raf","~:order","~:cached?","~:sub/dispose","~:coeffects","~:input-signals","~:interceptors","~:disposed?","~:partitions","~:end","~:reaction","~:op-type","~:finish-run","~:subscription","~:current-match","~:sub/traits"]],"^;1",["^:X","^:F","^;;","^:H","^;9","^:G","^:[","^:Z","^;0","^:6","^:L","^:E","^:8","^:J","^:?","^:Y","^;4","^;6","^:=","^:7","^;2","^:C","^:;","^;3","^:N","^:S","^;?","^::","^;1","^:U","^:P","^;<","^:T","^:R","^:V","^:>","^:B","^;>","^;8","^:K","^:W","^:A","^:@","^;5","^;7","^:9","^:I","^:<","^;:","^;=","^:M","^:D","^:O","^:Q"]],"^Y",["^ "],"^Z",["^R","^Q"]],"^N","^L","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^77",[["^;B","~:static-fns"],true,["^;B","~:elide-asserts"],false,["^;B","~:optimize-constants"],null,["^;B","~:external-config"],null,["^;B","~:tooling-config"],null,["^;B","~:emit-constants"],null,["^;B","~:infer-externs"],true,["^;B","^15"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^;B","~:fn-invoke-direct"],null,["^;B","^17"],"/dev/null"]]]