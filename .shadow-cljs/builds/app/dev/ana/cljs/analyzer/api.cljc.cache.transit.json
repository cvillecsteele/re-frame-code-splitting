["^ ","~:output",["^ ","~:js","goog.provide('cljs.analyzer.api');\ngoog.require('cljs.core');\ngoog.require('cljs.env');\ngoog.require('cljs.analyzer');\n/**\n * Creates an empty compilation state Atom<Map>.\n */\ncljs.analyzer.api.empty_state = (function cljs$analyzer$api$empty_state(){\nreturn cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();\n});\n/**\n * Creates an empty analysis environment.\n */\ncljs.analyzer.api.empty_env = (function cljs$analyzer$api$empty_env(){\nreturn cljs.analyzer.empty_env();\n});\n/**\n * Test if the given warning-type is enabled.\n */\ncljs.analyzer.api.warning_enabled_QMARK_ = (function cljs$analyzer$api$warning_enabled_QMARK_(warning_type){\nreturn (cljs.analyzer._STAR_cljs_warnings_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer._STAR_cljs_warnings_STAR_.cljs$core$IFn$_invoke$arity$1(warning_type) : cljs.analyzer._STAR_cljs_warnings_STAR_.call(null,warning_type));\n});\n/**\n * The default warning handler.\n * \n * Outputs the warning messages to *err*.\n */\ncljs.analyzer.api.default_warning_handler = (function cljs$analyzer$api$default_warning_handler(warning_type,env,extra){\nreturn cljs.analyzer.default_warning_handler(warning_type,env,extra);\n});\n/**\n * Return the compiler options from compiler state.\n */\ncljs.analyzer.api.get_options = (function cljs$analyzer$api$get_options(var_args){\nvar G__45487 = arguments.length;\nswitch (G__45487) {\ncase 0:\nreturn cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_);\n});\n\ncljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1 = (function (state){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.Keyword(null,\"options\",\"options\",99638489));\n});\n\ncljs.analyzer.api.get_options.cljs$lang$maxFixedArity = 1;\n\n/**\n * Return the currently computed Google Closure js dependency index from the\n *   compiler state.\n */\ncljs.analyzer.api.get_js_index = (function cljs$analyzer$api$get_js_index(var_args){\nvar G__45490 = arguments.length;\nswitch (G__45490) {\ncase 0:\nreturn cljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_);\n});\n\ncljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$1 = (function (state){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131));\n});\n\ncljs.analyzer.api.get_js_index.cljs$lang$maxFixedArity = 1;\n\n/**\n * Given an analysis environment resolve a var. Analogous to\n * clojure.core/resolve\n */\ncljs.analyzer.api.resolve = (function cljs$analyzer$api$resolve(env,sym){\nif(cljs.core.map_QMARK_(env)){\n} else {\nthrow (new Error(\"Assert failed: (map? env)\"));\n}\n\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error(\"Assert failed: (symbol? sym)\"));\n}\n\ntry{return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,cljs.analyzer.confirm_var_exists_throw());\n}catch (e45492){var e = e45492;\nreturn cljs.analyzer.resolve_macro_var(env,sym);\n}});\n/**\n * Return all namespaces. Analagous to clojure.core/all-ns but\n *   returns symbols identifying namespaces not Namespace instances.\n */\ncljs.analyzer.api.all_ns = (function cljs$analyzer$api$all_ns(var_args){\nvar G__45494 = arguments.length;\nswitch (G__45494) {\ncase 0:\nreturn cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_);\n});\n\ncljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$1 = (function (state){\nreturn cljs.core.keys(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927)));\n});\n\ncljs.analyzer.api.all_ns.cljs$lang$maxFixedArity = 1;\n\n/**\n * Given a namespace return the corresponding namespace analysis map. Analagous\n *   to clojure.core/find-ns.\n */\ncljs.analyzer.api.find_ns = (function cljs$analyzer$api$find_ns(var_args){\nvar G__45497 = arguments.length;\nswitch (G__45497) {\ncase 1:\nreturn cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$1 = (function (sym){\nreturn cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,sym);\n});\n\ncljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$2 = (function (state,sym){\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error(\"Assert failed: (symbol? sym)\"));\n}\n\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),sym], null));\n});\n\ncljs.analyzer.api.find_ns.cljs$lang$maxFixedArity = 2;\n\n/**\n * Given a namespace return all the var analysis maps. Analagous to\n *   clojure.core/ns-interns but returns var analysis maps not vars.\n */\ncljs.analyzer.api.ns_interns = (function cljs$analyzer$api$ns_interns(var_args){\nvar G__45500 = arguments.length;\nswitch (G__45500) {\ncase 1:\nreturn cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,ns);\n});\n\ncljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$2 = (function (state,ns){\nif((ns instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error(\"Assert failed: (symbol? ns)\"));\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)], null)),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null))], 0));\n});\n\ncljs.analyzer.api.ns_interns.cljs$lang$maxFixedArity = 2;\n\n/**\n * Given a namespace return all the public var analysis maps. Analagous to\n *   clojure.core/ns-publics but returns var analysis maps not vars.\n */\ncljs.analyzer.api.ns_publics = (function cljs$analyzer$api$ns_publics(var_args){\nvar G__45503 = arguments.length;\nswitch (G__45503) {\ncase 1:\nreturn cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,ns);\n});\n\ncljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$2 = (function (state,ns){\nif((ns instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error(\"Assert failed: (symbol? ns)\"));\n}\n\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__45504){\nvar vec__45505 = p__45504;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45505,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45505,(1),null);\nreturn new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(v);\n}),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)], null)),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null))], 0))));\n});\n\ncljs.analyzer.api.ns_publics.cljs$lang$maxFixedArity = 2;\n\n/**\n * Given a namespace and a symbol return the corresponding var analysis map.\n *   Analagous to clojure.core/ns-resolve but returns var analysis map not Var.\n */\ncljs.analyzer.api.ns_resolve = (function cljs$analyzer$api$ns_resolve(var_args){\nvar G__45510 = arguments.length;\nswitch (G__45510) {\ncase 2:\nreturn cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$2 = (function (ns,sym){\nreturn cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$3(cljs.env._STAR_compiler_STAR_,ns,sym);\n});\n\ncljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$3 = (function (state,ns,sym){\nif((ns instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error(\"Assert failed: (symbol? ns)\"));\n}\n\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error(\"Assert failed: (symbol? sym)\"));\n}\n\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null));\n});\n\ncljs.analyzer.api.ns_resolve.cljs$lang$maxFixedArity = 3;\n\n/**\n * Removes the namespace named by the symbol.\n */\ncljs.analyzer.api.remove_ns = (function cljs$analyzer$api$remove_ns(var_args){\nvar G__45513 = arguments.length;\nswitch (G__45513) {\ncase 1:\nreturn cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,ns);\n});\n\ncljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$2 = (function (state,ns){\nif((ns instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error(\"Assert failed: (symbol? ns)\"));\n}\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927)], null),cljs.core.dissoc,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns], 0));\n});\n\ncljs.analyzer.api.remove_ns.cljs$lang$maxFixedArity = 2;\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","This is intended to be a stable api for those who need programmatic access\n  to the analyzer.","~:file","cljs/analyzer/api.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",22],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",["~$find-ns","~$remove-ns","~$ns-publics","~$ns-resolve","~$ns-interns","~$all-ns","~$resolve"]],"~:name","~$cljs.analyzer.api","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.env","^Y","~$env","^Y","~$cljs.analyzer","^[","~$ana","^[","~$cljs.core","^11","~$goog","^12"],"~:seen",["^K",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^11","^11"],"~:form",["~#list",["~$ns","^T","This is intended to be a stable api for those who need programmatic access\n  to the analyzer.",["^18",["~:refer-clojure","~:exclude",["^Q","^P","^O","^R","^L","^N","^M"]]],["^18",["^14",["^Y","~:as","^Z"],["^[","^1<","^10"]]]]],"~:flags",["^ ","^14",["^K",[]]],"~:js-deps",["^ "],"~:deps",["^12","^11","^Y","^["]],"^V","^T","~:resource-id",["~:shadow.build.classpath/resource","cljs/analyzer/api.cljc"],"~:compiled-at",1535834875021,"~:resource-name","cljs/analyzer/api.cljc","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.analyzer.api\n  \"This is intended to be a stable api for those who need programmatic access\n  to the analyzer.\"\n  (:refer-clojure :exclude [all-ns ns-interns ns-resolve resolve find-ns\n                            ns-publics remove-ns])\n  (:require [cljs.env :as env]\n            [cljs.analyzer :as ana]))\n\n;; =============================================================================\n;; Useful Utilities\n\n(defn empty-state\n  \"Creates an empty compilation state Atom<Map>.\"\n  []\n  (env/default-compiler-env))\n\n(defmacro with-state\n  \"Run the body with the given compilation state Atom<Map>.\"\n  [state body]\n  `(env/with-compiler-env ~state\n     ~@body))\n\n(defn empty-env\n  \"Creates an empty analysis environment.\"\n  []\n  (ana/empty-env))\n\n(defmacro no-warn\n  \"Disable analyzer warnings for any analysis executed in body.\"\n  [& body]\n  (let [no-warnings (zipmap (keys ana/*cljs-warnings*) (repeat false))]\n    `(binding [ana/*cljs-warnings* ~no-warnings]\n       ~@body)))\n\n(defn warning-enabled?\n  \"Test if the given warning-type is enabled.\"\n  [warning-type]\n  (ana/*cljs-warnings* warning-type))\n\n(defn default-warning-handler\n  \"The default warning handler.\n\n   Outputs the warning messages to *err*.\"\n  [warning-type env extra]\n  (ana/default-warning-handler warning-type env extra))\n\n(defn get-options\n  \"Return the compiler options from compiler state.\"\n  ([] (get-options env/*compiler*))\n  ([state]\n   (get @state :options)))\n\n(defn get-js-index\n  \"Return the currently computed Google Closure js dependency index from the\n  compiler state.\"\n  ([] (get-options env/*compiler*))\n  ([state]\n   (get @state :js-dependency-index)))\n\n#?(:clj\n   (defn analyze\n     \"Given an environment, a map containing {:locals (mapping of names to bindings), :context\n     (one of :statement, :expr, :return), :ns (a symbol naming the\n     compilation ns)}, and form, returns an expression object (a map\n     containing at least :form, :op and :env keys). If expr has any (immediately)\n     nested exprs, must have :children [exprs...] entry. This will\n     facilitate code walking without knowing the details of the op set.\"\n     ([env form] (analyze env form nil))\n     ([env form name] (analyze env form name nil))\n     ([env form name opts]\n      (analyze\n        (if-not (nil? env/*compiler*)\n          env/*compiler*\n          (env/default-compiler-env opts))\n        env form name opts))\n     ([state env form name opts]\n      (env/with-compiler-env state\n        (binding [ana/*cljs-warning-handlers* (:warning-handlers opts ana/*cljs-warning-handlers*)]\n          (ana/analyze env form name opts))))))\n\n#?(:clj\n   (defn forms-seq\n     \"Seq of Clojure/ClojureScript forms from rdr, a java.io.Reader. Optionally\n     accepts a filename argument which will be used in any emitted errors.\"\n     ([rdr] (ana/forms-seq* rdr nil))\n     ([rdr filename] (ana/forms-seq* rdr filename))))\n\n#?(:clj\n   (defn parse-ns\n     \"Helper for parsing only the essential namespace information from a\n      ClojureScript source file and returning a cljs.closure/IJavaScript compatible\n      map _not_ a namespace AST node.\n   \n      By default does not load macros or perform any analysis of dependencies. If\n      opts parameter provided :analyze-deps and :load-macros keys their values will\n      be used for *analyze-deps* and *load-macros* bindings respectively. This\n      function does _not_ side-effect the ambient compilation environment unless\n      requested via opts where :restore is false.\"\n     ([src] (parse-ns src nil nil))\n     ([src opts] (parse-ns src nil opts))\n     ([src dest opts]\n      (parse-ns\n        (if-not (nil? env/*compiler*)\n          env/*compiler*\n          (env/default-compiler-env opts))\n        src dest opts))\n     ([state src dest opts]\n      (env/with-compiler-env state\n        (binding [ana/*cljs-warning-handlers* (:warning-handlers opts ana/*cljs-warning-handlers*)]\n          (ana/parse-ns src dest opts))))))\n#?(:clj\n   (defn analyze-file\n     \"Given a java.io.File, java.net.URL or a string identifying a resource on the\n      classpath attempt to analyze it.\n   \n      This function side-effects the ambient compilation environment\n      `cljs.env/*compiler*` to aggregate analysis information. opts argument is\n      compiler options, if :cache-analysis true will cache analysis to\n      \\\":output-dir/some/ns/foo.cljs.cache.edn\\\". This function does not return a\n      meaningful value.\"\n     ([f] (analyze-file f nil))\n     ([f opts]\n      (analyze-file\n        (if-not (nil? env/*compiler*)\n          env/*compiler*\n          (env/default-compiler-env opts))\n        f opts))\n     ([state f opts]\n      (env/with-compiler-env state\n        (binding [ana/*cljs-warning-handlers* (:warning-handlers opts ana/*cljs-warning-handlers*)]\n          (ana/analyze-file f opts))))))\n\n;; =============================================================================\n;; Main API\n\n(defn resolve\n  \"Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve\"\n  [env sym]\n  {:pre [(map? env) (symbol? sym)]}\n  (try\n    (ana/resolve-var env sym\n      (ana/confirm-var-exists-throw))\n    (catch #?(:clj Exception :cljs :default) e\n      (ana/resolve-macro-var env sym))))\n\n(defn all-ns\n  \"Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.\"\n  ([]\n   (all-ns env/*compiler*))\n  ([state]\n   (keys (get @state ::ana/namespaces))))\n\n(defn find-ns\n  \"Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.\"\n  ([sym]\n   (find-ns env/*compiler* sym))\n  ([state sym]\n   {:pre [(symbol? sym)]}\n   (get-in @state [::ana/namespaces sym])))\n\n(defn ns-interns\n  \"Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.\"\n  ([ns]\n   (ns-interns env/*compiler* ns))\n  ([state ns]\n   {:pre [(symbol? ns)]}\n   (merge\n     (get-in @state [::ana/namespaces ns :macros])\n     (get-in @state [::ana/namespaces ns :defs]))))\n\n(defn ns-publics\n  \"Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.\"\n  ([ns]\n   (ns-publics env/*compiler* ns))\n  ([state ns]\n   {:pre [(symbol? ns)]}\n   (->> (merge\n          (get-in @state [::ana/namespaces ns :macros])\n          (get-in @state [::ana/namespaces ns :defs]))\n        (remove (fn [[k v]] (:private v)))\n        (into {}))))\n\n(defn ns-resolve\n  \"Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.\"\n  ([ns sym]\n   (ns-resolve env/*compiler* ns sym))\n  ([state ns sym]\n   {:pre [(symbol? ns) (symbol? sym)]}\n   (get-in @state [::ana/namespaces ns :defs sym])))\n\n(defn remove-ns\n  \"Removes the namespace named by the symbol.\"\n  ([ns]\n   (remove-ns env/*compiler* ns))\n  ([state ns]\n   {:pre [(symbol? ns)]}\n   (swap! state update-in [::ana/namespaces] dissoc ns)))\n\n(defmacro in-cljs-user\n  \"Binds cljs.analyzer/*cljs-ns* to 'cljs.user and uses the given compilation\n  environment atom and runs body.\"\n  [env & body]\n  `(binding [cljs.analyzer/*cljs-ns* 'cljs.user]\n     (cljs.env/with-compiler-env ~env\n       ~@body)))\n","~:reader-features",["^K",["~:cljs"]],"~:source-map",["^ ","~i19",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",4],["^ ","^1J",32,"^1K",7],["^ ","^1J",0,"^1K",8]],"~i6",[["^ ","^1J",0,"^1K",7,"^S","cljs.analyzer.api/empty-state"]]],"~i22",["^ ","~i2",[["^ ","^1J",0,"^1K",8]],"~i3",[["^ ","^1J",7,"^1K",8,"^S","cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0"]]],"~i30",["^ ","~i0",[["^ ","^1J",0,"^1K",10],["^ ","^1J",30,"^1K",13],["^ ","^1J",0,"^1K",14]],"~i6",[["^ ","^1J",0,"^1K",13,"^S","cljs.analyzer.api/empty-env"]]],"~i33",["^ ","~i2",[["^ ","^1J",0,"^1K",14]],"~i3",[["^ ","^1J",7,"^1K",14,"^S","cljs.analyzer/empty-env"]]],"~i42",["^ ","~i0",[["^ ","^1J",0,"^1K",16],["^ ","^1J",43,"^1K",19],["^ ","^1J",0,"^1K",20]],"~i6",[["^ ","^1J",0,"^1K",19,"^S","cljs.analyzer.api/warning-enabled?"]]],"~i44",["^ ","~i3",[["^ ","^1J",94,"^1K",19,"^S","warning-type"]]],"~i45",["^ ","~i2",[["^ ","^1J",0,"^1K",20]],"~i3",[["^ ","^1J",8,"^1K",20,"^S","cljs.analyzer/*cljs-warnings*"],["^ ","^1J",80,"^1K",20,"^S","cljs.analyzer/*cljs-warnings*"],["^ ","^1J",166,"^1K",20,"^S","cljs.analyzer/*cljs-warnings*"]],"~i23",[["^ ","^1J",150,"^1K",20,"^S","warning-type"],["^ ","^1J",216,"^1K",20,"^S","warning-type"]]],"~i47",["^ ","~i0",[["^ ","^1J",0,"^1K",22],["^ ","^1J",44,"^1K",27],["^ ","^1J",0,"^1K",28]],"~i6",[["^ ","^1J",0,"^1K",27,"^S","cljs.analyzer.api/default-warning-handler"]]],"~i51",["^ ","~i3",[["^ ","^1J",96,"^1K",27,"^S","warning-type"]],"~i16",[["^ ","^1J",109,"^1K",27,"^S","env"]],"~i20",[["^ ","^1J",113,"^1K",27,"^S","extra"]]],"~i52",["^ ","~i2",[["^ ","^1J",0,"^1K",28]],"~i3",[["^ ","^1J",7,"^1K",28,"^S","cljs.analyzer/default-warning-handler"]],"~i31",[["^ ","^1J",45,"^1K",28,"^S","warning-type"]],"^1P",[["^ ","^1J",58,"^1K",28,"^S","env"]],"~i48",[["^ ","^1J",62,"^1K",28,"^S","extra"]]],"~i54",["^ ","~i0",[["^ ","^1J",0,"^1K",30],["^ ","^1J",0,"^1K",30],["^ ","^1J",32,"^1K",33],["^ ","^1J",72,"^1K",33,"^S","var_args"],["^ ","^1J",0,"^1K",34],["^ ","^1J",0,"^1K",34],["^ ","^1J",4,"^1K",34,"^S","G__45487"],["^ ","^1J",15,"^1K",34],["^ ","^1J",15,"^1K",34],["^ ","^1J",0,"^1K",35],["^ ","^1J",0,"^1K",35],["^ ","^1J",8,"^1K",35,"^S","G__45487"],["^ ","^1J",5,"^1K",36],["^ ","^1J",0,"^1K",37],["^ ","^1J",7,"^1K",37,"^S","cljs.analyzer.api/get-options"],["^ ","^1J",5,"^1K",40],["^ ","^1J",0,"^1K",41],["^ ","^1J",7,"^1K",41,"^S","cljs.analyzer.api/get-options"],["^ ","^1J",67,"^1K",41],["^ ","^1J",68,"^1K",41],["^ ","^1J",78,"^1K",41],["^ ","^1J",0,"^1K",45],["^ ","^1J",6,"^1K",45],["^ ","^1J",11,"^1K",45,"^S","js/Error"],["^ ","^1J",17,"^1K",45],["^ ","^1J",18,"^1K",45],["^ ","^1J",80,"^1K",45],["^ ","^1J",80,"^1K",45],["^ ","^1J",0,"^1K",50],["^ ","^1J",0,"^1K",50],["^ ","^1J",62,"^1K",50],["^ ","^1J",0,"^1K",51],["^ ","^1J",0,"^1K",54],["^ ","^1J",0,"^1K",54],["^ ","^1J",62,"^1K",54],["^ ","^1J",0,"^1K",55],["^ ","^1J",0,"^1K",58],["^ ","^1J",0,"^1K",58],["^ ","^1J",56,"^1K",58],["^ ","^1J",0,"^1K",60]],"~i6",[["^ ","^1J",0,"^1K",33,"^S","cljs.analyzer.api/get-options"],["^ ","^1J",0,"^1K",50,"^S","cljs.analyzer.api/get-options"],["^ ","^1J",0,"^1K",54,"^S","cljs.analyzer.api/get-options"],["^ ","^1J",0,"^1K",58,"^S","cljs.analyzer.api/get-options"]]],"~i56",["^ ","~i6",[["^ ","^1J",0,"^1K",51]],"~i7",[["^ ","^1J",7,"^1K",51,"^S","cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1"]],"^1I",[["^ ","^1J",67,"^1K",51,"^S","cljs.env/*compiler*"]]],"~i57",["^ ","~i4",[["^ ","^1J",73,"^1K",54,"^S","state"]]],"~i58",["^ ","~i3",[["^ ","^1J",0,"^1K",55],["^ ","^1J",51,"^1K",55],["^ ","^1J",51,"^1K",55,"^S","cljs.core/deref"],["^ ","^1J",74,"^1K",55]],"~i4",[["^ ","^1J",7,"^1K",55,"^S","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"~i9",[["^ ","^1J",67,"^1K",55,"^S","state"]]],"~i60",["^ ","~i0",[["^ ","^1J",0,"^1K",60],["^ ","^1J",0,"^1K",60],["^ ","^1J",33,"^1K",64],["^ ","^1J",74,"^1K",64,"^S","var_args"],["^ ","^1J",0,"^1K",65],["^ ","^1J",0,"^1K",65],["^ ","^1J",4,"^1K",65,"^S","G__45490"],["^ ","^1J",15,"^1K",65],["^ ","^1J",15,"^1K",65],["^ ","^1J",0,"^1K",66],["^ ","^1J",0,"^1K",66],["^ ","^1J",8,"^1K",66,"^S","G__45490"],["^ ","^1J",5,"^1K",67],["^ ","^1J",0,"^1K",68],["^ ","^1J",7,"^1K",68,"^S","cljs.analyzer.api/get-js-index"],["^ ","^1J",5,"^1K",71],["^ ","^1J",0,"^1K",72],["^ ","^1J",7,"^1K",72,"^S","cljs.analyzer.api/get-js-index"],["^ ","^1J",68,"^1K",72],["^ ","^1J",69,"^1K",72],["^ ","^1J",79,"^1K",72],["^ ","^1J",0,"^1K",76],["^ ","^1J",6,"^1K",76],["^ ","^1J",11,"^1K",76,"^S","js/Error"],["^ ","^1J",17,"^1K",76],["^ ","^1J",18,"^1K",76],["^ ","^1J",80,"^1K",76],["^ ","^1J",80,"^1K",76],["^ ","^1J",0,"^1K",81],["^ ","^1J",0,"^1K",81],["^ ","^1J",63,"^1K",81],["^ ","^1J",0,"^1K",82],["^ ","^1J",0,"^1K",85],["^ ","^1J",0,"^1K",85],["^ ","^1J",63,"^1K",85],["^ ","^1J",0,"^1K",86],["^ ","^1J",0,"^1K",89],["^ ","^1J",0,"^1K",89],["^ ","^1J",57,"^1K",89],["^ ","^1J",0,"^1K",91]],"~i6",[["^ ","^1J",0,"^1K",64,"^S","cljs.analyzer.api/get-js-index"],["^ ","^1J",0,"^1K",81,"^S","cljs.analyzer.api/get-js-index"],["^ ","^1J",0,"^1K",85,"^S","cljs.analyzer.api/get-js-index"],["^ ","^1J",0,"^1K",89,"^S","cljs.analyzer.api/get-js-index"]]],"~i63",["^ ","~i6",[["^ ","^1J",0,"^1K",82]],"~i7",[["^ ","^1J",7,"^1K",82,"^S","cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1"]],"^1I",[["^ ","^1J",67,"^1K",82,"^S","cljs.env/*compiler*"]]],"~i64",["^ ","~i4",[["^ ","^1J",74,"^1K",85,"^S","state"]]],"~i65",["^ ","~i3",[["^ ","^1J",0,"^1K",86],["^ ","^1J",51,"^1K",86],["^ ","^1J",51,"^1K",86,"^S","cljs.core/deref"],["^ ","^1J",74,"^1K",86]],"~i4",[["^ ","^1J",7,"^1K",86,"^S","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"~i9",[["^ ","^1J",67,"^1K",86,"^S","state"]]],"~i143",["^ ","~i0",[["^ ","^1J",0,"^1K",91],["^ ","^1J",28,"^1K",95],["^ ","^1J",0,"^1K",96],["^ ","^1J",0,"^1K",96],["^ ","^1J",0,"^1K",97],["^ ","^1J",0,"^1K",98],["^ ","^1J",0,"^1K",98],["^ ","^1J",6,"^1K",98],["^ ","^1J",11,"^1K",98,"^S","js/Error"],["^ ","^1J",17,"^1K",98],["^ ","^1J",0,"^1K",101],["^ ","^1J",0,"^1K",102],["^ ","^1J",0,"^1K",103],["^ ","^1J",0,"^1K",103],["^ ","^1J",6,"^1K",103],["^ ","^1J",11,"^1K",103,"^S","js/Error"],["^ ","^1J",17,"^1K",103]],"~i6",[["^ ","^1J",0,"^1K",95,"^S","cljs.analyzer.api/resolve"]]],"~i146",["^ ","~i3",[["^ ","^1J",64,"^1K",95,"^S","env"]],"~i7",[["^ ","^1J",68,"^1K",95,"^S","sym"]]],"~i147",["^ ","~i9",[["^ ","^1J",3,"^1K",96]],"~i10",[["^ ","^1J",3,"^1K",96,"^S","cljs.core/map?"]],"~i15",[["^ ","^1J",24,"^1K",96,"^S","env"]],"^1V",[["^ ","^1J",3,"^1K",101],["^ ","^1J",19,"^1K",101,"^S","cljs.core/Symbol"]],"~i29",[["^ ","^1J",4,"^1K",101,"^S","sym"]]],"~i148",["^ ","~i2",[["^ ","^1J",0,"^1K",106],["^ ","^1J",4,"^1K",106],["^ ","^1J",16,"^1K",107],["^ ","^1J",24,"^1K",107,"^S","e45492"],["^ ","^1J",0,"^1K",108]]],"~i149",["^ ","~i4",[["^ ","^1J",4,"^1K",106]],"~i5",[["^ ","^1J",11,"^1K",106,"^S","cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3"]],"~i21",[["^ ","^1J",67,"^1K",106,"^S","env"]],"~i25",[["^ ","^1J",71,"^1K",106,"^S","sym"]]],"~i150",["^ ","~i6",[["^ ","^1J",75,"^1K",106]],"~i7",[["^ ","^1J",75,"^1K",106,"^S","cljs.analyzer/confirm-var-exists-throw"]]],"~i151",["^ ","^1Q",[["^ ","^1J",20,"^1K",107,"^S","e"]]],"~i152",["^ ","~i6",[["^ ","^1J",0,"^1K",108]],"~i7",[["^ ","^1J",7,"^1K",108,"^S","cljs.analyzer/resolve-macro-var"]],"^2;",[["^ ","^1J",39,"^1K",108,"^S","env"]],"^1N",[["^ ","^1J",43,"^1K",108,"^S","sym"]]],"~i154",["^ ","~i0",[["^ ","^1J",0,"^1K",110],["^ ","^1J",0,"^1K",110],["^ ","^1J",27,"^1K",114],["^ ","^1J",62,"^1K",114,"^S","var_args"],["^ ","^1J",0,"^1K",115],["^ ","^1J",0,"^1K",115],["^ ","^1J",4,"^1K",115,"^S","G__45494"],["^ ","^1J",15,"^1K",115],["^ ","^1J",15,"^1K",115],["^ ","^1J",0,"^1K",116],["^ ","^1J",0,"^1K",116],["^ ","^1J",8,"^1K",116,"^S","G__45494"],["^ ","^1J",5,"^1K",117],["^ ","^1J",0,"^1K",118],["^ ","^1J",7,"^1K",118,"^S","cljs.analyzer.api/all-ns"],["^ ","^1J",5,"^1K",121],["^ ","^1J",0,"^1K",122],["^ ","^1J",7,"^1K",122,"^S","cljs.analyzer.api/all-ns"],["^ ","^1J",62,"^1K",122],["^ ","^1J",63,"^1K",122],["^ ","^1J",73,"^1K",122],["^ ","^1J",0,"^1K",126],["^ ","^1J",6,"^1K",126],["^ ","^1J",11,"^1K",126,"^S","js/Error"],["^ ","^1J",17,"^1K",126],["^ ","^1J",18,"^1K",126],["^ ","^1J",80,"^1K",126],["^ ","^1J",80,"^1K",126],["^ ","^1J",0,"^1K",131],["^ ","^1J",0,"^1K",131],["^ ","^1J",57,"^1K",131],["^ ","^1J",0,"^1K",132],["^ ","^1J",0,"^1K",135],["^ ","^1J",0,"^1K",135],["^ ","^1J",57,"^1K",135],["^ ","^1J",0,"^1K",136],["^ ","^1J",0,"^1K",139],["^ ","^1J",0,"^1K",139],["^ ","^1J",51,"^1K",139],["^ ","^1J",0,"^1K",141]],"~i6",[["^ ","^1J",0,"^1K",114,"^S","cljs.analyzer.api/all-ns"],["^ ","^1J",0,"^1K",131,"^S","cljs.analyzer.api/all-ns"],["^ ","^1J",0,"^1K",135,"^S","cljs.analyzer.api/all-ns"],["^ ","^1J",0,"^1K",139,"^S","cljs.analyzer.api/all-ns"]]],"~i158",["^ ","~i3",[["^ ","^1J",0,"^1K",132]],"~i4",[["^ ","^1J",7,"^1K",132,"^S","cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$1"]],"~i11",[["^ ","^1J",62,"^1K",132,"^S","cljs.env/*compiler*"]]],"~i159",["^ ","~i4",[["^ ","^1J",68,"^1K",135,"^S","state"]]],"~i160",["^ ","~i3",[["^ ","^1J",0,"^1K",136]],"~i4",[["^ ","^1J",7,"^1K",136,"^S","cljs.core/keys"]],"~i9",[["^ ","^1J",22,"^1K",136],["^ ","^1J",66,"^1K",136],["^ ","^1J",66,"^1K",136,"^S","cljs.core/deref"],["^ ","^1J",89,"^1K",136]],"^29",[["^ ","^1J",22,"^1K",136,"^S","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2:",[["^ ","^1J",82,"^1K",136,"^S","state"]]],"~i162",["^ ","~i0",[["^ ","^1J",0,"^1K",141],["^ ","^1J",0,"^1K",141],["^ ","^1J",28,"^1K",145],["^ ","^1J",64,"^1K",145,"^S","var_args"],["^ ","^1J",0,"^1K",146],["^ ","^1J",0,"^1K",146],["^ ","^1J",4,"^1K",146,"^S","G__45497"],["^ ","^1J",15,"^1K",146],["^ ","^1J",15,"^1K",146],["^ ","^1J",0,"^1K",147],["^ ","^1J",0,"^1K",147],["^ ","^1J",8,"^1K",147,"^S","G__45497"],["^ ","^1J",5,"^1K",148],["^ ","^1J",0,"^1K",149],["^ ","^1J",7,"^1K",149,"^S","cljs.analyzer.api/find-ns"],["^ ","^1J",63,"^1K",149],["^ ","^1J",64,"^1K",149],["^ ","^1J",74,"^1K",149],["^ ","^1J",5,"^1K",152],["^ ","^1J",0,"^1K",153],["^ ","^1J",7,"^1K",153,"^S","cljs.analyzer.api/find-ns"],["^ ","^1J",63,"^1K",153],["^ ","^1J",64,"^1K",153],["^ ","^1J",74,"^1K",153],["^ ","^1J",80,"^1K",153],["^ ","^1J",81,"^1K",153],["^ ","^1J",91,"^1K",153],["^ ","^1J",0,"^1K",157],["^ ","^1J",6,"^1K",157],["^ ","^1J",11,"^1K",157,"^S","js/Error"],["^ ","^1J",17,"^1K",157],["^ ","^1J",18,"^1K",157],["^ ","^1J",80,"^1K",157],["^ ","^1J",80,"^1K",157],["^ ","^1J",0,"^1K",162],["^ ","^1J",0,"^1K",162],["^ ","^1J",58,"^1K",162],["^ ","^1J",0,"^1K",163],["^ ","^1J",0,"^1K",166],["^ ","^1J",0,"^1K",166],["^ ","^1J",58,"^1K",166],["^ ","^1J",0,"^1K",167],["^ ","^1J",0,"^1K",167],["^ ","^1J",0,"^1K",168],["^ ","^1J",0,"^1K",169],["^ ","^1J",0,"^1K",169],["^ ","^1J",6,"^1K",169],["^ ","^1J",11,"^1K",169,"^S","js/Error"],["^ ","^1J",17,"^1K",169],["^ ","^1J",0,"^1K",175],["^ ","^1J",0,"^1K",175],["^ ","^1J",52,"^1K",175],["^ ","^1J",0,"^1K",177]],"~i6",[["^ ","^1J",0,"^1K",145,"^S","cljs.analyzer.api/find-ns"],["^ ","^1J",0,"^1K",162,"^S","cljs.analyzer.api/find-ns"],["^ ","^1J",0,"^1K",166,"^S","cljs.analyzer.api/find-ns"],["^ ","^1J",0,"^1K",175,"^S","cljs.analyzer.api/find-ns"]]],"~i165",["^ ","~i4",[["^ ","^1J",69,"^1K",162,"^S","sym"]]],"~i166",["^ ","~i3",[["^ ","^1J",0,"^1K",163]],"~i4",[["^ ","^1J",7,"^1K",163,"^S","cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$2"]],"~i12",[["^ ","^1J",63,"^1K",163,"^S","cljs.env/*compiler*"]],"~i27",[["^ ","^1J",93,"^1K",163,"^S","sym"]]],"~i167",["^ ","~i4",[["^ ","^1J",69,"^1K",166,"^S","state"]],"^29",[["^ ","^1J",75,"^1K",166,"^S","sym"]]],"~i168",["^ ","^29",[["^ ","^1J",3,"^1K",167],["^ ","^1J",19,"^1K",167,"^S","cljs.core/Symbol"]],"^1I",[["^ ","^1J",4,"^1K",167,"^S","sym"]]],"~i169",["^ ","~i3",[["^ ","^1J",0,"^1K",172],["^ ","^1J",54,"^1K",172],["^ ","^1J",54,"^1K",172,"^S","cljs.core/deref"],["^ ","^1J",77,"^1K",172],["^ ","^1J",160,"^1K",172]],"~i4",[["^ ","^1J",7,"^1K",172,"^S","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^2K",[["^ ","^1J",70,"^1K",172,"^S","state"]],"~i36",[["^ ","^1J",250,"^1K",172,"^S","sym"]]],"~i171",["^ ","~i0",[["^ ","^1J",0,"^1K",177],["^ ","^1J",0,"^1K",177],["^ ","^1J",31,"^1K",181],["^ ","^1J",70,"^1K",181,"^S","var_args"],["^ ","^1J",0,"^1K",182],["^ ","^1J",0,"^1K",182],["^ ","^1J",4,"^1K",182,"^S","G__45500"],["^ ","^1J",15,"^1K",182],["^ ","^1J",15,"^1K",182],["^ ","^1J",0,"^1K",183],["^ ","^1J",0,"^1K",183],["^ ","^1J",8,"^1K",183,"^S","G__45500"],["^ ","^1J",5,"^1K",184],["^ ","^1J",0,"^1K",185],["^ ","^1J",7,"^1K",185,"^S","cljs.analyzer.api/ns-interns"],["^ ","^1J",66,"^1K",185],["^ ","^1J",67,"^1K",185],["^ ","^1J",77,"^1K",185],["^ ","^1J",5,"^1K",188],["^ ","^1J",0,"^1K",189],["^ ","^1J",7,"^1K",189,"^S","cljs.analyzer.api/ns-interns"],["^ ","^1J",66,"^1K",189],["^ ","^1J",67,"^1K",189],["^ ","^1J",77,"^1K",189],["^ ","^1J",83,"^1K",189],["^ ","^1J",84,"^1K",189],["^ ","^1J",94,"^1K",189],["^ ","^1J",0,"^1K",193],["^ ","^1J",6,"^1K",193],["^ ","^1J",11,"^1K",193,"^S","js/Error"],["^ ","^1J",17,"^1K",193],["^ ","^1J",18,"^1K",193],["^ ","^1J",80,"^1K",193],["^ ","^1J",80,"^1K",193],["^ ","^1J",0,"^1K",198],["^ ","^1J",0,"^1K",198],["^ ","^1J",61,"^1K",198],["^ ","^1J",0,"^1K",199],["^ ","^1J",0,"^1K",202],["^ ","^1J",0,"^1K",202],["^ ","^1J",61,"^1K",202],["^ ","^1J",0,"^1K",203],["^ ","^1J",0,"^1K",203],["^ ","^1J",0,"^1K",204],["^ ","^1J",0,"^1K",205],["^ ","^1J",0,"^1K",205],["^ ","^1J",6,"^1K",205],["^ ","^1J",11,"^1K",205,"^S","js/Error"],["^ ","^1J",17,"^1K",205],["^ ","^1J",0,"^1K",211],["^ ","^1J",0,"^1K",211],["^ ","^1J",55,"^1K",211],["^ ","^1J",0,"^1K",213]],"~i6",[["^ ","^1J",0,"^1K",181,"^S","cljs.analyzer.api/ns-interns"],["^ ","^1J",0,"^1K",198,"^S","cljs.analyzer.api/ns-interns"],["^ ","^1J",0,"^1K",202,"^S","cljs.analyzer.api/ns-interns"],["^ ","^1J",0,"^1K",211,"^S","cljs.analyzer.api/ns-interns"]]],"~i174",["^ ","~i4",[["^ ","^1J",72,"^1K",198,"^S","ns"]]],"~i175",["^ ","~i3",[["^ ","^1J",0,"^1K",199]],"~i4",[["^ ","^1J",7,"^1K",199,"^S","cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$2"]],"^2:",[["^ ","^1J",66,"^1K",199,"^S","cljs.env/*compiler*"]],"^1M",[["^ ","^1J",96,"^1K",199,"^S","ns"]]],"~i176",["^ ","~i4",[["^ ","^1J",72,"^1K",202,"^S","state"]],"^29",[["^ ","^1J",78,"^1K",202,"^S","ns"]]],"~i177",["^ ","^29",[["^ ","^1J",3,"^1K",203],["^ ","^1J",18,"^1K",203,"^S","cljs.core/Symbol"]],"^1I",[["^ ","^1J",4,"^1K",203,"^S","ns"]]],"~i178",["^ ","~i3",[["^ ","^1J",0,"^1K",208]],"~i4",[["^ ","^1J",7,"^1K",208,"^S","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]]],"~i179",["^ ","~i5",[["^ ","^1J",110,"^1K",208],["^ ","^1J",157,"^1K",208],["^ ","^1J",157,"^1K",208,"^S","cljs.core/deref"],["^ ","^1J",180,"^1K",208],["^ ","^1J",263,"^1K",208],["^ ","^1J",356,"^1K",208]],"~i6",[["^ ","^1J",110,"^1K",208,"^S","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"~i14",[["^ ","^1J",173,"^1K",208,"^S","state"]],"~i38",[["^ ","^1J",353,"^1K",208,"^S","ns"]]],"~i180",["^ ","~i5",[["^ ","^1J",421,"^1K",208],["^ ","^1J",468,"^1K",208],["^ ","^1J",468,"^1K",208,"^S","cljs.core/deref"],["^ ","^1J",491,"^1K",208],["^ ","^1J",574,"^1K",208],["^ ","^1J",667,"^1K",208]],"~i6",[["^ ","^1J",421,"^1K",208,"^S","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^2X",[["^ ","^1J",484,"^1K",208,"^S","state"]],"^2Y",[["^ ","^1J",664,"^1K",208,"^S","ns"]]],"~i182",["^ ","~i0",[["^ ","^1J",0,"^1K",213],["^ ","^1J",0,"^1K",213],["^ ","^1J",31,"^1K",217],["^ ","^1J",70,"^1K",217,"^S","var_args"],["^ ","^1J",0,"^1K",218],["^ ","^1J",0,"^1K",218],["^ ","^1J",4,"^1K",218,"^S","G__45503"],["^ ","^1J",15,"^1K",218],["^ ","^1J",15,"^1K",218],["^ ","^1J",0,"^1K",219],["^ ","^1J",0,"^1K",219],["^ ","^1J",8,"^1K",219,"^S","G__45503"],["^ ","^1J",5,"^1K",220],["^ ","^1J",0,"^1K",221],["^ ","^1J",7,"^1K",221,"^S","cljs.analyzer.api/ns-publics"],["^ ","^1J",66,"^1K",221],["^ ","^1J",67,"^1K",221],["^ ","^1J",77,"^1K",221],["^ ","^1J",5,"^1K",224],["^ ","^1J",0,"^1K",225],["^ ","^1J",7,"^1K",225,"^S","cljs.analyzer.api/ns-publics"],["^ ","^1J",66,"^1K",225],["^ ","^1J",67,"^1K",225],["^ ","^1J",77,"^1K",225],["^ ","^1J",83,"^1K",225],["^ ","^1J",84,"^1K",225],["^ ","^1J",94,"^1K",225],["^ ","^1J",0,"^1K",229],["^ ","^1J",6,"^1K",229],["^ ","^1J",11,"^1K",229,"^S","js/Error"],["^ ","^1J",17,"^1K",229],["^ ","^1J",18,"^1K",229],["^ ","^1J",80,"^1K",229],["^ ","^1J",80,"^1K",229],["^ ","^1J",0,"^1K",234],["^ ","^1J",0,"^1K",234],["^ ","^1J",61,"^1K",234],["^ ","^1J",0,"^1K",235],["^ ","^1J",0,"^1K",238],["^ ","^1J",0,"^1K",238],["^ ","^1J",61,"^1K",238],["^ ","^1J",0,"^1K",239],["^ ","^1J",0,"^1K",239],["^ ","^1J",0,"^1K",240],["^ ","^1J",0,"^1K",241],["^ ","^1J",0,"^1K",241],["^ ","^1J",6,"^1K",241],["^ ","^1J",11,"^1K",241,"^S","js/Error"],["^ ","^1J",17,"^1K",241],["^ ","^1J",0,"^1K",252],["^ ","^1J",0,"^1K",252],["^ ","^1J",55,"^1K",252],["^ ","^1J",0,"^1K",254]],"~i6",[["^ ","^1J",0,"^1K",217,"^S","cljs.analyzer.api/ns-publics"],["^ ","^1J",0,"^1K",234,"^S","cljs.analyzer.api/ns-publics"],["^ ","^1J",0,"^1K",238,"^S","cljs.analyzer.api/ns-publics"],["^ ","^1J",0,"^1K",252,"^S","cljs.analyzer.api/ns-publics"]]],"~i185",["^ ","~i4",[["^ ","^1J",72,"^1K",234,"^S","ns"]]],"~i186",["^ ","~i3",[["^ ","^1J",0,"^1K",235]],"~i4",[["^ ","^1J",7,"^1K",235,"^S","cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$2"]],"^2:",[["^ ","^1J",66,"^1K",235,"^S","cljs.env/*compiler*"]],"^1M",[["^ ","^1J",96,"^1K",235,"^S","ns"]]],"~i187",["^ ","~i4",[["^ ","^1J",72,"^1K",238,"^S","state"]],"^29",[["^ ","^1J",78,"^1K",238,"^S","ns"]]],"~i188",["^ ","^29",[["^ ","^1J",3,"^1K",239],["^ ","^1J",18,"^1K",239,"^S","cljs.core/Symbol"]],"^1I",[["^ ","^1J",4,"^1K",239,"^S","ns"]]],"~i189",["^ ","~i8",[["^ ","^1J",3,"^1K",249]],"~i9",[["^ ","^1J",3,"^1K",249,"^S","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]]],"~i190",["^ ","^29",[["^ ","^1J",106,"^1K",249],["^ ","^1J",153,"^1K",249],["^ ","^1J",153,"^1K",249,"^S","cljs.core/deref"],["^ ","^1J",176,"^1K",249],["^ ","^1J",259,"^1K",249],["^ ","^1J",352,"^1K",249]],"^2E",[["^ ","^1J",106,"^1K",249,"^S","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1I",[["^ ","^1J",169,"^1K",249,"^S","state"]],"~i43",[["^ ","^1J",349,"^1K",249,"^S","ns"]]],"~i191",["^ ","^29",[["^ ","^1J",417,"^1K",249],["^ ","^1J",464,"^1K",249],["^ ","^1J",464,"^1K",249,"^S","cljs.core/deref"],["^ ","^1J",487,"^1K",249],["^ ","^1J",570,"^1K",249],["^ ","^1J",663,"^1K",249]],"^2E",[["^ ","^1J",417,"^1K",249,"^S","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1I",[["^ ","^1J",480,"^1K",249,"^S","state"]],"^36",[["^ ","^1J",660,"^1K",249,"^S","ns"]]],"~i192",["^ ","~i8",[["^ ","^1J",87,"^1K",244]],"~i9",[["^ ","^1J",87,"^1K",244,"^S","cljs.core.remove.cljs$core$IFn$_invoke$arity$2"]],"^1U",[["^ ","^1J",134,"^1K",244],["^ ","^1J",145,"^1K",244,"^S","p__45504"],["^ ","^1J",0,"^1K",245],["^ ","^1J",0,"^1K",245],["^ ","^1J",4,"^1K",245,"^S","vec__45505"],["^ ","^1J",17,"^1K",245,"^S","p__45504"],["^ ","^1J",8,"^1K",246],["^ ","^1J",8,"^1K",246,"^S","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1J",52,"^1K",246,"^S","vec__45505"],["^ ","^1J",63,"^1K",246],["^ ","^1J",67,"^1K",246],["^ ","^1J",8,"^1K",247],["^ ","^1J",8,"^1K",247,"^S","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1J",52,"^1K",247,"^S","vec__45505"],["^ ","^1J",63,"^1K",247],["^ ","^1J",67,"^1K",247],["^ ","^1J",0,"^1K",248]],"^1L",[["^ ","^1J",4,"^1K",246,"^S","k"]],"~i24",[["^ ","^1J",4,"^1K",247,"^S","v"]],"~i28",[["^ ","^1J",0,"^1K",248],["^ ","^1J",7,"^1K",248]],"^2Y",[["^ ","^1J",96,"^1K",248,"^S","v"]]],"~i193",["^ ","~i8",[["^ ","^1J",0,"^1K",244],["^ ","^1J",52,"^1K",244]],"~i9",[["^ ","^1J",7,"^1K",244,"^S","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]]],"~i195",["^ ","~i0",[["^ ","^1J",0,"^1K",254],["^ ","^1J",0,"^1K",254],["^ ","^1J",31,"^1K",258],["^ ","^1J",70,"^1K",258,"^S","var_args"],["^ ","^1J",0,"^1K",259],["^ ","^1J",0,"^1K",259],["^ ","^1J",4,"^1K",259,"^S","G__45510"],["^ ","^1J",15,"^1K",259],["^ ","^1J",15,"^1K",259],["^ ","^1J",0,"^1K",260],["^ ","^1J",0,"^1K",260],["^ ","^1J",8,"^1K",260,"^S","G__45510"],["^ ","^1J",5,"^1K",261],["^ ","^1J",0,"^1K",262],["^ ","^1J",7,"^1K",262,"^S","cljs.analyzer.api/ns-resolve"],["^ ","^1J",66,"^1K",262],["^ ","^1J",67,"^1K",262],["^ ","^1J",77,"^1K",262],["^ ","^1J",83,"^1K",262],["^ ","^1J",84,"^1K",262],["^ ","^1J",94,"^1K",262],["^ ","^1J",5,"^1K",265],["^ ","^1J",0,"^1K",266],["^ ","^1J",7,"^1K",266,"^S","cljs.analyzer.api/ns-resolve"],["^ ","^1J",66,"^1K",266],["^ ","^1J",67,"^1K",266],["^ ","^1J",77,"^1K",266],["^ ","^1J",83,"^1K",266],["^ ","^1J",84,"^1K",266],["^ ","^1J",94,"^1K",266],["^ ","^1J",100,"^1K",266],["^ ","^1J",101,"^1K",266],["^ ","^1J",111,"^1K",266],["^ ","^1J",0,"^1K",270],["^ ","^1J",6,"^1K",270],["^ ","^1J",11,"^1K",270,"^S","js/Error"],["^ ","^1J",17,"^1K",270],["^ ","^1J",18,"^1K",270],["^ ","^1J",80,"^1K",270],["^ ","^1J",80,"^1K",270],["^ ","^1J",0,"^1K",275],["^ ","^1J",0,"^1K",275],["^ ","^1J",61,"^1K",275],["^ ","^1J",0,"^1K",276],["^ ","^1J",0,"^1K",279],["^ ","^1J",0,"^1K",279],["^ ","^1J",61,"^1K",279],["^ ","^1J",0,"^1K",280],["^ ","^1J",0,"^1K",280],["^ ","^1J",0,"^1K",281],["^ ","^1J",0,"^1K",282],["^ ","^1J",0,"^1K",282],["^ ","^1J",6,"^1K",282],["^ ","^1J",11,"^1K",282,"^S","js/Error"],["^ ","^1J",17,"^1K",282],["^ ","^1J",0,"^1K",285],["^ ","^1J",0,"^1K",286],["^ ","^1J",0,"^1K",287],["^ ","^1J",0,"^1K",287],["^ ","^1J",6,"^1K",287],["^ ","^1J",11,"^1K",287,"^S","js/Error"],["^ ","^1J",17,"^1K",287],["^ ","^1J",0,"^1K",293],["^ ","^1J",0,"^1K",293],["^ ","^1J",55,"^1K",293],["^ ","^1J",0,"^1K",295]],"~i6",[["^ ","^1J",0,"^1K",258,"^S","cljs.analyzer.api/ns-resolve"],["^ ","^1J",0,"^1K",275,"^S","cljs.analyzer.api/ns-resolve"],["^ ","^1J",0,"^1K",279,"^S","cljs.analyzer.api/ns-resolve"],["^ ","^1J",0,"^1K",293,"^S","cljs.analyzer.api/ns-resolve"]]],"~i198",["^ ","~i4",[["^ ","^1J",72,"^1K",275,"^S","ns"]],"~i7",[["^ ","^1J",75,"^1K",275,"^S","sym"]]],"~i199",["^ ","~i3",[["^ ","^1J",0,"^1K",276]],"~i4",[["^ ","^1J",7,"^1K",276,"^S","cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$3"]],"^2:",[["^ ","^1J",66,"^1K",276,"^S","cljs.env/*compiler*"]],"^1M",[["^ ","^1J",96,"^1K",276,"^S","ns"]],"^1N",[["^ ","^1J",99,"^1K",276,"^S","sym"]]],"~i200",["^ ","~i4",[["^ ","^1J",72,"^1K",279,"^S","state"]],"^29",[["^ ","^1J",78,"^1K",279,"^S","ns"]],"~i13",[["^ ","^1J",81,"^1K",279,"^S","sym"]]],"~i201",["^ ","^29",[["^ ","^1J",3,"^1K",280],["^ ","^1J",18,"^1K",280,"^S","cljs.core/Symbol"]],"^1I",[["^ ","^1J",4,"^1K",280,"^S","ns"]],"^1R",[["^ ","^1J",3,"^1K",285],["^ ","^1J",19,"^1K",285,"^S","cljs.core/Symbol"]],"~i32",[["^ ","^1J",4,"^1K",285,"^S","sym"]]],"~i202",["^ ","~i3",[["^ ","^1J",0,"^1K",290],["^ ","^1J",54,"^1K",290],["^ ","^1J",54,"^1K",290,"^S","cljs.core/deref"],["^ ","^1J",77,"^1K",290],["^ ","^1J",160,"^1K",290],["^ ","^1J",253,"^1K",290]],"~i4",[["^ ","^1J",7,"^1K",290,"^S","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^2K",[["^ ","^1J",70,"^1K",290,"^S","state"]],"^2P",[["^ ","^1J",250,"^1K",290,"^S","ns"]],"^1Q",[["^ ","^1J",306,"^1K",290,"^S","sym"]]],"~i204",["^ ","~i0",[["^ ","^1J",0,"^1K",295],["^ ","^1J",0,"^1K",295],["^ ","^1J",30,"^1K",298],["^ ","^1J",68,"^1K",298,"^S","var_args"],["^ ","^1J",0,"^1K",299],["^ ","^1J",0,"^1K",299],["^ ","^1J",4,"^1K",299,"^S","G__45513"],["^ ","^1J",15,"^1K",299],["^ ","^1J",15,"^1K",299],["^ ","^1J",0,"^1K",300],["^ ","^1J",0,"^1K",300],["^ ","^1J",8,"^1K",300,"^S","G__45513"],["^ ","^1J",5,"^1K",301],["^ ","^1J",0,"^1K",302],["^ ","^1J",7,"^1K",302,"^S","cljs.analyzer.api/remove-ns"],["^ ","^1J",65,"^1K",302],["^ ","^1J",66,"^1K",302],["^ ","^1J",76,"^1K",302],["^ ","^1J",5,"^1K",305],["^ ","^1J",0,"^1K",306],["^ ","^1J",7,"^1K",306,"^S","cljs.analyzer.api/remove-ns"],["^ ","^1J",65,"^1K",306],["^ ","^1J",66,"^1K",306],["^ ","^1J",76,"^1K",306],["^ ","^1J",82,"^1K",306],["^ ","^1J",83,"^1K",306],["^ ","^1J",93,"^1K",306],["^ ","^1J",0,"^1K",310],["^ ","^1J",6,"^1K",310],["^ ","^1J",11,"^1K",310,"^S","js/Error"],["^ ","^1J",17,"^1K",310],["^ ","^1J",18,"^1K",310],["^ ","^1J",80,"^1K",310],["^ ","^1J",80,"^1K",310],["^ ","^1J",0,"^1K",315],["^ ","^1J",0,"^1K",315],["^ ","^1J",60,"^1K",315],["^ ","^1J",0,"^1K",316],["^ ","^1J",0,"^1K",319],["^ ","^1J",0,"^1K",319],["^ ","^1J",60,"^1K",319],["^ ","^1J",0,"^1K",320],["^ ","^1J",0,"^1K",320],["^ ","^1J",0,"^1K",321],["^ ","^1J",0,"^1K",322],["^ ","^1J",0,"^1K",322],["^ ","^1J",6,"^1K",322],["^ ","^1J",11,"^1K",322,"^S","js/Error"],["^ ","^1J",17,"^1K",322],["^ ","^1J",0,"^1K",328],["^ ","^1J",0,"^1K",328],["^ ","^1J",54,"^1K",328],["^ ","^1J",0,"^1K",330]],"~i6",[["^ ","^1J",0,"^1K",298,"^S","cljs.analyzer.api/remove-ns"],["^ ","^1J",0,"^1K",315,"^S","cljs.analyzer.api/remove-ns"],["^ ","^1J",0,"^1K",319,"^S","cljs.analyzer.api/remove-ns"],["^ ","^1J",0,"^1K",328,"^S","cljs.analyzer.api/remove-ns"]]],"~i206",["^ ","~i4",[["^ ","^1J",71,"^1K",315,"^S","ns"]]],"~i207",["^ ","~i3",[["^ ","^1J",0,"^1K",316]],"~i4",[["^ ","^1J",7,"^1K",316,"^S","cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$2"]],"^2X",[["^ ","^1J",65,"^1K",316,"^S","cljs.env/*compiler*"]],"^2;",[["^ ","^1J",95,"^1K",316,"^S","ns"]]],"~i208",["^ ","~i4",[["^ ","^1J",71,"^1K",319,"^S","state"]],"^29",[["^ ","^1J",77,"^1K",319,"^S","ns"]]],"~i209",["^ ","^29",[["^ ","^1J",3,"^1K",320],["^ ","^1J",18,"^1K",320,"^S","cljs.core/Symbol"]],"^1I",[["^ ","^1J",4,"^1K",320,"^S","ns"]]],"~i210",["^ ","~i3",[["^ ","^1J",0,"^1K",325],["^ ","^1J",91,"^1K",325],["^ ","^1J",174,"^1K",325]],"~i4",[["^ ","^1J",7,"^1K",325,"^S","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic"]],"^29",[["^ ","^1J",65,"^1K",325,"^S","state"]],"^1U",[["^ ","^1J",71,"^1K",325,"^S","cljs.core/update-in"]],"^1Q",[["^ ","^1J",272,"^1K",325,"^S","cljs.core/dissoc"]],"^1W",[["^ ","^1J",339,"^1K",325,"^S","ns"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^11"],[1535834828000],["^1A","cljs/tools/reader/impl/utils.cljs"],[1535834828000,"^12","^11","~$clojure.string","~$goog.string"],["^1A","goog/math/math.js"],[1505449243000,"^12","~$goog.array","~$goog.asserts"],["^1A","cljs/env.cljc"],[1535834828000,"^12","^11"],["^1A","goog/array/array.js"],[1505449243000,"^12","^3Q"],["^3M","~$cljs.tools.reader.reader-types"],[1535834828000],["^1A","goog/debug/error.js"],[1505449243000,"^12"],["^1A","cljs/tools/reader/edn.cljs"],[1535834828000,"^12","^11","~$cljs.tools.reader.impl.errors","^3R","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^3O","~$goog.string.StringBuffer"],["^1A","goog/dom/nodetype.js"],[1505449243000,"^12"],["^1A","cljs/tools/reader/impl/inspect.cljs"],[1535834828000,"^12","^11"],["^1A","cljs/tools/reader.cljs"],[1535834828000,"^12","^11","^3R","^3T","^3U","^3S","^3P","^3O","^3W"],["^1A","goog/object/object.js"],[1505449243000,"^12"],"~:SHADOW-TIMESTAMP",[1535834828000,1535834828000],["^1A","goog/math/long.js"],[1505449243000,"^12","^3Q","~$goog.reflect"],["^1A","goog/functions/functions.js"],[1505449243000,"^12"],["^1A","goog/structs/map.js"],[1505449243000,"^12","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^1A","cljs/reader.cljs"],[1535834828000,"^12","^11","^40","^3V","~$cljs.tools.reader.edn","^3W"],["^1A","goog/asserts/asserts.js"],[1505449243000,"^12","~$goog.debug.Error","~$goog.dom.NodeType","^3O"],["^1A","cljs/tagged_literals.cljc"],[1535834828000,"^12","^11","~$cljs.reader"],["^1A","goog/uri/uri.js"],[1505449243000,"^12","^3P","^3Q","^3O","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^3M","~$cljs.analyzer.macros"],[1535834828000],["^1A","goog/base.js"],[1505449243000],["^1A","goog/structs/structs.js"],[1505449243000,"^12","^3P","^40"],["^1A","cljs/tools/reader/impl/errors.cljs"],[1535834828000,"^12","^11","^3R","^3N","~$cljs.tools.reader.impl.inspect"],["^1A","clojure/string.cljs"],[1535834828000,"^12","^11","^3O","^3W"],["^1A","goog/string/string.js"],[1505449243000,"^12"],["^1A","goog/reflect/reflect.js"],[1505449243000,"^12"],["^1A","goog/string/stringbuffer.js"],[1505449243000,"^12"],["^1A","cljs/tools/reader/reader_types.cljs"],[1535834828000,"^12","^11","^3T","^3O","^3W"],["^1A","goog/iter/iter.js"],[1505449243000,"^12","^3P","^3Q","~$goog.functions","~$goog.math"],["^1A","cljs/tools/reader/impl/commons.cljs"],[1535834828000,"^12","^11","^3S","^3R","^3T"],["^1A","cljs/core.cljs"],[1535834828000,"~$goog.math.Long","~$goog.math.Integer","^3O","^40","^3P","~$goog.Uri","^3W"],["^1A","cljs/analyzer/api.cljc"],[1535834828000,"^12","^11","^Y","^["],["^1A","goog/math/integer.js"],[1505449243000,"^12"],["^3M","~$cljs.env.macros"],[1535834828000],["^1A","clojure/set.cljs"],[1535834828000,"^12","^11"],["^1A","goog/uri/utils.js"],[1505449243000,"^12","^3P","^3Q","^3O"],["^1A","cljs/analyzer.cljc"],[1535834828000,"^12","^11","^3O","^3N","~$clojure.set","^Y","~$cljs.tagged-literals","^3V","^3R","^44"],["^3M","^44"],[1535834828000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","This is intended to be a stable api for those who need programmatic access\n  to the analyzer.","^7","cljs/analyzer/api.cljc","^8",9,"^9",5,"^:",9,"^;",22],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H"],"^I",null,"^J",["^K",["^L","^M","^N","^O","^P","^Q","^R"]],"^S","^T","^W",null,"^X",["^ ","^Y","^Y","^Z","^Y","^[","^[","^10","^[","^11","^11","^12","^12"],"^13",["^K",["^14"]],"~:shadow/js-access-global",["^K",["Error"]],"^15",null,"~:defs",["^ ","^L",["^ ","~:protocol-inline",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",163,"^9",7,"^:",163,"^;",14,"~:arglists",["^18",["~$quote",["^18",[["~$sym"],["~$state","^4J"]]]]],"^6","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.","~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",2,"~:method-params",["^18",[["^4J"],["^4K","^4J"]]],"^4H",["^18",[["^4J"],["^4K","^4J"]]],"~:arglists-meta",["^18",[null,null]]]],"^S","~$cljs.analyzer.api/find-ns","^4M",false,"^7","cljs/analyzer/api.cljc","^;",14,"^4L",["^ ","^4M",false,"^4N",2,"^4O",["^18",[["^4J"],["^4K","^4J"]]],"^4H",["^18",[["^4J"],["^4K","^4J"]]],"^4P",["^18",[null,null]]],"^4O",["^18",[["^4J"],["^4K","^4J"]]],"~:protocol-impl",null,"^4P",["^18",[null,null]],"^9",1,"^8",163,"^:",163,"^4N",2,"~:fn-var",true,"^4H",["^18",[["^4J"],["^4K","^4J"]]],"^6","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns."],"^M",["^ ","^4G",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",205,"^9",7,"^:",205,"^;",16,"^4H",["^18",["^4I",["^18",[["^19"],["^4K","^19"]]]]],"^6","Removes the namespace named by the symbol.","^4L",["^ ","^4M",false,"^4N",2,"^4O",["^18",[["^19"],["^4K","^19"]]],"^4H",["^18",[["^19"],["^4K","^19"]]],"^4P",["^18",[null,null]]]],"^S","~$cljs.analyzer.api/remove-ns","^4M",false,"^7","cljs/analyzer/api.cljc","^;",16,"^4L",["^ ","^4M",false,"^4N",2,"^4O",["^18",[["^19"],["^4K","^19"]]],"^4H",["^18",[["^19"],["^4K","^19"]]],"^4P",["^18",[null,null]]],"^4O",["^18",[["^19"],["^4K","^19"]]],"^4R",null,"^4P",["^18",[null,null]],"^9",1,"^8",205,"^:",205,"^4N",2,"^4S",true,"^4H",["^18",[["^19"],["^4K","^19"]]],"^6","Removes the namespace named by the symbol."],"^N",["^ ","^4G",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",183,"^9",7,"^:",183,"^;",17,"^4H",["^18",["^4I",["^18",[["^19"],["^4K","^19"]]]]],"^6","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.","^4L",["^ ","^4M",false,"^4N",2,"^4O",["^18",[["^19"],["^4K","^19"]]],"^4H",["^18",[["^19"],["^4K","^19"]]],"^4P",["^18",[null,null]]]],"^S","~$cljs.analyzer.api/ns-publics","^4M",false,"^7","cljs/analyzer/api.cljc","^;",17,"^4L",["^ ","^4M",false,"^4N",2,"^4O",["^18",[["^19"],["^4K","^19"]]],"^4H",["^18",[["^19"],["^4K","^19"]]],"^4P",["^18",[null,null]]],"^4O",["^18",[["^19"],["^4K","^19"]]],"^4R",null,"^4P",["^18",[null,null]],"^9",1,"^8",183,"^:",183,"^4N",2,"^4S",true,"^4H",["^18",[["^19"],["^4K","^19"]]],"^6","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars."],"~$get-options",["^ ","^4G",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",55,"^9",7,"^:",55,"^;",18,"^4H",["^18",["^4I",["^18",[[],["^4K"]]]]],"^6","Return the compiler options from compiler state.","^4L",["^ ","^4M",false,"^4N",1,"^4O",["^18",[[],["^4K"]]],"^4H",["^18",[[],["^4K"]]],"^4P",["^18",[null,null]]]],"^S","~$cljs.analyzer.api/get-options","^4M",false,"^7","cljs/analyzer/api.cljc","^;",18,"^4L",["^ ","^4M",false,"^4N",1,"^4O",["^18",[[],["^4K"]]],"^4H",["^18",[[],["^4K"]]],"^4P",["^18",[null,null]]],"^4O",["^18",[[],["^4K"]]],"^4R",null,"^4P",["^18",[null,null]],"^9",1,"^8",55,"^:",55,"^4N",1,"^4S",true,"^4H",["^18",[[],["^4K"]]],"^6","Return the compiler options from compiler state."],"~$warning-enabled?",["^ ","^4G",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",43,"^9",7,"^:",43,"^;",23,"^4H",["^18",["^4I",["^18",[["~$warning-type"]]]]],"^6","Test if the given warning-type is enabled."],"^S","~$cljs.analyzer.api/warning-enabled?","^4M",false,"^7","cljs/analyzer/api.cljc","^;",23,"^4O",["^18",[["^4Y"]]],"^4R",null,"^4P",["^18",[null,null]],"^9",1,"^8",43,"^:",43,"^4N",1,"^4S",true,"^4H",["^18",["^4I",["^18",[["^4Y"]]]]],"^6","Test if the given warning-type is enabled."],"^O",["^ ","^4G",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",196,"^9",7,"^:",196,"^;",17,"^4H",["^18",["^4I",["^18",[["^19","^4J"],["^4K","^19","^4J"]]]]],"^6","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.","^4L",["^ ","^4M",false,"^4N",3,"^4O",["^18",[["^19","^4J"],["^4K","^19","^4J"]]],"^4H",["^18",[["^19","^4J"],["^4K","^19","^4J"]]],"^4P",["^18",[null,null]]]],"^S","~$cljs.analyzer.api/ns-resolve","^4M",false,"^7","cljs/analyzer/api.cljc","^;",17,"^4L",["^ ","^4M",false,"^4N",3,"^4O",["^18",[["^19","^4J"],["^4K","^19","^4J"]]],"^4H",["^18",[["^19","^4J"],["^4K","^19","^4J"]]],"^4P",["^18",[null,null]]],"^4O",["^18",[["^19","^4J"],["^4K","^19","^4J"]]],"^4R",null,"^4P",["^18",[null,null]],"^9",1,"^8",196,"^:",196,"^4N",3,"^4S",true,"^4H",["^18",[["^19","^4J"],["^4K","^19","^4J"]]],"^6","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var."],"~$empty-state",["^ ","^4G",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",20,"^9",7,"^:",20,"^;",18,"^4H",["^18",["^4I",["^18",[[]]]]],"^6","Creates an empty compilation state Atom<Map>."],"^S","~$cljs.analyzer.api/empty-state","^4M",false,"^7","cljs/analyzer/api.cljc","^;",18,"^4O",["^18",[[]]],"^4R",null,"^4P",["^18",[null,null]],"^9",1,"^8",20,"^:",20,"^4N",0,"^4S",true,"^4H",["^18",["^4I",["^18",[[]]]]],"^6","Creates an empty compilation state Atom<Map>."],"~$empty-env",["^ ","^4G",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",31,"^9",7,"^:",31,"^;",16,"^4H",["^18",["^4I",["^18",[[]]]]],"^6","Creates an empty analysis environment."],"^S","~$cljs.analyzer.api/empty-env","^4M",false,"^7","cljs/analyzer/api.cljc","^;",16,"^4O",["^18",[[]]],"^4R",null,"^4P",["^18",[null,null]],"^9",1,"^8",31,"^:",31,"^4N",0,"^4S",true,"^4H",["^18",["^4I",["^18",[[]]]]],"^6","Creates an empty analysis environment."],"~$default-warning-handler",["^ ","^4G",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",48,"^9",7,"^:",48,"^;",30,"^4H",["^18",["^4I",["^18",[["^4Y","^Z","~$extra"]]]]],"^6","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^S","~$cljs.analyzer.api/default-warning-handler","^4M",false,"^7","cljs/analyzer/api.cljc","^;",30,"^4O",["^18",[["^4Y","^Z","^55"]]],"^4R",null,"^4P",["^18",[null,null]],"^9",1,"^8",48,"^:",48,"^4N",3,"^4S",true,"^4H",["^18",["^4I",["^18",[["^4Y","^Z","^55"]]]]],"^6","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^P",["^ ","^4G",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",172,"^9",7,"^:",172,"^;",17,"^4H",["^18",["^4I",["^18",[["^19"],["^4K","^19"]]]]],"^6","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.","^4L",["^ ","^4M",false,"^4N",2,"^4O",["^18",[["^19"],["^4K","^19"]]],"^4H",["^18",[["^19"],["^4K","^19"]]],"^4P",["^18",[null,null]]]],"^S","~$cljs.analyzer.api/ns-interns","^4M",false,"^7","cljs/analyzer/api.cljc","^;",17,"^4L",["^ ","^4M",false,"^4N",2,"^4O",["^18",[["^19"],["^4K","^19"]]],"^4H",["^18",[["^19"],["^4K","^19"]]],"^4P",["^18",[null,null]]],"^4O",["^18",[["^19"],["^4K","^19"]]],"^4R",null,"^4P",["^18",[null,null]],"^9",1,"^8",172,"^:",172,"^4N",2,"^4S",true,"^4H",["^18",[["^19"],["^4K","^19"]]],"^6","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars."],"^Q",["^ ","^4G",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",155,"^9",7,"^:",155,"^;",13,"^4H",["^18",["^4I",["^18",[[],["^4K"]]]]],"^6","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.","^4L",["^ ","^4M",false,"^4N",1,"^4O",["^18",[[],["^4K"]]],"^4H",["^18",[[],["^4K"]]],"^4P",["^18",[null,null]]]],"^S","~$cljs.analyzer.api/all-ns","^4M",false,"^7","cljs/analyzer/api.cljc","^;",13,"^4L",["^ ","^4M",false,"^4N",1,"^4O",["^18",[[],["^4K"]]],"^4H",["^18",[[],["^4K"]]],"^4P",["^18",[null,null]]],"^4O",["^18",[[],["^4K"]]],"^4R",null,"^4P",["^18",[null,null]],"^9",1,"^8",155,"^:",155,"^4N",1,"^4S",true,"^4H",["^18",[[],["^4K"]]],"^6","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances."],"^R",["^ ","^4G",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",144,"^9",7,"^:",144,"^;",14,"^4H",["^18",["^4I",["^18",[["^Z","^4J"]]]]],"^6","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"^S","~$cljs.analyzer.api/resolve","^4M",false,"^7","cljs/analyzer/api.cljc","^;",14,"^4O",["^18",[["^Z","^4J"]]],"^4R",null,"^4P",["^18",[null,null]],"^9",1,"^8",144,"^:",144,"^4N",2,"^4S",true,"^4H",["^18",["^4I",["^18",[["^Z","^4J"]]]]],"^6","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"~$get-js-index",["^ ","^4G",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",61,"^9",7,"^:",61,"^;",19,"^4H",["^18",["^4I",["^18",[[],["^4K"]]]]],"^6","Return the currently computed Google Closure js dependency index from the\n  compiler state.","^4L",["^ ","^4M",false,"^4N",1,"^4O",["^18",[[],["^4K"]]],"^4H",["^18",[[],["^4K"]]],"^4P",["^18",[null,null]]]],"^S","~$cljs.analyzer.api/get-js-index","^4M",false,"^7","cljs/analyzer/api.cljc","^;",19,"^4L",["^ ","^4M",false,"^4N",1,"^4O",["^18",[[],["^4K"]]],"^4H",["^18",[[],["^4K"]]],"^4P",["^18",[null,null]]],"^4O",["^18",[[],["^4K"]]],"^4R",null,"^4P",["^18",[null,null]],"^9",1,"^8",61,"^:",61,"^4N",1,"^4S",true,"^4H",["^18",[[],["^4K"]]],"^6","Return the currently computed Google Closure js dependency index from the\n  compiler state."]],"^16",["^ ","^11","^11"],"~:cljs.analyzer/constants",["^ ","^13",["^K",["~:cljs.analyzer/namespaces","~:private","~:macros","~:js-dependency-index","^4F","~:options"]],"~:order",["^5A","^5@","^5=","^5?","^4F","^5>"]],"^1=",["^ ","^14",["^K",[]]],"^1>",["^ "],"^1?",["^12","^11","^Y","^["]],"^V","^T","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^3L",[["^5E","~:static-fns"],true,["^5E","~:elide-asserts"],false,["^5E","~:optimize-constants"],null,["^5E","~:external-config"],null,["^5E","~:tooling-config"],null,["^5E","~:emit-constants"],null,["^5E","~:infer-externs"],true,["^5E","^1F"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5E","~:fn-invoke-direct"],null,["^5E","^1H"],"/dev/null"]]]