["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/d3-voronoi/dist/d3-voronoi.js"],"~:js","shadow$provide.module$node_modules$d3_voronoi$dist$d3_voronoi=function(da,fa,D,L,v){(function(a,b){\"object\"===typeof v&&\"undefined\"!==typeof L?b(v):\"function\"===typeof define&&define.amd?define([\"exports\"],b):b(a.d3=a.d3||{})})(this,function(a){function b(a){return function(){return a}}function p(a){return a[0]}function v(a){return a[1]}function A(){this._=null}function n(a){a.U=a.C=a.L=a.R=a.P=a.N=null}function E(a,b){var d=b.R,e=b.U;e?e.L===b?e.L=d:e.R=d:a._=d;d.U=e;b.U=d;b.R=d.L;b.R&&(b.R.U=b);\nd.L=b}function y(a,b){var d=b.L,e=b.U;e?e.L===b?e.L=d:e.R=d:a._=d;d.U=e;b.U=d;b.L=d.R;b.L&&(b.L.U=b);d.R=b}function D(a){for(;a.L;)a=a.L;return a}function f(a,b,d,e){var f=[null,null],k=ha.push(f)-1;f.left=a;f.right=b;d&&t(f,a,b,d);e&&t(f,b,a,e);V[a.index].halfedges.push(k);V[b.index].halfedges.push(k);return f}function e(a,b,d){b=[b,d];b.left=a;return b}function t(a,b,d,e){a[0]||a[1]?a.left===d?a[1]=e:a[0]=e:(a[0]=e,a.left=b,a.right=d)}function M(a,b,d,e,f){var k=a[0],l=a[1],r=k[0];k=k[1];var n=\n0,p=1,u=l[0]-r;l=l[1]-k;b-=r;if(u||!(0<b)){b/=u;if(0>u){if(b<n)return;b<p&&(p=b)}else if(0<u){if(b>p)return;b>n&&(n=b)}b=e-r;if(u||!(0>b)){b/=u;if(0>u){if(b>p)return;b>n&&(n=b)}else if(0<u){if(b<n)return;b<p&&(p=b)}b=d-k;if(l||!(0<b)){b/=l;if(0>l){if(b<n)return;b<p&&(p=b)}else if(0<l){if(b>p)return;b>n&&(n=b)}b=f-k;if(l||!(0>b)){b/=l;if(0>l){if(b>p)return;b>n&&(n=b)}else if(0<l){if(b<n)return;b<p&&(p=b)}if(!(0<n||1>p))return!0;0<n&&(a[0]=[r+n*u,k+n*l]);1>p&&(a[1]=[r+p*u,k+p*l]);return!0}}}}}function L(a,\nb,d,e,f){var k=a[1];if(k)return!0;var l=a[0],n=a.left,r=a.right;k=n[0];n=n[1];var p=r[0];r=r[1];var u=(k+p)/2;if(r===n){if(u<b||u>=e)return;if(k>p){if(!l)l=[u,d];else if(l[1]>=f)return;k=[u,f]}else{if(!l)l=[u,f];else if(l[1]<d)return;k=[u,d]}}else{var h=(k-p)/(r-n);u=(n+r)/2-h*u;if(-1>h||1<h)if(k>p){if(!l)l=[(d-u)/h,d];else if(l[1]>=f)return;k=[(f-u)/h,f]}else{if(!l)l=[(f-u)/h,f];else if(l[1]<d)return;k=[(d-u)/h,d]}else if(n<r){if(!l)l=[b,h*b+u];else if(l[0]>=e)return;k=[e,h*e+u]}else{if(!l)l=[e,\nh*e+u];else if(l[0]<b)return;k=[b,h*b+u]}}a[0]=l;a[1]=k;return!0}function l(a,b){a=a.site;var d=b.left,e=b.right;a===e&&(e=d,d=a);if(e)return Math.atan2(e[1]-d[1],e[0]-d[0]);a===d?(d=b[1],e=b[0]):(d=b[0],e=b[1]);return Math.atan2(d[0]-e[0],e[1]-d[1])}function J(a,b){return b[+(b.left!==a.site)]}function C(){for(var a=0,b=V.length,d,e,f,k;a<b;++a)if((d=V[a])&&(k=(e=d.halfedges).length)){var n=Array(k),p=Array(k);for(f=0;f<k;++f)n[f]=f,p[f]=l(d,ha[e[f]]);n.sort(function(a,b){return p[b]-p[a]});for(f=\n0;f<k;++f)p[f]=e[n[f]];for(f=0;f<k;++f)e[f]=p[f]}}function k(){n(this);this.x=this.y=this.arc=this.site=this.cy=null}function d(a){var b=a.P,d=a.N;if(b&&d){var e=b.site;b=a.site;var f=d.site;if(e!==f){d=b[0];var l=b[1],n=e[0]-d,r=e[1]-l;e=f[0]-d;var p=f[1]-l;f=2*(n*p-r*e);if(!(f>=-O)){var q=n*n+r*r,u=e*e+p*p;r=(p*q-r*u)/f;e=(n*u-e*q)/f;n=Z.pop()||new k;n.arc=a;n.site=b;n.x=r+d;n.y=(n.cy=e+l)+Math.sqrt(r*r+e*e);a.circle=n;a=null;for(b=ea._;b;)if(n.y<b.y||n.y===b.y&&n.x<=b.x)if(b.L)b=b.L;else{a=b.P;\nbreak}else if(b.R)b=b.R;else{a=b;break}ea.insert(a,n);a||(G=n)}}}}function K(a){var b=a.circle;b&&(b.P||(G=b.N),ea.remove(b),Z.push(b),n(b),a.circle=null)}function aa(){n(this);this.edge=this.site=this.circle=null}function B(a){var b=q.pop()||new aa;b.site=a;return b}function I(a){K(a);x.remove(a);q.push(a);n(a)}function N(a,b){var d=a.site,e=d[0],f=d[1],k=f-b;if(!k)return e;a=a.P;if(!a)return-Infinity;d=a.site;a=d[0];d=d[1];b=d-b;if(!b)return a;var l=a-e,n=1/k-1/b,r=l/b;return n?(-r+Math.sqrt(r*\nr-2*n*(l*l/(-2*b)-d+b/2+f-k/2)))/n+e:(e+a)/2}function da(a,b){return b[1]-a[1]||b[0]-a[0]}function ba(a,b){var k=a.sort(da).pop(),l;ha=[];V=Array(a.length);x=new A;for(ea=new A;;){var n=G;if(k&&(!n||k[1]<n.y||k[1]===n.y&&k[0]<n.x)){if(k[0]!==l||k[1]!==r){var r=l=void 0;n=k;for(var p=n[0],q=n[1],v=x._;v;){var z=N(v,q)-p;if(z>S)v=v.L;else{var u=v;var h=q;var g=u.N;g?h=N(g,h):(u=u.site,h=u[1]===h?u[0]:Infinity);h=p-h;if(h>S){if(!v.R){r=v;break}v=v.R}else{z>-S?(r=v.P,l=v):h>-S?(r=v,l=v.N):r=l=v;break}}}V[n.index]=\n{site:n,halfedges:[]};z=B(n);x.insert(r,z);if(r||l)if(r===l)K(r),l=B(r.site),x.insert(z,l),z.edge=l.edge=f(r.site,z.site),d(r),d(l);else if(l){K(r);K(l);p=r.site;v=p[0];h=p[1];u=n[0]-v;g=n[1]-h;q=l.site;var c=q[0]-v,m=q[1]-h,w=2*(u*m-g*c),y=u*u+g*g,E=c*c+m*m;v=[(m*y-g*E)/w+v,(u*E-c*y)/w+h];t(l.edge,p,q,v);z.edge=f(p,n,null,v);l.edge=f(n,q,null,v);d(r);d(l)}else z.edge=f(r.site,z.site);l=k[0];r=k[1]}k=a.pop()}else if(n){q=n.arc;n=q.circle;p=n.x;v=n.cy;n=[p,v];u=q.P;h=q.N;z=[q];I(q);for(q=u;q.circle&&\nMath.abs(p-q.circle.x)<S&&Math.abs(v-q.circle.cy)<S;)u=q.P,z.unshift(q),I(q),q=u;z.unshift(q);K(q);for(u=h;u.circle&&Math.abs(p-u.circle.x)<S&&Math.abs(v-u.circle.cy)<S;)h=u.N,z.push(u),I(u),u=h;z.push(u);K(u);v=z.length;for(p=1;p<v;++p)u=z[p],q=z[p-1],t(u.edge,q.site,u.site,n);q=z[0];u=z[v-1];u.edge=f(q.site,u.site,null,n);d(q);d(u)}else break}C();if(b){l=+b[0][0];a=+b[0][1];k=+b[1][0];b=+b[1][1];r=ha.length;for(var D;r--;)L(D=ha[r],l,a,k,b)&&M(D,l,a,k,b)&&(Math.abs(D[0][0]-D[1][0])>S||Math.abs(D[0][1]-\nD[1][1])>S)||delete ha[r];D=V.length;r=!0;for(n=0;n<D;++n)if(z=V[n]){var H=z.site;q=z.halfedges;for(p=q.length;p--;)ha[q[p]]||q.splice(p,1);p=0;for(v=q.length;p<v;)if(h=ha[q[p]],u=h[+(h.left===z.site)],g=u[0],c=u[1],m=J(z,ha[q[++p%v]]),h=m[0],m=m[1],Math.abs(g-h)>S||Math.abs(c-m)>S)q.splice(p,0,ha.push(e(H,u,Math.abs(g-l)<S&&b-c>S?[l,Math.abs(h-l)<S?m:b]:Math.abs(c-b)<S&&k-g>S?[Math.abs(m-b)<S?h:k,b]:Math.abs(g-k)<S&&c-a>S?[k,Math.abs(h-k)<S?m:a]:Math.abs(c-a)<S&&g-l>S?[Math.abs(m-a)<S?h:l,a]:null))-\n1),++v;v&&(r=!1)}if(r){p=Infinity;n=0;for(r=null;n<D;++n)if(z=V[n])H=z.site,q=H[0]-l,v=H[1]-a,q=q*q+v*v,q<p&&(p=q,r=z);r&&(n=[l,a],l=[l,b],b=[k,b],a=[k,a],r.halfedges.push(ha.push(e(H=r.site,n,l))-1,ha.push(e(H,l,b))-1,ha.push(e(H,b,a))-1,ha.push(e(H,a,n))-1))}for(n=0;n<D;++n)if(z=V[n])z.halfedges.length||delete V[n]}this.edges=ha;this.cells=V;x=ea=ha=V=null}A.prototype={constructor:A,insert:function(a,b){var d;if(a){b.P=a;if(b.N=a.N)a.N.P=b;a.N=b;if(a.R){for(a=a.R;a.L;)a=a.L;a.L=b}else a.R=b;var e=\na}else this._?(a=D(this._),b.P=null,b.N=a,a.P=a.L=b,e=a):(b.P=b.N=null,this._=b,e=null);b.L=b.R=null;b.U=e;b.C=!0;for(a=b;e&&e.C;)b=e.U,e===b.L?(d=b.R)&&d.C?(e.C=d.C=!1,b.C=!0,a=b):(a===e.R&&(E(this,e),a=e,e=a.U),e.C=!1,b.C=!0,y(this,b)):(d=b.L)&&d.C?(e.C=d.C=!1,b.C=!0,a=b):(a===e.L&&(y(this,e),a=e,e=a.U),e.C=!1,b.C=!0,E(this,b)),e=a.U;this._.C=!1},remove:function(a){a.N&&(a.N.P=a.P);a.P&&(a.P.N=a.N);a.N=a.P=null;var b=a.U,d=a.L,e=a.R;var f=d?e?D(e):d:e;b?b.L===a?b.L=f:b.R=f:this._=f;if(d&&e){var k=\nf.C;f.C=a.C;f.L=d;d.U=f;f!==e?(b=f.U,f.U=a.U,a=f.R,b.L=a,f.R=e,e.U=f):(f.U=b,b=f,a=f.R)}else k=a.C,a=f;a&&(a.U=b);if(!k)if(a&&a.C)a.C=!1;else{do{if(a===this._)break;if(a===b.L){if(a=b.R,a.C&&(a.C=!1,b.C=!0,E(this,b),a=b.R),a.L&&a.L.C||a.R&&a.R.C){a.R&&a.R.C||(a.L.C=!1,a.C=!0,y(this,a),a=b.R);a.C=b.C;b.C=a.R.C=!1;E(this,b);a=this._;break}}else if(a=b.L,a.C&&(a.C=!1,b.C=!0,y(this,b),a=b.L),a.L&&a.L.C||a.R&&a.R.C){a.L&&a.L.C||(a.R.C=!1,a.C=!0,E(this,a),a=b.L);a.C=b.C;b.C=a.L.C=!1;y(this,b);a=this._;\nbreak}a.C=!0;a=b;b=b.U}while(!a.C);a&&(a.C=!1)}}};var Z=[],G,q=[],S=1E-6,O=1E-12,x,V,ea,ha;ba.prototype={constructor:ba,polygons:function(){var a=this.edges;return this.cells.map(function(b){var d=b.halfedges.map(function(d){return J(b,a[d])});d.data=b.site.data;return d})},triangles:function(){var a=[],b=this.edges;this.cells.forEach(function(d,e){if(l=(f=d.halfedges).length){d=d.site;var f,k=-1,l,n=b[f[l-1]];for(n=n.left===d?n.right:n.left;++k<l;){var p=n;n=b[f[k]];n=n.left===d?n.right:n.left;p&&\nn&&e<p.index&&e<n.index&&0>(d[0]-n[0])*(p[1]-d[1])-(d[0]-p[0])*(n[1]-d[1])&&a.push([d.data,p.data,n.data])}}});return a},links:function(){return this.edges.filter(function(a){return a.right}).map(function(a){return{source:a.left.data,target:a.right.data}})},find:function(a,b,d){var e=this,f=e._found||0;var k=e.cells.length;for(var l;!(l=e.cells[f]);)if(++f>=k)return null;k=a-l.site[0];var n=b-l.site[1],p=k*k+n*n;do l=e.cells[k=f],f=null,l.halfedges.forEach(function(d){var k=e.edges[d];d=k.left;if(d!==\nl.site&&d||(d=k.right)){k=a-d[0];var h=b-d[1];k=k*k+h*h;k<p&&(p=k,f=d.index)}});while(null!==f);e._found=k;return null==d||p<=d*d?l.site:null}};a.voronoi=function(){function a(a){return new ba(a.map(function(b,f){var k=[Math.round(d(b,f,a)/S)*S,Math.round(e(b,f,a)/S)*S];k.index=f;k.data=b;return k}),f)}var d=p,e=v,f=null;a.polygons=function(b){return a(b).polygons()};a.links=function(b){return a(b).links()};a.triangles=function(b){return a(b).triangles()};a.x=function(e){return arguments.length?(d=\n\"function\"===typeof e?e:b(+e),a):d};a.y=function(d){return arguments.length?(e=\"function\"===typeof d?d:b(+d),a):e};a.extent=function(b){return arguments.length?(f=null==b?null:[[+b[0][0],+b[0][1]],[+b[1][0],+b[1][1]]],a):f&&[[f[0][0],f[0][1]],[f[1][0],f[1][1]]]};a.size=function(b){return arguments.length?(f=null==b?null:[[0,0],[+b[0],+b[1]]],a):f&&[f[1][0]-f[0][0],f[1][1]-f[0][1]]};return a};Object.defineProperty(a,\"__esModule\",{value:!0})})}","~:source","shadow$provide[\"module$node_modules$d3_voronoi$dist$d3_voronoi\"] = function(global,process,require,module,exports) {\n// https://d3js.org/d3-voronoi/ v1.1.4 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction x(d) {\n  return d[0];\n}\n\nfunction y(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nfunction voronoi() {\n  var x$$1 = x,\n      y$$1 = y,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon) * epsilon, Math.round(y$$1(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n\nexports.voronoi = voronoi;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["right","voronoi","cy","index","find","prototype","L","x","__esModule","d3","edge","polygons","value","R","C","remove","site","_","P","arc","links","halfedges","U","source","cells","edges","y","triangles","target","insert","N","size","_found","circle","data","extent","left","constructor"]],"~:compiled-at",1535846555779,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$d3_voronoi$dist$d3_voronoi.js\",\n\"lineCount\":18,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/d3-voronoi/dist/d3-voronoi.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$d3_voronoi$dist$d3_voronoi\\\"] = function(global,process,require,module,exports) {\\n// https://d3js.org/d3-voronoi/ v1.1.4 Copyright 2018 Mike Bostock\\n(function (global, factory) {\\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\\n(factory((global.d3 = global.d3 || {})));\\n}(this, (function (exports) { 'use strict';\\n\\nfunction constant(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\\nfunction x(d) {\\n  return d[0];\\n}\\n\\nfunction y(d) {\\n  return d[1];\\n}\\n\\nfunction RedBlackTree() {\\n  this._ = null; // root node\\n}\\n\\nfunction RedBlackNode(node) {\\n  node.U = // parent node\\n  node.C = // color - true for red, false for black\\n  node.L = // left node\\n  node.R = // right node\\n  node.P = // previous node\\n  node.N = null; // next node\\n}\\n\\nRedBlackTree.prototype = {\\n  constructor: RedBlackTree,\\n\\n  insert: function(after, node) {\\n    var parent, grandpa, uncle;\\n\\n    if (after) {\\n      node.P = after;\\n      node.N = after.N;\\n      if (after.N) after.N.P = node;\\n      after.N = node;\\n      if (after.R) {\\n        after = after.R;\\n        while (after.L) after = after.L;\\n        after.L = node;\\n      } else {\\n        after.R = node;\\n      }\\n      parent = after;\\n    } else if (this._) {\\n      after = RedBlackFirst(this._);\\n      node.P = null;\\n      node.N = after;\\n      after.P = after.L = node;\\n      parent = after;\\n    } else {\\n      node.P = node.N = null;\\n      this._ = node;\\n      parent = null;\\n    }\\n    node.L = node.R = null;\\n    node.U = parent;\\n    node.C = true;\\n\\n    after = node;\\n    while (parent && parent.C) {\\n      grandpa = parent.U;\\n      if (parent === grandpa.L) {\\n        uncle = grandpa.R;\\n        if (uncle && uncle.C) {\\n          parent.C = uncle.C = false;\\n          grandpa.C = true;\\n          after = grandpa;\\n        } else {\\n          if (after === parent.R) {\\n            RedBlackRotateLeft(this, parent);\\n            after = parent;\\n            parent = after.U;\\n          }\\n          parent.C = false;\\n          grandpa.C = true;\\n          RedBlackRotateRight(this, grandpa);\\n        }\\n      } else {\\n        uncle = grandpa.L;\\n        if (uncle && uncle.C) {\\n          parent.C = uncle.C = false;\\n          grandpa.C = true;\\n          after = grandpa;\\n        } else {\\n          if (after === parent.L) {\\n            RedBlackRotateRight(this, parent);\\n            after = parent;\\n            parent = after.U;\\n          }\\n          parent.C = false;\\n          grandpa.C = true;\\n          RedBlackRotateLeft(this, grandpa);\\n        }\\n      }\\n      parent = after.U;\\n    }\\n    this._.C = false;\\n  },\\n\\n  remove: function(node) {\\n    if (node.N) node.N.P = node.P;\\n    if (node.P) node.P.N = node.N;\\n    node.N = node.P = null;\\n\\n    var parent = node.U,\\n        sibling,\\n        left = node.L,\\n        right = node.R,\\n        next,\\n        red;\\n\\n    if (!left) next = right;\\n    else if (!right) next = left;\\n    else next = RedBlackFirst(right);\\n\\n    if (parent) {\\n      if (parent.L === node) parent.L = next;\\n      else parent.R = next;\\n    } else {\\n      this._ = next;\\n    }\\n\\n    if (left && right) {\\n      red = next.C;\\n      next.C = node.C;\\n      next.L = left;\\n      left.U = next;\\n      if (next !== right) {\\n        parent = next.U;\\n        next.U = node.U;\\n        node = next.R;\\n        parent.L = node;\\n        next.R = right;\\n        right.U = next;\\n      } else {\\n        next.U = parent;\\n        parent = next;\\n        node = next.R;\\n      }\\n    } else {\\n      red = node.C;\\n      node = next;\\n    }\\n\\n    if (node) node.U = parent;\\n    if (red) return;\\n    if (node && node.C) { node.C = false; return; }\\n\\n    do {\\n      if (node === this._) break;\\n      if (node === parent.L) {\\n        sibling = parent.R;\\n        if (sibling.C) {\\n          sibling.C = false;\\n          parent.C = true;\\n          RedBlackRotateLeft(this, parent);\\n          sibling = parent.R;\\n        }\\n        if ((sibling.L && sibling.L.C)\\n            || (sibling.R && sibling.R.C)) {\\n          if (!sibling.R || !sibling.R.C) {\\n            sibling.L.C = false;\\n            sibling.C = true;\\n            RedBlackRotateRight(this, sibling);\\n            sibling = parent.R;\\n          }\\n          sibling.C = parent.C;\\n          parent.C = sibling.R.C = false;\\n          RedBlackRotateLeft(this, parent);\\n          node = this._;\\n          break;\\n        }\\n      } else {\\n        sibling = parent.L;\\n        if (sibling.C) {\\n          sibling.C = false;\\n          parent.C = true;\\n          RedBlackRotateRight(this, parent);\\n          sibling = parent.L;\\n        }\\n        if ((sibling.L && sibling.L.C)\\n          || (sibling.R && sibling.R.C)) {\\n          if (!sibling.L || !sibling.L.C) {\\n            sibling.R.C = false;\\n            sibling.C = true;\\n            RedBlackRotateLeft(this, sibling);\\n            sibling = parent.L;\\n          }\\n          sibling.C = parent.C;\\n          parent.C = sibling.L.C = false;\\n          RedBlackRotateRight(this, parent);\\n          node = this._;\\n          break;\\n        }\\n      }\\n      sibling.C = true;\\n      node = parent;\\n      parent = parent.U;\\n    } while (!node.C);\\n\\n    if (node) node.C = false;\\n  }\\n};\\n\\nfunction RedBlackRotateLeft(tree, node) {\\n  var p = node,\\n      q = node.R,\\n      parent = p.U;\\n\\n  if (parent) {\\n    if (parent.L === p) parent.L = q;\\n    else parent.R = q;\\n  } else {\\n    tree._ = q;\\n  }\\n\\n  q.U = parent;\\n  p.U = q;\\n  p.R = q.L;\\n  if (p.R) p.R.U = p;\\n  q.L = p;\\n}\\n\\nfunction RedBlackRotateRight(tree, node) {\\n  var p = node,\\n      q = node.L,\\n      parent = p.U;\\n\\n  if (parent) {\\n    if (parent.L === p) parent.L = q;\\n    else parent.R = q;\\n  } else {\\n    tree._ = q;\\n  }\\n\\n  q.U = parent;\\n  p.U = q;\\n  p.L = q.R;\\n  if (p.L) p.L.U = p;\\n  q.R = p;\\n}\\n\\nfunction RedBlackFirst(node) {\\n  while (node.L) node = node.L;\\n  return node;\\n}\\n\\nfunction createEdge(left, right, v0, v1) {\\n  var edge = [null, null],\\n      index = edges.push(edge) - 1;\\n  edge.left = left;\\n  edge.right = right;\\n  if (v0) setEdgeEnd(edge, left, right, v0);\\n  if (v1) setEdgeEnd(edge, right, left, v1);\\n  cells[left.index].halfedges.push(index);\\n  cells[right.index].halfedges.push(index);\\n  return edge;\\n}\\n\\nfunction createBorderEdge(left, v0, v1) {\\n  var edge = [v0, v1];\\n  edge.left = left;\\n  return edge;\\n}\\n\\nfunction setEdgeEnd(edge, left, right, vertex) {\\n  if (!edge[0] && !edge[1]) {\\n    edge[0] = vertex;\\n    edge.left = left;\\n    edge.right = right;\\n  } else if (edge.left === right) {\\n    edge[1] = vertex;\\n  } else {\\n    edge[0] = vertex;\\n  }\\n}\\n\\n// Liang\\u2013Barsky line clipping.\\nfunction clipEdge(edge, x0, y0, x1, y1) {\\n  var a = edge[0],\\n      b = edge[1],\\n      ax = a[0],\\n      ay = a[1],\\n      bx = b[0],\\n      by = b[1],\\n      t0 = 0,\\n      t1 = 1,\\n      dx = bx - ax,\\n      dy = by - ay,\\n      r;\\n\\n  r = x0 - ax;\\n  if (!dx && r > 0) return;\\n  r /= dx;\\n  if (dx < 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  } else if (dx > 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  }\\n\\n  r = x1 - ax;\\n  if (!dx && r < 0) return;\\n  r /= dx;\\n  if (dx < 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  } else if (dx > 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  }\\n\\n  r = y0 - ay;\\n  if (!dy && r > 0) return;\\n  r /= dy;\\n  if (dy < 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  } else if (dy > 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  }\\n\\n  r = y1 - ay;\\n  if (!dy && r < 0) return;\\n  r /= dy;\\n  if (dy < 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  } else if (dy > 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  }\\n\\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\\n\\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\\n  return true;\\n}\\n\\nfunction connectEdge(edge, x0, y0, x1, y1) {\\n  var v1 = edge[1];\\n  if (v1) return true;\\n\\n  var v0 = edge[0],\\n      left = edge.left,\\n      right = edge.right,\\n      lx = left[0],\\n      ly = left[1],\\n      rx = right[0],\\n      ry = right[1],\\n      fx = (lx + rx) / 2,\\n      fy = (ly + ry) / 2,\\n      fm,\\n      fb;\\n\\n  if (ry === ly) {\\n    if (fx < x0 || fx >= x1) return;\\n    if (lx > rx) {\\n      if (!v0) v0 = [fx, y0];\\n      else if (v0[1] >= y1) return;\\n      v1 = [fx, y1];\\n    } else {\\n      if (!v0) v0 = [fx, y1];\\n      else if (v0[1] < y0) return;\\n      v1 = [fx, y0];\\n    }\\n  } else {\\n    fm = (lx - rx) / (ry - ly);\\n    fb = fy - fm * fx;\\n    if (fm < -1 || fm > 1) {\\n      if (lx > rx) {\\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\\n        else if (v0[1] >= y1) return;\\n        v1 = [(y1 - fb) / fm, y1];\\n      } else {\\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\\n        else if (v0[1] < y0) return;\\n        v1 = [(y0 - fb) / fm, y0];\\n      }\\n    } else {\\n      if (ly < ry) {\\n        if (!v0) v0 = [x0, fm * x0 + fb];\\n        else if (v0[0] >= x1) return;\\n        v1 = [x1, fm * x1 + fb];\\n      } else {\\n        if (!v0) v0 = [x1, fm * x1 + fb];\\n        else if (v0[0] < x0) return;\\n        v1 = [x0, fm * x0 + fb];\\n      }\\n    }\\n  }\\n\\n  edge[0] = v0;\\n  edge[1] = v1;\\n  return true;\\n}\\n\\nfunction clipEdges(x0, y0, x1, y1) {\\n  var i = edges.length,\\n      edge;\\n\\n  while (i--) {\\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\\n        || !clipEdge(edge, x0, y0, x1, y1)\\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\\n      delete edges[i];\\n    }\\n  }\\n}\\n\\nfunction createCell(site) {\\n  return cells[site.index] = {\\n    site: site,\\n    halfedges: []\\n  };\\n}\\n\\nfunction cellHalfedgeAngle(cell, edge) {\\n  var site = cell.site,\\n      va = edge.left,\\n      vb = edge.right;\\n  if (site === vb) vb = va, va = site;\\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\\n  if (site === va) va = edge[1], vb = edge[0];\\n  else va = edge[0], vb = edge[1];\\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\\n}\\n\\nfunction cellHalfedgeStart(cell, edge) {\\n  return edge[+(edge.left !== cell.site)];\\n}\\n\\nfunction cellHalfedgeEnd(cell, edge) {\\n  return edge[+(edge.left === cell.site)];\\n}\\n\\nfunction sortCellHalfedges() {\\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\\n      var index = new Array(m),\\n          array = new Array(m);\\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\\n      index.sort(function(i, j) { return array[j] - array[i]; });\\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\\n    }\\n  }\\n}\\n\\nfunction clipCells(x0, y0, x1, y1) {\\n  var nCells = cells.length,\\n      iCell,\\n      cell,\\n      site,\\n      iHalfedge,\\n      halfedges,\\n      nHalfedges,\\n      start,\\n      startX,\\n      startY,\\n      end,\\n      endX,\\n      endY,\\n      cover = true;\\n\\n  for (iCell = 0; iCell < nCells; ++iCell) {\\n    if (cell = cells[iCell]) {\\n      site = cell.site;\\n      halfedges = cell.halfedges;\\n      iHalfedge = halfedges.length;\\n\\n      // Remove any dangling clipped edges.\\n      while (iHalfedge--) {\\n        if (!edges[halfedges[iHalfedge]]) {\\n          halfedges.splice(iHalfedge, 1);\\n        }\\n      }\\n\\n      // Insert any border edges as necessary.\\n      iHalfedge = 0, nHalfedges = halfedges.length;\\n      while (iHalfedge < nHalfedges) {\\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\\n              : null)) - 1);\\n          ++nHalfedges;\\n        }\\n      }\\n\\n      if (nHalfedges) cover = false;\\n    }\\n  }\\n\\n  // If there weren\\u2019t any edges, have the closest site cover the extent.\\n  // It doesn\\u2019t matter which corner of the extent we measure!\\n  if (cover) {\\n    var dx, dy, d2, dc = Infinity;\\n\\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\\n      if (cell = cells[iCell]) {\\n        site = cell.site;\\n        dx = site[0] - x0;\\n        dy = site[1] - y0;\\n        d2 = dx * dx + dy * dy;\\n        if (d2 < dc) dc = d2, cover = cell;\\n      }\\n    }\\n\\n    if (cover) {\\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\\n      cover.halfedges.push(\\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\\n        edges.push(createBorderEdge(site, v10, v00)) - 1\\n      );\\n    }\\n  }\\n\\n  // Lastly delete any cells with no edges; these were entirely clipped.\\n  for (iCell = 0; iCell < nCells; ++iCell) {\\n    if (cell = cells[iCell]) {\\n      if (!cell.halfedges.length) {\\n        delete cells[iCell];\\n      }\\n    }\\n  }\\n}\\n\\nvar circlePool = [];\\n\\nvar firstCircle;\\n\\nfunction Circle() {\\n  RedBlackNode(this);\\n  this.x =\\n  this.y =\\n  this.arc =\\n  this.site =\\n  this.cy = null;\\n}\\n\\nfunction attachCircle(arc) {\\n  var lArc = arc.P,\\n      rArc = arc.N;\\n\\n  if (!lArc || !rArc) return;\\n\\n  var lSite = lArc.site,\\n      cSite = arc.site,\\n      rSite = rArc.site;\\n\\n  if (lSite === rSite) return;\\n\\n  var bx = cSite[0],\\n      by = cSite[1],\\n      ax = lSite[0] - bx,\\n      ay = lSite[1] - by,\\n      cx = rSite[0] - bx,\\n      cy = rSite[1] - by;\\n\\n  var d = 2 * (ax * cy - ay * cx);\\n  if (d >= -epsilon2) return;\\n\\n  var ha = ax * ax + ay * ay,\\n      hc = cx * cx + cy * cy,\\n      x = (cy * ha - ay * hc) / d,\\n      y = (ax * hc - cx * ha) / d;\\n\\n  var circle = circlePool.pop() || new Circle;\\n  circle.arc = arc;\\n  circle.site = cSite;\\n  circle.x = x + bx;\\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\\n\\n  arc.circle = circle;\\n\\n  var before = null,\\n      node = circles._;\\n\\n  while (node) {\\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\\n      if (node.L) node = node.L;\\n      else { before = node.P; break; }\\n    } else {\\n      if (node.R) node = node.R;\\n      else { before = node; break; }\\n    }\\n  }\\n\\n  circles.insert(before, circle);\\n  if (!before) firstCircle = circle;\\n}\\n\\nfunction detachCircle(arc) {\\n  var circle = arc.circle;\\n  if (circle) {\\n    if (!circle.P) firstCircle = circle.N;\\n    circles.remove(circle);\\n    circlePool.push(circle);\\n    RedBlackNode(circle);\\n    arc.circle = null;\\n  }\\n}\\n\\nvar beachPool = [];\\n\\nfunction Beach() {\\n  RedBlackNode(this);\\n  this.edge =\\n  this.site =\\n  this.circle = null;\\n}\\n\\nfunction createBeach(site) {\\n  var beach = beachPool.pop() || new Beach;\\n  beach.site = site;\\n  return beach;\\n}\\n\\nfunction detachBeach(beach) {\\n  detachCircle(beach);\\n  beaches.remove(beach);\\n  beachPool.push(beach);\\n  RedBlackNode(beach);\\n}\\n\\nfunction removeBeach(beach) {\\n  var circle = beach.circle,\\n      x = circle.x,\\n      y = circle.cy,\\n      vertex = [x, y],\\n      previous = beach.P,\\n      next = beach.N,\\n      disappearing = [beach];\\n\\n  detachBeach(beach);\\n\\n  var lArc = previous;\\n  while (lArc.circle\\n      && Math.abs(x - lArc.circle.x) < epsilon\\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\\n    previous = lArc.P;\\n    disappearing.unshift(lArc);\\n    detachBeach(lArc);\\n    lArc = previous;\\n  }\\n\\n  disappearing.unshift(lArc);\\n  detachCircle(lArc);\\n\\n  var rArc = next;\\n  while (rArc.circle\\n      && Math.abs(x - rArc.circle.x) < epsilon\\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\\n    next = rArc.N;\\n    disappearing.push(rArc);\\n    detachBeach(rArc);\\n    rArc = next;\\n  }\\n\\n  disappearing.push(rArc);\\n  detachCircle(rArc);\\n\\n  var nArcs = disappearing.length,\\n      iArc;\\n  for (iArc = 1; iArc < nArcs; ++iArc) {\\n    rArc = disappearing[iArc];\\n    lArc = disappearing[iArc - 1];\\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\\n  }\\n\\n  lArc = disappearing[0];\\n  rArc = disappearing[nArcs - 1];\\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\\n\\n  attachCircle(lArc);\\n  attachCircle(rArc);\\n}\\n\\nfunction addBeach(site) {\\n  var x = site[0],\\n      directrix = site[1],\\n      lArc,\\n      rArc,\\n      dxl,\\n      dxr,\\n      node = beaches._;\\n\\n  while (node) {\\n    dxl = leftBreakPoint(node, directrix) - x;\\n    if (dxl > epsilon) node = node.L; else {\\n      dxr = x - rightBreakPoint(node, directrix);\\n      if (dxr > epsilon) {\\n        if (!node.R) {\\n          lArc = node;\\n          break;\\n        }\\n        node = node.R;\\n      } else {\\n        if (dxl > -epsilon) {\\n          lArc = node.P;\\n          rArc = node;\\n        } else if (dxr > -epsilon) {\\n          lArc = node;\\n          rArc = node.N;\\n        } else {\\n          lArc = rArc = node;\\n        }\\n        break;\\n      }\\n    }\\n  }\\n\\n  createCell(site);\\n  var newArc = createBeach(site);\\n  beaches.insert(lArc, newArc);\\n\\n  if (!lArc && !rArc) return;\\n\\n  if (lArc === rArc) {\\n    detachCircle(lArc);\\n    rArc = createBeach(lArc.site);\\n    beaches.insert(newArc, rArc);\\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\\n    attachCircle(lArc);\\n    attachCircle(rArc);\\n    return;\\n  }\\n\\n  if (!rArc) { // && lArc\\n    newArc.edge = createEdge(lArc.site, newArc.site);\\n    return;\\n  }\\n\\n  // else lArc !== rArc\\n  detachCircle(lArc);\\n  detachCircle(rArc);\\n\\n  var lSite = lArc.site,\\n      ax = lSite[0],\\n      ay = lSite[1],\\n      bx = site[0] - ax,\\n      by = site[1] - ay,\\n      rSite = rArc.site,\\n      cx = rSite[0] - ax,\\n      cy = rSite[1] - ay,\\n      d = 2 * (bx * cy - by * cx),\\n      hb = bx * bx + by * by,\\n      hc = cx * cx + cy * cy,\\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\\n\\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\\n  newArc.edge = createEdge(lSite, site, null, vertex);\\n  rArc.edge = createEdge(site, rSite, null, vertex);\\n  attachCircle(lArc);\\n  attachCircle(rArc);\\n}\\n\\nfunction leftBreakPoint(arc, directrix) {\\n  var site = arc.site,\\n      rfocx = site[0],\\n      rfocy = site[1],\\n      pby2 = rfocy - directrix;\\n\\n  if (!pby2) return rfocx;\\n\\n  var lArc = arc.P;\\n  if (!lArc) return -Infinity;\\n\\n  site = lArc.site;\\n  var lfocx = site[0],\\n      lfocy = site[1],\\n      plby2 = lfocy - directrix;\\n\\n  if (!plby2) return lfocx;\\n\\n  var hl = lfocx - rfocx,\\n      aby2 = 1 / pby2 - 1 / plby2,\\n      b = hl / plby2;\\n\\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\\n\\n  return (rfocx + lfocx) / 2;\\n}\\n\\nfunction rightBreakPoint(arc, directrix) {\\n  var rArc = arc.N;\\n  if (rArc) return leftBreakPoint(rArc, directrix);\\n  var site = arc.site;\\n  return site[1] === directrix ? site[0] : Infinity;\\n}\\n\\nvar epsilon = 1e-6;\\nvar epsilon2 = 1e-12;\\nvar beaches;\\nvar cells;\\nvar circles;\\nvar edges;\\n\\nfunction triangleArea(a, b, c) {\\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\\n}\\n\\nfunction lexicographic(a, b) {\\n  return b[1] - a[1]\\n      || b[0] - a[0];\\n}\\n\\nfunction Diagram(sites, extent) {\\n  var site = sites.sort(lexicographic).pop(),\\n      x,\\n      y,\\n      circle;\\n\\n  edges = [];\\n  cells = new Array(sites.length);\\n  beaches = new RedBlackTree;\\n  circles = new RedBlackTree;\\n\\n  while (true) {\\n    circle = firstCircle;\\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\\n      if (site[0] !== x || site[1] !== y) {\\n        addBeach(site);\\n        x = site[0], y = site[1];\\n      }\\n      site = sites.pop();\\n    } else if (circle) {\\n      removeBeach(circle.arc);\\n    } else {\\n      break;\\n    }\\n  }\\n\\n  sortCellHalfedges();\\n\\n  if (extent) {\\n    var x0 = +extent[0][0],\\n        y0 = +extent[0][1],\\n        x1 = +extent[1][0],\\n        y1 = +extent[1][1];\\n    clipEdges(x0, y0, x1, y1);\\n    clipCells(x0, y0, x1, y1);\\n  }\\n\\n  this.edges = edges;\\n  this.cells = cells;\\n\\n  beaches =\\n  circles =\\n  edges =\\n  cells = null;\\n}\\n\\nDiagram.prototype = {\\n  constructor: Diagram,\\n\\n  polygons: function() {\\n    var edges = this.edges;\\n\\n    return this.cells.map(function(cell) {\\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\\n      polygon.data = cell.site.data;\\n      return polygon;\\n    });\\n  },\\n\\n  triangles: function() {\\n    var triangles = [],\\n        edges = this.edges;\\n\\n    this.cells.forEach(function(cell, i) {\\n      if (!(m = (halfedges = cell.halfedges).length)) return;\\n      var site = cell.site,\\n          halfedges,\\n          j = -1,\\n          m,\\n          s0,\\n          e1 = edges[halfedges[m - 1]],\\n          s1 = e1.left === site ? e1.right : e1.left;\\n\\n      while (++j < m) {\\n        s0 = s1;\\n        e1 = edges[halfedges[j]];\\n        s1 = e1.left === site ? e1.right : e1.left;\\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\\n          triangles.push([site.data, s0.data, s1.data]);\\n        }\\n      }\\n    });\\n\\n    return triangles;\\n  },\\n\\n  links: function() {\\n    return this.edges.filter(function(edge) {\\n      return edge.right;\\n    }).map(function(edge) {\\n      return {\\n        source: edge.left.data,\\n        target: edge.right.data\\n      };\\n    });\\n  },\\n\\n  find: function(x, y, radius) {\\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\\n\\n    // Use the previously-found cell, or start with an arbitrary one.\\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\\n\\n    // Traverse the half-edges to find a closer cell, if any.\\n    do {\\n      cell = that.cells[i0 = i1], i1 = null;\\n      cell.halfedges.forEach(function(e) {\\n        var edge = that.edges[e], v = edge.left;\\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\\n        if (v2 < d2) d2 = v2, i1 = v.index;\\n      });\\n    } while (i1 !== null);\\n\\n    that._found = i0;\\n\\n    return radius == null || d2 <= radius * radius ? cell.site : null;\\n  }\\n};\\n\\nfunction voronoi() {\\n  var x$$1 = x,\\n      y$$1 = y,\\n      extent = null;\\n\\n  function voronoi(data) {\\n    return new Diagram(data.map(function(d, i) {\\n      var s = [Math.round(x$$1(d, i, data) / epsilon) * epsilon, Math.round(y$$1(d, i, data) / epsilon) * epsilon];\\n      s.index = i;\\n      s.data = d;\\n      return s;\\n    }), extent);\\n  }\\n\\n  voronoi.polygons = function(data) {\\n    return voronoi(data).polygons();\\n  };\\n\\n  voronoi.links = function(data) {\\n    return voronoi(data).links();\\n  };\\n\\n  voronoi.triangles = function(data) {\\n    return voronoi(data).triangles();\\n  };\\n\\n  voronoi.x = function(_) {\\n    return arguments.length ? (x$$1 = typeof _ === \\\"function\\\" ? _ : constant(+_), voronoi) : x$$1;\\n  };\\n\\n  voronoi.y = function(_) {\\n    return arguments.length ? (y$$1 = typeof _ === \\\"function\\\" ? _ : constant(+_), voronoi) : y$$1;\\n  };\\n\\n  voronoi.extent = function(_) {\\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\\n  };\\n\\n  voronoi.size = function(_) {\\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\\n  };\\n\\n  return voronoi;\\n}\\n\\nexports.voronoi = voronoi;\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\n})));\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"factory\",\"define\",\"amd\",\"d3\",\"constant\",\"x\",\"d\",\"y\",\"RedBlackTree\",\"_\",\"RedBlackNode\",\"node\",\"U\",\"C\",\"L\",\"R\",\"P\",\"N\",\"RedBlackRotateLeft\",\"tree\",\"q\",\"parent\",\"RedBlackRotateRight\",\"RedBlackFirst\",\"createEdge\",\"left\",\"right\",\"v0\",\"v1\",\"edge\",\"index\",\"edges\",\"push\",\"setEdgeEnd\",\"cells\",\"halfedges\",\"createBorderEdge\",\"vertex\",\"clipEdge\",\"x0\",\"y0\",\"x1\",\"y1\",\"a\",\"b\",\"ax\",\"ay\",\"t0\",\"t1\",\"dx\",\"bx\",\"dy\",\"by\",\"r\",\"connectEdge\",\"lx\",\"ly\",\"rx\",\"ry\",\"fx\",\"fm\",\"fb\",\"cellHalfedgeAngle\",\"cell\",\"site\",\"va\",\"vb\",\"Math\",\"atan2\",\"cellHalfedgeStart\",\"sortCellHalfedges\",\"i\",\"n\",\"length\",\"j\",\"m\",\"Array\",\"array\",\"sort\",\"Circle\",\"arc\",\"cy\",\"attachCircle\",\"lArc\",\"rArc\",\"lSite\",\"cSite\",\"rSite\",\"cx\",\"epsilon2\",\"ha\",\"hc\",\"circle\",\"circlePool\",\"pop\",\"sqrt\",\"before\",\"circles\",\"insert\",\"firstCircle\",\"detachCircle\",\"remove\",\"Beach\",\"createBeach\",\"beach\",\"beachPool\",\"detachBeach\",\"beaches\",\"leftBreakPoint\",\"directrix\",\"rfocx\",\"rfocy\",\"pby2\",\"Infinity\",\"lfocx\",\"lfocy\",\"plby2\",\"hl\",\"aby2\",\"lexicographic\",\"Diagram\",\"sites\",\"extent\",\"dxl\",\"epsilon\",\"dxr\",\"newArc\",\"hb\",\"previous\",\"next\",\"disappearing\",\"abs\",\"unshift\",\"nArcs\",\"iArc\",\"nCells\",\"cover\",\"iCell\",\"iHalfedge\",\"splice\",\"nHalfedges\",\"endX\",\"end\",\"endY\",\"start\",\"startX\",\"startY\",\"dc\",\"d2\",\"v00\",\"v01\",\"v11\",\"v10\",\"prototype\",\"constructor\",\"after\",\"uncle\",\"grandpa\",\"red\",\"sibling\",\"polygons\",\"map\",\"polygon\",\"data\",\"triangles\",\"forEach\",\"e1\",\"s1\",\"s0\",\"links\",\"filter\",\"source\",\"target\",\"find\",\"radius\",\"that\",\"i1\",\"_found\",\"i0\",\"e\",\"v\",\"vx\",\"vy\",\"v2\",\"voronoi\",\"s\",\"round\",\"x$$1\",\"y$$1\",\"voronoi.polygons\",\"voronoi.links\",\"voronoi.triangles\",\"voronoi.x\",\"arguments\",\"voronoi.y\",\"voronoi.extent\",\"size\",\"voronoi.size\",\"Object\",\"defineProperty\",\"value\"]\n}\n"]