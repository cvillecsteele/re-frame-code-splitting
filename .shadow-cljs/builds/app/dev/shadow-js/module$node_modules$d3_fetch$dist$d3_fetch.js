["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/d3-fetch/dist/d3-fetch.js"],"~:js","shadow$provide.module$node_modules$d3_fetch$dist$d3_fetch=function(da,fa,D,L,v){(function(a,b){\"object\"===typeof v&&\"undefined\"!==typeof L?b(v,D(\"module$node_modules$d3_dsv$dist$d3_dsv\")):\"function\"===typeof define&&define.amd?define([\"exports\",\"d3-dsv\"],b):b(a.d3=a.d3||{},a.d3)})(this,function(a,b){function p(a){if(!a.ok)throw Error(a.status+\" \"+a.statusText);return a.blob()}function v(a){if(!a.ok)throw Error(a.status+\" \"+a.statusText);return a.arrayBuffer()}function A(a){if(!a.ok)throw Error(a.status+\n\" \"+a.statusText);return a.text()}function n(a,b){return fetch(a,b).then(A)}function E(a){return function(b,e,l){2===arguments.length&&\"function\"===typeof e&&(l=e,e=void 0);return n(b,e).then(function(b){return a(b,l)})}}function y(a){if(!a.ok)throw Error(a.status+\" \"+a.statusText);return a.json()}function Q(a){return function(b,e){return n(b,e).then(function(b){return(new DOMParser).parseFromString(b,a)})}}var f=E(b.csvParse),e=E(b.tsvParse),t=Q(\"application/xml\"),M=Q(\"text/html\"),P=Q(\"image/svg+xml\");\na.blob=function(a,b){return fetch(a,b).then(p)};a.buffer=function(a,b){return fetch(a,b).then(v)};a.dsv=function(a,e,f,k){3===arguments.length&&\"function\"===typeof f&&(k=f,f=void 0);var d=b.dsvFormat(a);return n(e,f).then(function(a){return d.parse(a,k)})};a.csv=f;a.tsv=e;a.image=function(a,b){return new Promise(function(e,k){var d=new Image,l;for(l in b)d[l]=b[l];d.onerror=k;d.onload=function(){e(d)};d.src=a})};a.json=function(a,b){return fetch(a,b).then(y)};a.text=n;a.xml=t;a.html=M;a.svg=P;Object.defineProperty(a,\n\"__esModule\",{value:!0})})}","~:source","shadow$provide[\"module$node_modules$d3_fetch$dist$d3_fetch\"] = function(global,process,require,module,exports) {\n// https://d3js.org/d3-fetch/ v1.1.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dsv')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dsv'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Dsv) { 'use strict';\n\nfunction responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nfunction blob(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n\nfunction responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nfunction buffer(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n\nfunction responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nfunction text(input, init) {\n  return fetch(input, init).then(responseText);\n}\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nfunction dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = d3Dsv.dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nvar csv = dsvParse(d3Dsv.csvParse);\nvar tsv = dsvParse(d3Dsv.tsvParse);\n\nfunction image(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n\nfunction responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nfunction json(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text$$1) {\n      return (new DOMParser).parseFromString(text$$1, type);\n    });\n  };\n}\n\nvar xml = parser(\"application/xml\");\n\nvar html = parser(\"text/html\");\n\nvar svg = parser(\"image/svg+xml\");\n\nexports.blob = blob;\nexports.buffer = buffer;\nexports.dsv = dsv;\nexports.csv = csv;\nexports.tsv = tsv;\nexports.image = image;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.html = html;\nexports.svg = svg;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$d3_dsv$dist$d3_dsv","~$shadow.js"]],"~:properties",["^5",["dsv","json","xml","onerror","image","blob","__esModule","csv","svg","d3","src","buffer","value","text","tsv","onload","html"]],"~:compiled-at",1535846555711,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$d3_fetch$dist$d3_fetch.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/d3-fetch/dist/d3-fetch.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$d3_fetch$dist$d3_fetch\\\"] = function(global,process,require,module,exports) {\\n// https://d3js.org/d3-fetch/ v1.1.2 Copyright 2018 Mike Bostock\\n(function (global, factory) {\\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dsv')) :\\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dsv'], factory) :\\n(factory((global.d3 = global.d3 || {}),global.d3));\\n}(this, (function (exports,d3Dsv) { 'use strict';\\n\\nfunction responseBlob(response) {\\n  if (!response.ok) throw new Error(response.status + \\\" \\\" + response.statusText);\\n  return response.blob();\\n}\\n\\nfunction blob(input, init) {\\n  return fetch(input, init).then(responseBlob);\\n}\\n\\nfunction responseArrayBuffer(response) {\\n  if (!response.ok) throw new Error(response.status + \\\" \\\" + response.statusText);\\n  return response.arrayBuffer();\\n}\\n\\nfunction buffer(input, init) {\\n  return fetch(input, init).then(responseArrayBuffer);\\n}\\n\\nfunction responseText(response) {\\n  if (!response.ok) throw new Error(response.status + \\\" \\\" + response.statusText);\\n  return response.text();\\n}\\n\\nfunction text(input, init) {\\n  return fetch(input, init).then(responseText);\\n}\\n\\nfunction dsvParse(parse) {\\n  return function(input, init, row) {\\n    if (arguments.length === 2 && typeof init === \\\"function\\\") row = init, init = undefined;\\n    return text(input, init).then(function(response) {\\n      return parse(response, row);\\n    });\\n  };\\n}\\n\\nfunction dsv(delimiter, input, init, row) {\\n  if (arguments.length === 3 && typeof init === \\\"function\\\") row = init, init = undefined;\\n  var format = d3Dsv.dsvFormat(delimiter);\\n  return text(input, init).then(function(response) {\\n    return format.parse(response, row);\\n  });\\n}\\n\\nvar csv = dsvParse(d3Dsv.csvParse);\\nvar tsv = dsvParse(d3Dsv.tsvParse);\\n\\nfunction image(input, init) {\\n  return new Promise(function(resolve, reject) {\\n    var image = new Image;\\n    for (var key in init) image[key] = init[key];\\n    image.onerror = reject;\\n    image.onload = function() { resolve(image); };\\n    image.src = input;\\n  });\\n}\\n\\nfunction responseJson(response) {\\n  if (!response.ok) throw new Error(response.status + \\\" \\\" + response.statusText);\\n  return response.json();\\n}\\n\\nfunction json(input, init) {\\n  return fetch(input, init).then(responseJson);\\n}\\n\\nfunction parser(type) {\\n  return function(input, init)  {\\n    return text(input, init).then(function(text$$1) {\\n      return (new DOMParser).parseFromString(text$$1, type);\\n    });\\n  };\\n}\\n\\nvar xml = parser(\\\"application/xml\\\");\\n\\nvar html = parser(\\\"text/html\\\");\\n\\nvar svg = parser(\\\"image/svg+xml\\\");\\n\\nexports.blob = blob;\\nexports.buffer = buffer;\\nexports.dsv = dsv;\\nexports.csv = csv;\\nexports.tsv = tsv;\\nexports.image = image;\\nexports.json = json;\\nexports.text = text;\\nexports.xml = xml;\\nexports.html = html;\\nexports.svg = svg;\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\n})));\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"factory\",\"define\",\"amd\",\"d3\",\"d3Dsv\",\"responseBlob\",\"response\",\"ok\",\"Error\",\"status\",\"statusText\",\"blob\",\"responseArrayBuffer\",\"arrayBuffer\",\"responseText\",\"text\",\"input\",\"init\",\"fetch\",\"then\",\"dsvParse\",\"parse\",\"row\",\"arguments\",\"length\",\"undefined\",\"responseJson\",\"json\",\"parser\",\"type\",\"text$$1\",\"parseFromString\",\"DOMParser\",\"csv\",\"csvParse\",\"tsv\",\"tsvParse\",\"xml\",\"html\",\"svg\",\"buffer\",\"dsv\",\"delimiter\",\"format\",\"dsvFormat\",\"image\",\"Promise\",\"resolve\",\"reject\",\"Image\",\"key\",\"onerror\",\"onload\",\"image.onload\",\"src\",\"Object\",\"defineProperty\",\"value\"]\n}\n"]